<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="5.0" jmeter="5.4.3">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="pp2" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments" guiclass="ArgumentsPanel" testclass="Arguments" enabled="true">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</stringProp>
          </elementProp>
          <elementProp name="x-client-device" elementType="Header">
            <stringProp name="Header.name">x-client-device</stringProp>
            <stringProp name="Header.value">Mobile</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">preprod2.tataunistore.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">ppapi.tatadigital.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">www.tataque.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">app.launchdarkly.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">preprodclixtream.tatacliq.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_6" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_6</stringProp>
            <stringProp name="Argument.value">www.google-analytics.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_7" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_7</stringProp>
            <stringProp name="Argument.value">tataunistore.tt.omtrdc.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_8" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_8</stringProp>
            <stringProp name="Argument.value">events.launchdarkly.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_9" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_9</stringProp>
            <stringProp name="Argument.value">googleads4.g.doubleclick.net</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_10" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_10</stringProp>
            <stringProp name="Argument.value">bom-col.eum-appdynamics.com</stringProp>
            <stringProp name="Argument.metadata">=</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <stringProp name="HTTPSampler.domain"></stringProp>
        <stringProp name="HTTPSampler.port"></stringProp>
        <stringProp name="HTTPSampler.protocol"></stringProp>
        <stringProp name="HTTPSampler.contentEncoding"></stringProp>
        <stringProp name="HTTPSampler.path"></stringProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <stringProp name="HTTPSampler.concurrentPool">6</stringProp>
        <stringProp name="HTTPSampler.connect_timeout"></stringProp>
        <stringProp name="HTTPSampler.response_timeout"></stringProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
        <boolProp name="DNSCacheManager.isCustomResolver">false</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager" enabled="true">
        <collectionProp name="AuthManager.auth_list"/>
        <boolProp name="AuthManager.controlledByThreadGroup">false</boolProp>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
        <boolProp name="CookieManager.controlledByThreadGroup">false</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager" enabled="true">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
        <boolProp name="CacheManager.controlledByThread">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController" guiclass="LoopControlPanel" testclass="LoopController" enabled="true">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <stringProp name="ThreadGroup.num_threads">1</stringProp>
        <stringProp name="ThreadGroup.ramp_time">1</stringProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <stringProp name="ThreadGroup.duration">0</stringProp>
        <stringProp name="ThreadGroup.delay">0</stringProp>
        <boolProp name="ThreadGroup.same_user_on_next_iteration">true</boolProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testclass="TransactionController" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
          <boolProp name="TransactionController.parent">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Home" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ppapi Analytics-engine" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">analytics-engine/config/v2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Site-Origin" elementType="Header">
                  <stringProp name="Header.name">Site-Origin</stringProp>
                  <stringProp name="Header.value">https://preprod2.tataunistore.com</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Client-Id" elementType="Header">
                  <stringProp name="Header.name">Client-Id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://preprod2.tataunistore.com/marketplacewebservices/v2/mpl/products/searchab/?sessionUID=ljpfngfykjw2wa6h&amp;channel=web" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="sessionUID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sessionUID</stringProp>
                  <stringProp name="Argument.value">ljpfngfykjw2wa6h</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">channel</stringProp>
                  <stringProp name="Argument.value">web</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/products/searchab/</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">Mon, 01 Jan 1990 00:00:00 GMT</stringProp>
                </elementProp>
                <elementProp name="Server" elementType="Header">
                  <stringProp name="Header.name">Server</stringProp>
                  <stringProp name="Header.value">Microsoft-IIS/8.0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-store, must-revalidate, no-cache, max-age=0</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getApplicationProperties-propertyNames=is_MPL_WEB_MNL_Login_True_V1" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="propertyNames" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">propertyNames</stringProp>
                  <stringProp name="Argument.value">is_MPL_WEB_MNL_Login_True_V1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">otatacliq/getApplicationProperties.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get desktopservice/header" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/cms/desktopservice/header</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">Mon, 01 Jan 1990 00:00:00 GMT</stringProp>
                </elementProp>
                <elementProp name="Server" elementType="Header">
                  <stringProp name="Header.name">Server</stringProp>
                  <stringProp name="Header.value">Microsoft-IIS/8.0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-store, must-revalidate, no-cache, max-age=0</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://app.launchdarkly.com/sdk/goals/641c090d7fb3051356dd7e64" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/goals/641c090d7fb3051356dd7e64</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="X-LaunchDarkly-User-Agent" elementType="Header">
                  <stringProp name="Header.name">X-LaunchDarkly-User-Agent</stringProp>
                  <stringProp name="Header.value">JSClient/3.1.3</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="getApplicationProperties-propertyNames=isNeupassEnabled" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="propertyNames" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">propertyNames</stringProp>
                  <stringProp name="Argument.value">isNeupassEnabled</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">otatacliq/getApplicationProperties.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://app.launchdarkly.com/sdk/goals/641c090d7fb3051356dd7e64" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/goals/641c090d7fb3051356dd7e64</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="X-LaunchDarkly-User-Agent" elementType="Header">
                  <stringProp name="Header.name">X-LaunchDarkly-User-Agent</stringProp>
                  <stringProp name="Header.value">JSClient/3.1.3</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="get desktopservice/footer" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/cms/desktopservice/footer</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">Mon, 01 Jan 1990 00:00:00 GMT</stringProp>
                </elementProp>
                <elementProp name="Server" elementType="Header">
                  <stringProp name="Header.name">Server</stringProp>
                  <stringProp name="Header.value">Microsoft-IIS/8.0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-store, must-revalidate, no-cache, max-age=0</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://app.launchdarkly.com/sdk/evalx/641c090d7fb3051356dd7e64/contexts/eyJraW5kIjoidXNlciIsImtleSI6ImFub255bW91cyJ9" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/evalx/641c090d7fb3051356dd7e64/contexts/eyJraW5kIjoidXNlciIsImtleSI6ImFub255bW91cyJ9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="X-LaunchDarkly-User-Agent" elementType="Header">
                  <stringProp name="Header.name">X-LaunchDarkly-User-Agent</stringProp>
                  <stringProp name="Header.value">JSClient/3.1.3</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://app.launchdarkly.com/sdk/evalx/641c090d7fb3051356dd7e64/contexts/eyJraW5kIjoidXNlciIsImtleSI6ImFub255bW91cyJ9" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">sdk/evalx/641c090d7fb3051356dd7e64/contexts/eyJraW5kIjoidXNlciIsImtleSI6ImFub255bW91cyJ9</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="X-LaunchDarkly-User-Agent" elementType="Header">
                  <stringProp name="Header.name">X-LaunchDarkly-User-Agent</stringProp>
                  <stringProp name="Header.value">JSClient/3.1.3</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="check-session" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;codeChallenge&quot;:&quot;dm8HsN0yUDymh502lJzJ76EQVmnr4NanddxxdVfw1Zc&quot;,&quot;redirectUrl&quot;:&quot;https://preprod2.tataunistore.com/&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/sso/check-session</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">https://ppapi.tatadigital.com</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.google-analytics.com/j/collect?v=1&amp;_v=j101&amp;a=1028330421&amp;t=pageview&amp;_s=1&amp;dl=https%3A%2F%2Fpreprod2.tataunistore.com%2F&amp;dp=homepage&amp;ul=en-gb&amp;de=UTF-8&amp;dt=homepage&amp;sd=24-bit&amp;sr=1360x768&amp;vp=1360x579&amp;je=0&amp;_u=CAGAAAABAAAAACAC~&amp;jid=&amp;gjid=&amp;cid=751837002.1685532151&amp;tid=UA-107496842-2&amp;_gid=571333843.1688544252&amp;_slc=1&amp;z=1649881424" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="a" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">a</stringProp>
                  <stringProp name="Argument.value">1028330421</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="de" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">de</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="jid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">jid</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_slc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_slc</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dl</stringProp>
                  <stringProp name="Argument.value">https://preprod2.tataunistore.com/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="dp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dp</stringProp>
                  <stringProp name="Argument.value">homepage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="gjid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">gjid</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tid</stringProp>
                  <stringProp name="Argument.value">UA-107496842-2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="_gid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_gid</stringProp>
                  <stringProp name="Argument.value">571333843.1688544252</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dt</stringProp>
                  <stringProp name="Argument.value">homepage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sd</stringProp>
                  <stringProp name="Argument.value">24-bit</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">pageview</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_s</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">_u</stringProp>
                  <stringProp name="Argument.value">CAGAAAABAAAAACAC~</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="_v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">_v</stringProp>
                  <stringProp name="Argument.value">j101</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ul" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ul</stringProp>
                  <stringProp name="Argument.value">en-gb</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="vp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">vp</stringProp>
                  <stringProp name="Argument.value">1360x579</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="z" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">z</stringProp>
                  <stringProp name="Argument.value">1649881424</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="je" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">je</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">1360x768</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cid</stringProp>
                  <stringProp name="Argument.value">751837002.1685532151</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">j/collect</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://tataunistore.tt.omtrdc.net/rest/v1/delivery?client=tataunistore&amp;sessionId=e47dd6790acc429abd94b4881ce08167&amp;version=2.8.0" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;requestId&quot;:&quot;bb75ca318ecd4663a3098ddb583dd709&quot;,&quot;context&quot;:{&quot;userAgent&quot;:&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36&quot;,&quot;timeOffsetInMinutes&quot;:330,&quot;channel&quot;:&quot;web&quot;,&quot;screen&quot;:{&quot;width&quot;:1360,&quot;height&quot;:768,&quot;orientation&quot;:&quot;landscape&quot;,&quot;colorDepth&quot;:24,&quot;pixelRatio&quot;:1},&quot;window&quot;:{&quot;width&quot;:1355,&quot;height&quot;:579},&quot;browser&quot;:{&quot;host&quot;:&quot;preprod2.tataunistore.com&quot;,&quot;webGLRenderer&quot;:&quot;ANGLE (Intel, Mesa Intel(R) HD Graphics 520 (SKL GT2), OpenGL 4.6)&quot;},&quot;address&quot;:{&quot;url&quot;:&quot;https://preprod2.tataunistore.com/&quot;,&quot;referringUrl&quot;:&quot;&quot;}},&quot;id&quot;:{&quot;tntId&quot;:&quot;5b1cfd37112048bda36bc800cde74b35.31_0&quot;,&quot;marketingCloudVisitorId&quot;:&quot;90733495637996907914382646738895101468&quot;},&quot;experienceCloud&quot;:{&quot;audienceManager&quot;:{&quot;locationHint&quot;:12,&quot;blob&quot;:&quot;RKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y&quot;},&quot;analytics&quot;:{&quot;logging&quot;:&quot;server_side&quot;,&quot;supplementalDataId&quot;:&quot;32F6C4F83AD82942-5CD0C207E0000BCC&quot;,&quot;trackingServer&quot;:&quot;tataunistorelimited.sc.omtrdc.net&quot;}},&quot;execute&quot;:{&quot;pageLoad&quot;:{}},&quot;prefetch&quot;:{&quot;views&quot;:[{}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">rest/v1/delivery?client=tataunistore&amp;sessionId=g5iirwzrNEFf4fxV18AgxAcqXkFvBBRk7VGuk0GGGnGmCH8s&amp;version=2.8.0</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://preprodclixtream.tatacliq.com/com.clixtream.inviz/tp2" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;schema&quot;:&quot;iglu:com.snowplowanalytics.snowplow/payload_data/jsonschema/1-0-4&quot;,&quot;data&quot;:[{&quot;e&quot;:&quot;pv&quot;,&quot;url&quot;:&quot;https://preprod2.tataunistore.com/&quot;,&quot;page&quot;:&quot;Online Shopping Site in India - Upto 60% Off On Mobiles, Electronics &amp; Fashion at Tata CLiQ&quot;,&quot;eid&quot;:&quot;1242d4f5-f0e8-4b11-915a-6541b8820015&quot;,&quot;tv&quot;:&quot;js-3.1.0&quot;,&quot;tna&quot;:&quot;tata_unistore_web_test&quot;,&quot;aid&quot;:&quot;tata_marketplace_test&quot;,&quot;p&quot;:&quot;web&quot;,&quot;cookie&quot;:&quot;1&quot;,&quot;cs&quot;:&quot;UTF-8&quot;,&quot;lang&quot;:&quot;en-GB&quot;,&quot;res&quot;:&quot;1360x768&quot;,&quot;cd&quot;:&quot;24&quot;,&quot;tz&quot;:&quot;Asia/Calcutta&quot;,&quot;dtm&quot;:&quot;1688570830799&quot;,&quot;vp&quot;:&quot;1360x579&quot;,&quot;ds&quot;:&quot;1355x1225&quot;,&quot;vid&quot;:&quot;100&quot;,&quot;sid&quot;:&quot;a1df4c7c-e7ec-4061-9385-ef4d281be5b9&quot;,&quot;duid&quot;:&quot;4bca1653-3d9c-48d2-900e-fd86eae61d4c&quot;,&quot;cx&quot;:&quot;eyJzY2hlbWEiOiJpZ2x1OmNvbS5zbm93cGxvd2FuYWx5dGljcy5zbm93cGxvdy9jb250ZXh0cy9qc29uc2NoZW1hLzEtMC0wIiwiZGF0YSI6W3sic2NoZW1hIjoiaWdsdTpjb20udGF0YXVuaXN0b3JlL3BhZ2VfaW5mby9qc29uc2NoZW1hLzEtMC0wIiwiZGF0YSI6eyJwYWdlX3R5cGUiOiJIb21lcGFnZSIsInVzZXJfc3RhdHVzIjoiZ3Vlc3QiLCJ1c2VyX2lkIjpudWxsfX0seyJzY2hlbWEiOiJpZ2x1OmNvbS5zbm93cGxvd2FuYWx5dGljcy5zbm93cGxvdy93ZWJfcGFnZS9qc29uc2NoZW1hLzEtMC0wIiwiZGF0YSI6eyJpZCI6IjM0NjQ2ODFmLThmMjUtNDE4Mi1iNWEyLTRhYTdiNDRlNzBhMCJ9fV19&quot;,&quot;stm&quot;:&quot;1688570830805&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">com.clixtream.inviz/tp2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.launchdarkly.com/events/diagnostic/641c090d7fb3051356dd7e64" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;kind&quot;:&quot;diagnostic-combined&quot;,&quot;id&quot;:{&quot;diagnosticId&quot;:&quot;68e509a0-1b48-11ee-b12c-15c7496d520b&quot;,&quot;sdkKeySuffix&quot;:&quot;dd7e64&quot;},&quot;creationDate&quot;:1688570832798,&quot;dataSinceDate&quot;:1688570830650,&quot;droppedEvents&quot;:0,&quot;eventsInLastBatch&quot;:0,&quot;streamInits&quot;:[],&quot;sdk&quot;:{&quot;name&quot;:&quot;js-client-sdk&quot;,&quot;version&quot;:&quot;3.1.3&quot;},&quot;configuration&quot;:{&quot;customBaseURI&quot;:false,&quot;customStreamURI&quot;:false,&quot;customEventsURI&quot;:false,&quot;eventsCapacity&quot;:100,&quot;eventsFlushIntervalMillis&quot;:2000,&quot;reconnectTimeMillis&quot;:1000,&quot;streamingDisabled&quot;:true,&quot;allAttributesPrivate&quot;:false,&quot;diagnosticRecordingIntervalMillis&quot;:900000,&quot;usingSecureMode&quot;:false,&quot;bootstrapMode&quot;:false,&quot;fetchGoalsDisabled&quot;:false,&quot;sendEventsOnlyForVariation&quot;:false},&quot;platform&quot;:{&quot;name&quot;:&quot;JS&quot;}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">events/diagnostic/641c090d7fb3051356dd7e64</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="X-LaunchDarkly-User-Agent" elementType="Header">
                  <stringProp name="Header.name">X-LaunchDarkly-User-Agent</stringProp>
                  <stringProp name="Header.value">JSClient/3.1.3</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ppapi.tatadigital-analytics-engine" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;secure&quot;: &quot;true&quot;, &quot;ePayload&quot;: &quot;eyJpc1JlZGlyZWN0ZWRGcm9tVENQIjpmYWxzZSwidXJsIjoiaHR0cHM6Ly9wcmVwcm9kMi50YXRhdW5pc3RvcmUuY29tLyIsImV2ZW50RGF0YSI6W3sidGltZXN0YW1wIjoxNjg4NTcwODMyNzgzLCJkYXRhIjoie1wiZXZlbnRcIjpcInBhZ2VMb2FkXCIsXCJwYXlsb2FkXCI6e1widXJsXCI6XCJodHRwczovL3ByZXByb2QyLnRhdGF1bmlzdG9yZS5jb20vXCJ9fSJ9XSwiY3VzdG9tZXJIYXNoIjpudWxsLCJlY2lkIjoiVW5rbm93biIsImNsaWVudElkIjoiVEFUQUNMSVEtV0VCLUFQUCIsInNlc3Npb25JZCI6ImY5NjFkMzhhLTZmNDEtNDk5MS04YmFjLTBmMmYyNTZiYWYzMy5iOTAyMDlmZS1iMDdjLTQ4OGYtYTU4Ni05Y2MwMGQ3MTBlYzciLCJicmFuZCI6IlRBVEFDTElRIiwidGltZXN0YW1wIjoxNjg4NTcwODMyNzg2LCJkZXZpY2UiOiJNb3ppbGxhLzUuMCAoWDExOyBMaW51eCB4ODZfNjQpIEFwcGxlV2ViS2l0LzUzNy4zNiAoS0hUTUwsIGxpa2UgR2Vja28pIENocm9tZS8xMDcuMC4wLjAgU2FmYXJpLzUzNy4zNiIsImphcnZpc0lkIjoiZDhmNGYxOTItMjJlZi00ZmY3LWE0NDEtZGViNzc4NmQ1ZjNmIn0=&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">analytics-engine/events/v1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="customer-hash" elementType="Header">
                  <stringProp name="Header.name">customer-hash</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="tdl-sso-version" elementType="Header">
                  <stringProp name="Header.name">tdl-sso-version</stringProp>
                  <stringProp name="Header.value">4.0.5</stringProp>
                </elementProp>
                <elementProp name="session" elementType="Header">
                  <stringProp name="Header.name">session</stringProp>
                  <stringProp name="Header.value">false</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ppapi.tatadigital-analytics-engine" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;secure&quot;: &quot;true&quot;, &quot;ePayload&quot;: &quot;eyJpc1JlZGlyZWN0ZWRGcm9tVENQIjpmYWxzZSwidXJsIjoiaHR0cHM6Ly9wcmVwcm9kMi50YXRhdW5pc3RvcmUuY29tLyIsImV2ZW50RGF0YSI6W3sidGltZXN0YW1wIjoxNjg4NTcwODMyNzkxLCJkYXRhIjoie1wiZXZlbnRcIjpcIm5ldHdvcmstaW5mb1wiLFwiZGF0YVwiOntcImRvd25saW5rXCI6MTAsXCJlZmZlY3RpdmVUeXBlXCI6XCI0Z1wifX0ifV0sImN1c3RvbWVySGFzaCI6bnVsbCwiZWNpZCI6IlVua25vd24iLCJjbGllbnRJZCI6IlRBVEFDTElRLVdFQi1BUFAiLCJzZXNzaW9uSWQiOiJmOTYxZDM4YS02ZjQxLTQ5OTEtOGJhYy0wZjJmMjU2YmFmMzMuYjkwMjA5ZmUtYjA3Yy00ODhmLWE1ODYtOWNjMDBkNzEwZWM3IiwiYnJhbmQiOiJUQVRBQ0xJUSIsInRpbWVzdGFtcCI6MTY4ODU3MDgzMjc5NCwiZGV2aWNlIjoiTW96aWxsYS81LjAgKFgxMTsgTGludXggeDg2XzY0KSBBcHBsZVdlYktpdC81MzcuMzYgKEtIVE1MLCBsaWtlIEdlY2tvKSBDaHJvbWUvMTA3LjAuMC4wIFNhZmFyaS81MzcuMzYiLCJqYXJ2aXNJZCI6ImQ4ZjRmMTkyLTIyZWYtNGZmNy1hNDQxLWRlYjc3ODZkNWYzZiJ9&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">analytics-engine/events/v1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="customer-hash" elementType="Header">
                  <stringProp name="Header.name">customer-hash</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="tdl-sso-version" elementType="Header">
                  <stringProp name="Header.name">tdl-sso-version</stringProp>
                  <stringProp name="Header.value">4.0.5</stringProp>
                </elementProp>
                <elementProp name="session" elementType="Header">
                  <stringProp name="Header.name">session</stringProp>
                  <stringProp name="Header.value">false</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get defaulthomepage" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="channel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">channel</stringProp>
                  <stringProp name="Argument.value">desktop</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageId</stringProp>
                  <stringProp name="Argument.value">defaulthomepage</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/cms/defaultpage</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">Mon, 01 Jan 1990 00:00:00 GMT</stringProp>
                </elementProp>
                <elementProp name="Server" elementType="Header">
                  <stringProp name="Header.name">Server</stringProp>
                  <stringProp name="Header.value">Microsoft-IIS/8.0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-store, must-revalidate, no-cache, max-age=0</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://googleads4.g.doubleclick.net/pcs/view?xai=AKAOjstAXrECV-yHZ7RlCbQjnbRBFYOksBkrV2i0qEcrFi41sMWaQ46RR6e4Vulcj_Z1v7F2OW-4UZFWg67FMFO6bKpx2soIqoBuaYBd_zLTstV_IHg7utQcICttcbwNjmQ29L1lX_vbvyA0D8qByFphloiWQTl-Kr-swL8Wt2NQEtx_aYOh87AE&amp;sai=AMfl-YS2SKASIVXd1GbMJ45hRbHPNiYsvN_P9q1zmMPuhy8VKQX4FerLTnG9NHCrbY1A1ztQxtPsiwORBhK2ygUPxyZt7QpXrDY6yzx5BQ&amp;sig=Cg0ArKJSzItTdsTY52g1EAE&amp;uach_m=[UACH]&amp;cry=1&amp;fbs_aeid=[gw_fbsaeid]&amp;urlfix=1&amp;omid=0&amp;rm=1&amp;ctpt=3&amp;cbvp=1&amp;cisv=r20230627.57862&amp;arae=0&amp;ftch=1&amp;adurl=" enabled="false">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="xai" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">xai</stringProp>
                  <stringProp name="Argument.value">AKAOjstAXrECV-yHZ7RlCbQjnbRBFYOksBkrV2i0qEcrFi41sMWaQ46RR6e4Vulcj_Z1v7F2OW-4UZFWg67FMFO6bKpx2soIqoBuaYBd_zLTstV_IHg7utQcICttcbwNjmQ29L1lX_vbvyA0D8qByFphloiWQTl-Kr-swL8Wt2NQEtx_aYOh87AE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ftch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ftch</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="urlfix" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">urlfix</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="fbs_aeid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fbs_aeid</stringProp>
                  <stringProp name="Argument.value">[gw_fbsaeid]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cisv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cisv</stringProp>
                  <stringProp name="Argument.value">r20230627.57862</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="adurl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">adurl</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cry" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cry</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="omid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">omid</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sig" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sig</stringProp>
                  <stringProp name="Argument.value">Cg0ArKJSzItTdsTY52g1EAE</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="uach_m" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">uach_m</stringProp>
                  <stringProp name="Argument.value">[UACH]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cbvp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cbvp</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="arae" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">arae</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="sai" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sai</stringProp>
                  <stringProp name="Argument.value">AMfl-YS2SKASIVXd1GbMJ45hRbHPNiYsvN_P9q1zmMPuhy8VKQX4FerLTnG9NHCrbY1A1ztQxtPsiwORBhK2ygUPxyZt7QpXrDY6yzx5BQ</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="rm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">rm</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="ctpt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ctpt</stringProp>
                  <stringProp name="Argument.value">3</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_9}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">pcs/view</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="X-Client-Data" elementType="Header">
                  <stringProp name="Header.name">X-Client-Data</stringProp>
                  <stringProp name="Header.value">CI22yQEIprbJAQipncoBCJahywE=</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://preprodclixtream.tatacliq.com/com.clixtream.inviz/tp2" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;schema&quot;:&quot;iglu:com.snowplowanalytics.snowplow/payload_data/jsonschema/1-0-4&quot;,&quot;data&quot;:[{&quot;e&quot;:&quot;ue&quot;,&quot;eid&quot;:&quot;42b5eeba-436d-44d5-a438-b5412e4f38f6&quot;,&quot;tv&quot;:&quot;js-3.1.0&quot;,&quot;tna&quot;:&quot;tata_unistore_web_test&quot;,&quot;aid&quot;:&quot;tata_marketplace_test&quot;,&quot;p&quot;:&quot;web&quot;,&quot;cookie&quot;:&quot;1&quot;,&quot;cs&quot;:&quot;UTF-8&quot;,&quot;lang&quot;:&quot;en-GB&quot;,&quot;res&quot;:&quot;1360x768&quot;,&quot;cd&quot;:&quot;24&quot;,&quot;tz&quot;:&quot;Asia/Calcutta&quot;,&quot;dtm&quot;:&quot;1688570833770&quot;,&quot;vp&quot;:&quot;1360x579&quot;,&quot;ds&quot;:&quot;1355x1832&quot;,&quot;vid&quot;:&quot;100&quot;,&quot;sid&quot;:&quot;a1df4c7c-e7ec-4061-9385-ef4d281be5b9&quot;,&quot;duid&quot;:&quot;4bca1653-3d9c-48d2-900e-fd86eae61d4c&quot;,&quot;url&quot;:&quot;https://preprod2.tataunistore.com/&quot;,&quot;ue_px&quot;:&quot;eyJzY2hlbWEiOiJpZ2x1OmNvbS5zbm93cGxvd2FuYWx5dGljcy5zbm93cGxvdy91bnN0cnVjdF9ldmVudC9qc29uc2NoZW1hLzEtMC0wIiwiZGF0YSI6eyJzY2hlbWEiOiJpZ2x1OmNvbS50YXRhdW5pc3RvcmUvYmFubmVyX2ltcHJlc3Npb24vanNvbnNjaGVtYS8xLTAtMCIsImRhdGEiOnsic2xvdF9wb3NpdGlvbiI6MCwicm93X251bWJlciI6MCwiYmFubmVyX3VybCI6Imh0dHBzOi8vYXNzZXRzcHJlcHJvZDIudGF0YXVuaXN0b3JlLmNvbS9tZWRpYXMvc3lzX21hc3Rlci9pbWFnZXMvMjczNTkwNjI2MjIyMzgucG5nIiwicGFnZV90eXBlIjoiSG9tZVBhZ2UiLCJ1c2VyX3N0YXR1cyI6Imd1ZXN0IiwidXNlcl9pZCI6bnVsbCwiY29tcG9uZW50X3R5cGUiOiJoZXJvQmFubmVyQ29tcG9uZW50IiwibGFuZGluZ19saW5rIjoiaHR0cHM6Ly9wcmVwcm9kMi50YXRhdW5pc3RvcmUuY29tL2FzYS9jLW1zaDI1MTExMDAifX19&quot;,&quot;cx&quot;:&quot;eyJzY2hlbWEiOiJpZ2x1OmNvbS5zbm93cGxvd2FuYWx5dGljcy5zbm93cGxvdy9jb250ZXh0cy9qc29uc2NoZW1hLzEtMC0wIiwiZGF0YSI6W3sic2NoZW1hIjoiaWdsdTpjb20uc25vd3Bsb3dhbmFseXRpY3Muc25vd3Bsb3cvd2ViX3BhZ2UvanNvbnNjaGVtYS8xLTAtMCIsImRhdGEiOnsiaWQiOiIzNDY0NjgxZi04ZjI1LTQxODItYjVhMi00YWE3YjQ0ZTcwYTAifX1dfQ&quot;,&quot;stm&quot;:&quot;1688570833780&quot;}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">com.clixtream.inviz/tp2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.launchdarkly.com/events/bulk/641c090d7fb3051356dd7e64" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;kind&quot;:&quot;identify&quot;,&quot;context&quot;:{&quot;key&quot;:&quot;anonymous&quot;,&quot;kind&quot;:&quot;user&quot;},&quot;creationDate&quot;:1688570830681},{&quot;kind&quot;:&quot;custom&quot;,&quot;key&quot;:&quot;sequence_changed&quot;,&quot;url&quot;:&quot;https://preprod2.tataunistore.com/&quot;,&quot;creationDate&quot;:1688570831076,&quot;data&quot;:false,&quot;contextKeys&quot;:{&quot;user&quot;:&quot;anonymous&quot;}},{&quot;startDate&quot;:1688570831064,&quot;endDate&quot;:1688570831064,&quot;features&quot;:{&quot;DESKTOP_HEADER_CATEGORY_AND_BRAND_SEQUENCE_CHANGE&quot;:{&quot;default&quot;:false,&quot;counters&quot;:[{&quot;value&quot;:false,&quot;count&quot;:1,&quot;variation&quot;:1,&quot;version&quot;:40}],&quot;contextKinds&quot;:[&quot;user&quot;]}},&quot;kind&quot;:&quot;summary&quot;}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">events/bulk/641c090d7fb3051356dd7e64</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="X-LaunchDarkly-Payload-ID" elementType="Header">
                  <stringProp name="Header.name">X-LaunchDarkly-Payload-ID</stringProp>
                  <stringProp name="Header.value">6b5df8e0-1b48-11ee-b12c-15c7496d520b</stringProp>
                </elementProp>
                <elementProp name="X-LaunchDarkly-Event-Schema" elementType="Header">
                  <stringProp name="Header.name">X-LaunchDarkly-Event-Schema</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="X-LaunchDarkly-User-Agent" elementType="Header">
                  <stringProp name="Header.name">X-LaunchDarkly-User-Agent</stringProp>
                  <stringProp name="Header.value">JSClient/3.1.3</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://events.launchdarkly.com/events/bulk/641c090d7fb3051356dd7e64" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;kind&quot;:&quot;identify&quot;,&quot;context&quot;:{&quot;key&quot;:&quot;anonymous&quot;,&quot;kind&quot;:&quot;user&quot;},&quot;creationDate&quot;:1688570830683}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">events/bulk/641c090d7fb3051356dd7e64</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="X-LaunchDarkly-Payload-ID" elementType="Header">
                  <stringProp name="Header.name">X-LaunchDarkly-Payload-ID</stringProp>
                  <stringProp name="Header.value">6b5ff4b0-1b48-11ee-b12c-15c7496d520b</stringProp>
                </elementProp>
                <elementProp name="X-LaunchDarkly-Event-Schema" elementType="Header">
                  <stringProp name="Header.name">X-LaunchDarkly-Event-Schema</stringProp>
                  <stringProp name="Header.value">4</stringProp>
                </elementProp>
                <elementProp name="X-LaunchDarkly-User-Agent" elementType="Header">
                  <stringProp name="Header.name">X-LaunchDarkly-User-Agent</stringProp>
                  <stringProp name="Header.value">JSClient/3.1.3</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Get Properties" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="propertyNames" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">propertyNames</stringProp>
                  <stringProp name="Argument.value">is_WEB_MNL_EMAIL_HIDDEN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">otatacliq/getApplicationProperties.json</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bom-col.eum-appdynamics.com/eumcollector/beacons/browser/v1/BO-AAB-BZU/adrum" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;vr&quot;:&quot;23.3.1.4273&quot;,&quot;dt&quot;:&quot;R&quot;,&quot;rg&quot;:&quot;0&quot;,&quot;es&quot;:[{&quot;eg&quot;:&quot;1&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4&quot;,&quot;ts&quot;:1688570830236,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:0,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:128,&quot;DDT&quot;:2,&quot;DPT&quot;:0,&quot;PLT&quot;:130,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3809},{&quot;eg&quot;:&quot;2&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://6/7/8/9&quot;,&quot;ts&quot;:1688570830651,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:0,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:180,&quot;DDT&quot;:1,&quot;DPT&quot;:0,&quot;PLT&quot;:181,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3810},{&quot;eg&quot;:&quot;3&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://10/11/12?13&quot;,&quot;ts&quot;:1688570830621,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:0,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:231,&quot;DDT&quot;:11,&quot;DPT&quot;:0,&quot;PLT&quot;:242,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3811},{&quot;eg&quot;:&quot;4&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://10/11/12?14&quot;,&quot;ts&quot;:1688570830654,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:0,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:201,&quot;DDT&quot;:12,&quot;DPT&quot;:0,&quot;PLT&quot;:213,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3812},{&quot;eg&quot;:&quot;5&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://6/7/8/9&quot;,&quot;ts&quot;:1688570830668,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:0,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:324,&quot;DDT&quot;:2,&quot;DPT&quot;:0,&quot;PLT&quot;:326,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3813},{&quot;eg&quot;:&quot;6&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://6/7/15/9/16/17&quot;,&quot;ts&quot;:1688570830682,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:0,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:380,&quot;DDT&quot;:2,&quot;DPT&quot;:0,&quot;PLT&quot;:382,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3814},{&quot;eg&quot;:&quot;7&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://5/18/4/19/20/21/?22&quot;,&quot;ts&quot;:1688570830619,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:0,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:427,&quot;DDT&quot;:32,&quot;DPT&quot;:0,&quot;PLT&quot;:459,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3815},{&quot;eg&quot;:&quot;8&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://5/18/4/19/23/24/25&quot;,&quot;ts&quot;:1688570830640,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:0,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:594,&quot;DDT&quot;:10,&quot;DPT&quot;:0,&quot;PLT&quot;:604,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3816},{&quot;eg&quot;:&quot;9&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://6/7/15/9/16/17&quot;,&quot;ts&quot;:1688570830684,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:0,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:582,&quot;DDT&quot;:1,&quot;DPT&quot;:0,&quot;PLT&quot;:583,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3817},{&quot;eg&quot;:&quot;10&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://26/27/28?29&quot;,&quot;ts&quot;:1688570830953,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:1,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:336,&quot;DDT&quot;:2,&quot;DPT&quot;:0,&quot;PLT&quot;:338,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3818},{&quot;eg&quot;:&quot;11&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://30/31/32/33?34&quot;,&quot;ts&quot;:1688570830981,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:1,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:313,&quot;DDT&quot;:1,&quot;DPT&quot;:0,&quot;PLT&quot;:314,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3819},{&quot;eg&quot;:&quot;12&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://35/36/37&quot;,&quot;ts&quot;:1688570830805,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:1,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:576,&quot;DDT&quot;:1,&quot;DPT&quot;:0,&quot;PLT&quot;:577,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3820},{&quot;eg&quot;:&quot;13&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://5/18/4/19/23/24/38&quot;,&quot;ts&quot;:1688570830749,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:1,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:642,&quot;DDT&quot;:30,&quot;DPT&quot;:0,&quot;PLT&quot;:672,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3821},{&quot;eg&quot;:&quot;14&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/39/4/40/41&quot;,&quot;ts&quot;:1688570830679,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:0,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:750,&quot;DDT&quot;:17,&quot;DPT&quot;:0,&quot;PLT&quot;:767,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3822},{&quot;eg&quot;:&quot;15&quot;,&quot;et&quot;:4,&quot;eu&quot;:&quot;0://5/&quot;,&quot;ts&quot;:1688570832872,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;dm&quot;:&quot;SecurityPolicyViolation: blockedURI = https://rum-collector-2.pingdom.net/img/beacon.gif?id=618e56129034fb00110002e0&amp;sAW=1360&amp;sAH=741&amp;bIW=1360&amp;bIH=579&amp;pD=24&amp;dPR=1&amp;or=landscape-primary&amp;nT=1&amp;rC=0&amp;nS=0&amp;cS=3&amp;cE=3&amp;dLE=3&amp;dLS=3&amp;fS=3&amp;hS=-1&amp;rE=-1&amp;rS=-1&amp;reS=11&amp;resS=50&amp;resE=52&amp;uEE=66&amp;uES=65&amp;dL=71&amp;dI=407&amp;dCLES=762&amp;dCLEE=773&amp;dC=2858&amp;lES=2858&amp;lEE=2921&amp;s=nt&amp;title=Online%20Shopping%20Site%20in%20India%20-%20Upto%2060%25%20Off%20On%20Mobiles%2C%20Electronics%20%26%20Fashion%20at%20Tata%20CLiQ&amp;path=https%3A%2F%2Fpreprod2.tataunistore.com%2F&amp;ref=&amp;sId=zgwbvm2c&amp;sST=1688570832&amp;sIS=1&amp;rV=0&amp;v=1.4.1 &amp; effectiveDirective = connect-src &amp; violatedDirective = connect-src &amp; sourceFile = chrome-extension&quot;,&quot;ln&quot;:33,&quot;si&quot;:3823},{&quot;eg&quot;:&quot;16&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://42/43/44?45&quot;,&quot;ts&quot;:1688570832867,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:11,&quot;DDT&quot;:0,&quot;DPT&quot;:0,&quot;PLT&quot;:11,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:0,&quot;si&quot;:3824},{&quot;eg&quot;:&quot;17&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://46/47/48/9&quot;,&quot;ts&quot;:1688570832798,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:2,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:347,&quot;DDT&quot;:0,&quot;DPT&quot;:0,&quot;PLT&quot;:347,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:202,&quot;si&quot;:3825},{&quot;eg&quot;:&quot;18&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/47/32&quot;,&quot;ts&quot;:1688570832786,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:2,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:337,&quot;DDT&quot;:56,&quot;DPT&quot;:0,&quot;PLT&quot;:393,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3826},{&quot;eg&quot;:&quot;19&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/47/32&quot;,&quot;ts&quot;:1688570832795,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:2,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:403,&quot;DDT&quot;:44,&quot;DPT&quot;:0,&quot;PLT&quot;:447,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3827},{&quot;eg&quot;:&quot;20&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://5/18/4/19/23/49?50&quot;,&quot;ts&quot;:1688570833291,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:307,&quot;DDT&quot;:21,&quot;DPT&quot;:0,&quot;PLT&quot;:328,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3828},{&quot;eg&quot;:&quot;21&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://51/52/53?54&quot;,&quot;ts&quot;:1688570833693,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:196,&quot;DDT&quot;:1,&quot;DPT&quot;:0,&quot;PLT&quot;:197,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:0,&quot;si&quot;:3829},{&quot;eg&quot;:&quot;22&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://35/36/37&quot;,&quot;ts&quot;:1688570833780,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:112,&quot;DDT&quot;:1,&quot;DPT&quot;:0,&quot;PLT&quot;:113,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3830},{&quot;eg&quot;:&quot;23&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://46/47/55/9&quot;,&quot;ts&quot;:1688570834820,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:360,&quot;DDT&quot;:1,&quot;DPT&quot;:0,&quot;PLT&quot;:361,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:202,&quot;si&quot;:3831},{&quot;eg&quot;:&quot;24&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://46/47/55/9&quot;,&quot;ts&quot;:1688570834799,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:435,&quot;DDT&quot;:0,&quot;DPT&quot;:1,&quot;PLT&quot;:436,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:202,&quot;si&quot;:3832},{&quot;eg&quot;:&quot;25&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://10/11/12?56&quot;,&quot;ts&quot;:1688570836478,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://5/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:79,&quot;DDT&quot;:1,&quot;DPT&quot;:0,&quot;PLT&quot;:80,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3833},{&quot;eg&quot;:&quot;0&quot;,&quot;et&quot;:0,&quot;eu&quot;:&quot;0://5/&quot;,&quot;ts&quot;:1688570829924,&quot;mc&quot;:{&quot;PLT&quot;:2926,&quot;FBT&quot;:149,&quot;FET&quot;:2777,&quot;DRT&quot;:624,&quot;PRT&quot;:2153,&quot;DOM&quot;:773,&quot;ts&quot;:1688570829923,&quot;PLC&quot;:1,&quot;EPM&quot;:1},&quot;mx&quot;:{&quot;PLT&quot;:2921,&quot;FBT&quot;:50,&quot;SCT&quot;:11,&quot;DLT&quot;:0,&quot;TCP&quot;:0,&quot;RAT&quot;:39,&quot;FET&quot;:2871,&quot;DRT&quot;:712,&quot;DDT&quot;:2,&quot;DPT&quot;:710,&quot;PRT&quot;:2159,&quot;DOM&quot;:762,&quot;ts&quot;:1688570829924,&quot;PLC&quot;:1,&quot;VCT&quot;:6890,&quot;EPM&quot;:1},&quot;pl&quot;:&quot;Online Shopping Site in India - Upto 60% Off On Mobiles, Electronics, Fashion &amp; Jewellery at Tata CLiQ&quot;,&quot;rt&quot;:{&quot;v&quot;:2,&quot;ic&quot;:{&quot;other&quot;:4,&quot;script&quot;:62,&quot;link&quot;:10,&quot;fetch&quot;:12,&quot;img&quot;:19,&quot;css&quot;:21,&quot;xmlhttprequest&quot;:12,&quot;iframe&quot;:4,&quot;beacon&quot;:3},&quot;it&quot;:{&quot;other&quot;:1,&quot;script&quot;:2,&quot;link&quot;:3,&quot;fetch&quot;:4,&quot;img&quot;:5,&quot;css&quot;:6,&quot;xmlhttprequest&quot;:7,&quot;iframe&quot;:8,&quot;beacon&quot;:9},&quot;rc&quot;:{&quot;other&quot;:36,&quot;script&quot;:62,&quot;css&quot;:6,&quot;img&quot;:31,&quot;svg&quot;:12},&quot;rt&quot;:{&quot;other&quot;:1,&quot;script&quot;:2,&quot;css&quot;:3,&quot;img&quot;:4,&quot;svg&quot;:5},&quot;f&quot;:{&quot;1&quot;:[&quot;startTime&quot;,&quot;redirectStart&quot;,&quot;redirectEnd&quot;,&quot;fetchStart&quot;,&quot;dnsLookupStart&quot;,&quot;dnsLookupEnd&quot;,&quot;connectStart&quot;,&quot;secureConnectionStart&quot;,&quot;connectEnd&quot;,&quot;requestStart&quot;,&quot;responseStart&quot;,&quot;responseEnd&quot;],&quot;2&quot;:[&quot;startTime&quot;,&quot;fetchStart&quot;,&quot;responseEnd&quot;]},&quot;t&quot;:1688570829924,&quot;r&quot;:[{&quot;u&quot;:&quot;0://5/&quot;,&quot;i&quot;:1,&quot;r&quot;:1,&quot;f&quot;:1,&quot;o&quot;:1,&quot;m&quot;:[0,-1,-1,3,3,3,3,-1,3,11,50,52],&quot;e&quot;:-1,&quot;d&quot;:-1,&quot;s&quot;:-1,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://57/58/59&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:77,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,53,85,95],&quot;e&quot;:40648,&quot;d&quot;:113286,&quot;s&quot;:40948,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/60/61/62/63&quot;,&quot;i&quot;:3,&quot;r&quot;:1,&quot;f&quot;:1,&quot;o&quot;:77,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,53,89,94],&quot;e&quot;:17188,&quot;d&quot;:17188,&quot;s&quot;:17488,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/60/61/62/64&quot;,&quot;i&quot;:3,&quot;r&quot;:1,&quot;f&quot;:1,&quot;o&quot;:78,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,67,119,128],&quot;e&quot;:23000,&quot;d&quot;:23000,&quot;s&quot;:23300,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/60/61/62/65&quot;,&quot;i&quot;:3,&quot;r&quot;:1,&quot;f&quot;:1,&quot;o&quot;:78,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,67,185,217],&quot;e&quot;:20792,&quot;d&quot;:20792,&quot;s&quot;:21092,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://66/4/67&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:78,&quot;m&quot;:[0,0,214],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://5/68&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:78,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,114,217,531],&quot;e&quot;:476784,&quot;d&quot;:1825814,&quot;s&quot;:477084,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/69/70&quot;,&quot;i&quot;:3,&quot;r&quot;:3,&quot;f&quot;:1,&quot;o&quot;:78,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,67,169,176],&quot;e&quot;:7876,&quot;d&quot;:49554,&quot;s&quot;:8176,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/72/73&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:80,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,65,147,179],&quot;e&quot;:107209,&quot;d&quot;:469010,&quot;s&quot;:107509,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://1/2/3/4&quot;,&quot;i&quot;:4,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:314,&quot;m&quot;:[0,0,108],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://71/74/75/76&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:363,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,4,122,126],&quot;e&quot;:12184,&quot;d&quot;:33462,&quot;s&quot;:12484,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://26/77&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:388,&quot;m&quot;:[0,0,64],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://78/79&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:400,&quot;m&quot;:[0,0,136],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://80/81&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:404,&quot;m&quot;:[0,0,48],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://82/83/84&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:405,&quot;m&quot;:[0,0,274],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://78/85/86/87&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:541,&quot;m&quot;:[0,0,335],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://78/86/88?89&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:553,&quot;m&quot;:[0,0,117],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://5/69/90&quot;,&quot;i&quot;:3,&quot;r&quot;:3,&quot;f&quot;:1,&quot;o&quot;:680,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,4,43,48],&quot;e&quot;:12610,&quot;d&quot;:84622,&quot;s&quot;:12910,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/91&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:681,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,4,61,87],&quot;e&quot;:46586,&quot;d&quot;:200179,&quot;s&quot;:46886,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/69/92&quot;,&quot;i&quot;:3,&quot;r&quot;:3,&quot;f&quot;:1,&quot;o&quot;:685,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,4,84,88],&quot;e&quot;:1994,&quot;d&quot;:11376,&quot;s&quot;:2294,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/93&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:686,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,4,109,112],&quot;e&quot;:4958,&quot;d&quot;:18832,&quot;s&quot;:5258,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/69/94&quot;,&quot;i&quot;:3,&quot;r&quot;:3,&quot;f&quot;:1,&quot;o&quot;:689,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,4,128,132],&quot;e&quot;:495,&quot;d&quot;:1171,&quot;s&quot;:795,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/95&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:691,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,4,173,178],&quot;e&quot;:715,&quot;d&quot;:1568,&quot;s&quot;:1015,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/18/4/19/20/21/?22&quot;,&quot;i&quot;:4,&quot;r&quot;:1,&quot;f&quot;:1,&quot;o&quot;:695,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,11,270,303],&quot;e&quot;:325,&quot;d&quot;:2332,&quot;s&quot;:625,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://10/11/12?13&quot;,&quot;i&quot;:4,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:697,&quot;m&quot;:[0,0,155],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://5/60/96/97/43/98&quot;,&quot;i&quot;:6,&quot;r&quot;:5,&quot;f&quot;:1,&quot;o&quot;:698,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,25,206,209],&quot;e&quot;:1188,&quot;d&quot;:2374,&quot;s&quot;:1488,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/60/96/97/43/99&quot;,&quot;i&quot;:6,&quot;r&quot;:4,&quot;f&quot;:1,&quot;o&quot;:699,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,25,290,474],&quot;e&quot;:105401,&quot;d&quot;:105401,&quot;s&quot;:105701,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/60/96/97/43/100&quot;,&quot;i&quot;:6,&quot;r&quot;:5,&quot;f&quot;:1,&quot;o&quot;:700,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,27,478,488],&quot;e&quot;:771,&quot;d&quot;:771,&quot;s&quot;:1071,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/60/96/97/43/101&quot;,&quot;i&quot;:6,&quot;r&quot;:5,&quot;f&quot;:1,&quot;o&quot;:700,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,29,478,489],&quot;e&quot;:244,&quot;d&quot;:343,&quot;s&quot;:544,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/60/102/97/43/103&quot;,&quot;i&quot;:6,&quot;r&quot;:5,&quot;f&quot;:1,&quot;o&quot;:700,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,24,474,475],&quot;e&quot;:589,&quot;d&quot;:589,&quot;s&quot;:889,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/60/102/97/43/104&quot;,&quot;i&quot;:6,&quot;r&quot;:5,&quot;f&quot;:1,&quot;o&quot;:701,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,26,474,478],&quot;e&quot;:884,&quot;d&quot;:2293,&quot;s&quot;:1184,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/60/102/97/43/105&quot;,&quot;i&quot;:6,&quot;r&quot;:5,&quot;f&quot;:1,&quot;o&quot;:701,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,26,476,487],&quot;e&quot;:471,&quot;d&quot;:832,&quot;s&quot;:771,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/60/106/97/43/107&quot;,&quot;i&quot;:6,&quot;r&quot;:5,&quot;f&quot;:1,&quot;o&quot;:702,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,28,476,487],&quot;e&quot;:760,&quot;d&quot;:760,&quot;s&quot;:1060,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/60/96/97/43/108&quot;,&quot;i&quot;:6,&quot;r&quot;:5,&quot;f&quot;:1,&quot;o&quot;:703,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,27,541,543],&quot;e&quot;:401,&quot;d&quot;:704,&quot;s&quot;:701,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/60/96/97/43/109&quot;,&quot;i&quot;:6,&quot;r&quot;:5,&quot;f&quot;:1,&quot;o&quot;:703,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,26,497,500],&quot;e&quot;:321,&quot;d&quot;:321,&quot;s&quot;:621,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/60/96/97/43/110&quot;,&quot;i&quot;:6,&quot;r&quot;:4,&quot;f&quot;:1,&quot;o&quot;:704,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,20,255,284],&quot;e&quot;:5730,&quot;d&quot;:5730,&quot;s&quot;:6030,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/18/4/19/23/24/25&quot;,&quot;i&quot;:4,&quot;r&quot;:1,&quot;f&quot;:1,&quot;o&quot;:716,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,13,576,589],&quot;e&quot;:16987,&quot;d&quot;:165312,&quot;s&quot;:17287,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://6/7/8/9&quot;,&quot;i&quot;:7,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:728,&quot;m&quot;:[0,0,131],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://10/11/12?14&quot;,&quot;i&quot;:4,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:730,&quot;m&quot;:[0,0,134],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://111/112/113?114&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:735,&quot;m&quot;:[0,0,256],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://115/116/84&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:736,&quot;m&quot;:[0,0,153],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://117/118&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:740,&quot;m&quot;:[0,0,188],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://6/7/8/9&quot;,&quot;i&quot;:7,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:745,&quot;m&quot;:[0,0,292],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://1/39/4/40/41&quot;,&quot;i&quot;:4,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:755,&quot;m&quot;:[0,0,595],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://6/7/15/9/16/17&quot;,&quot;i&quot;:7,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:758,&quot;m&quot;:[0,0,340],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://6/7/15/9/16/17&quot;,&quot;i&quot;:7,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:760,&quot;m&quot;:[0,0,559],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/122&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:771,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,10,188,219],&quot;e&quot;:273,&quot;d&quot;:424,&quot;s&quot;:573,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://123/124/125&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:773,&quot;m&quot;:[0,0,192],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://5/18/4/19/23/24/38&quot;,&quot;i&quot;:4,&quot;r&quot;:1,&quot;f&quot;:1,&quot;o&quot;:825,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,5,486,492],&quot;e&quot;:2856,&quot;d&quot;:10736,&quot;s&quot;:3156,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/60/96/97/43/126&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:1,&quot;o&quot;:827,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,369,659,668],&quot;e&quot;:2563,&quot;d&quot;:2563,&quot;s&quot;:2863,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/60/96/97/43/127&quot;,&quot;i&quot;:6,&quot;r&quot;:5,&quot;f&quot;:1,&quot;o&quot;:831,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,366,655,666],&quot;e&quot;:19700,&quot;d&quot;:55215,&quot;s&quot;:20000,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://35/36/37&quot;,&quot;i&quot;:7,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:882,&quot;m&quot;:[0,0,477],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://128/129?130&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:936,&quot;m&quot;:[0,0,227],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/131&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:972,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,49,278,282],&quot;e&quot;:249,&quot;d&quot;:391,&quot;s&quot;:549,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://26/27/28?132&quot;,&quot;i&quot;:7,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:1030,&quot;m&quot;:[0,0,299],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/133&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:1032,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,5,275,284],&quot;e&quot;:183,&quot;d&quot;:298,&quot;s&quot;:483,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/134&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:1035,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,9,272,277],&quot;e&quot;:430,&quot;d&quot;:686,&quot;s&quot;:730,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/135&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:1037,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,9,270,280],&quot;e&quot;:579,&quot;d&quot;:1550,&quot;s&quot;:879,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://30/31/32/33?136&quot;,&quot;i&quot;:7,&quot;r&quot;:1,&quot;f&quot;:1,&quot;o&quot;:1057,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,7,269,274],&quot;e&quot;:303,&quot;d&quot;:355,&quot;s&quot;:603,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://137/138?139&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:1109,&quot;m&quot;:[0,0,408],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://137/138?140&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:1120,&quot;m&quot;:[0,0,397],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://137/138?141&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:1130,&quot;m&quot;:[0,0,401],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://142/112/143/144/145&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:1132,&quot;m&quot;:[0,0,354],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://146/147/148/149/150/151/152?153&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:1448,&quot;m&quot;:[0,0,108],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://5/60/96/97/43/154&quot;,&quot;i&quot;:6,&quot;r&quot;:5,&quot;f&quot;:1,&quot;o&quot;:1469,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,5,104,112],&quot;e&quot;:234,&quot;d&quot;:345,&quot;s&quot;:534,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://155/156/157/158?159&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:1480,&quot;m&quot;:[0,0,281],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://80/81&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:1482,&quot;m&quot;:[0,0,111],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://80/160?161&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:1495,&quot;m&quot;:[0,0,134],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://162/163/164/165/166&quot;,&quot;i&quot;:6,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:1563,&quot;m&quot;:[0,0,55],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://162/163/164/165/167&quot;,&quot;i&quot;:6,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:1567,&quot;m&quot;:[0,0,50],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://162/163/164/165/168&quot;,&quot;i&quot;:6,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:1568,&quot;m&quot;:[0,0,49],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://162/163/164/165/169&quot;,&quot;i&quot;:6,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:1569,&quot;m&quot;:[0,0,159],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://162/163/164/165/170&quot;,&quot;i&quot;:6,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:1569,&quot;m&quot;:[0,0,54],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://162/163/164/165/171&quot;,&quot;i&quot;:6,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:1573,&quot;m&quot;:[0,0,50],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://162/163/164/165/172&quot;,&quot;i&quot;:6,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:1574,&quot;m&quot;:[0,0,154],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://111/112/173/174?175&quot;,&quot;i&quot;:8,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:1645,&quot;m&quot;:[0,0,146],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://146/147/148/149/150/151/176?177&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:1648,&quot;m&quot;:[0,0,53],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://146/147/148/149/150/151/178?177&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:1707,&quot;m&quot;:[0,0,55],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://155/156/157/179?&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:1768,&quot;m&quot;:[0,0,173],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://180/181?182&quot;,&quot;i&quot;:8,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:1949,&quot;m&quot;:[0,0,358],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://1/2/47/32&quot;,&quot;i&quot;:4,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:2863,&quot;m&quot;:[0,0,292],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://1/2/47/32&quot;,&quot;i&quot;:4,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:2872,&quot;m&quot;:[0,0,298],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://46/47/48/9&quot;,&quot;i&quot;:7,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:2875,&quot;m&quot;:[0,0,303],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/183&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2886,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,10,49,55],&quot;e&quot;:515,&quot;d&quot;:1058,&quot;s&quot;:815,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/184&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2890,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,10,57,67],&quot;e&quot;:709,&quot;d&quot;:1896,&quot;s&quot;:1009,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/185&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2891,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,17,60,79],&quot;e&quot;:184,&quot;d&quot;:298,&quot;s&quot;:484,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/186&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2894,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,14,88,108],&quot;e&quot;:906,&quot;d&quot;:2524,&quot;s&quot;:1206,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/187&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2897,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,13,73,101],&quot;e&quot;:182,&quot;d&quot;:298,&quot;s&quot;:482,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/188&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2901,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,12,81,98],&quot;e&quot;:184,&quot;d&quot;:298,&quot;s&quot;:484,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/189&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2903,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,67,108,132],&quot;e&quot;:1277,&quot;d&quot;:8710,&quot;s&quot;:1577,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/190&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2907,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,97,168,221],&quot;e&quot;:184,&quot;d&quot;:298,&quot;s&quot;:484,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/191&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2908,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,95,168,245],&quot;e&quot;:1020,&quot;d&quot;:2181,&quot;s&quot;:1320,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/192&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2910,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,133,187,245],&quot;e&quot;:471,&quot;d&quot;:734,&quot;s&quot;:771,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/193&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2912,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,133,185,243],&quot;e&quot;:833,&quot;d&quot;:3266,&quot;s&quot;:1133,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/194&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2913,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,133,186,244],&quot;e&quot;:368,&quot;d&quot;:638,&quot;s&quot;:668,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/195&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2915,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,150,212,251],&quot;e&quot;:505,&quot;d&quot;:885,&quot;s&quot;:805,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/196&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2916,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,263,298,304],&quot;e&quot;:182,&quot;d&quot;:298,&quot;s&quot;:482,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/197&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2918,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,269,303,307],&quot;e&quot;:427,&quot;d&quot;:665,&quot;s&quot;:727,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/198&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2919,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,269,303,307],&quot;e&quot;:208,&quot;d&quot;:331,&quot;s&quot;:508,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://57/199&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2925,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,16,44,72],&quot;e&quot;:20497,&quot;d&quot;:54145,&quot;s&quot;:20797,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://42/43/44?200&quot;,&quot;i&quot;:7,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:2945,&quot;m&quot;:[0,0,0],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://5/201&quot;,&quot;i&quot;:1,&quot;r&quot;:1,&quot;f&quot;:1,&quot;o&quot;:2945,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,58,127,162],&quot;e&quot;:4286,&quot;d&quot;:4286,&quot;s&quot;:4586,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/202&quot;,&quot;i&quot;:1,&quot;r&quot;:1,&quot;f&quot;:1,&quot;o&quot;:2947,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,57,180,218],&quot;e&quot;:1390,&quot;d&quot;:1390,&quot;s&quot;:1690,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://203/124/204/205&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:2963,&quot;m&quot;:[0,-1,-1,0,45,45,45,318,638,642,1154,1159],&quot;e&quot;:14899,&quot;d&quot;:45593,&quot;s&quot;:15199,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://206/207/124?208&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:3053,&quot;m&quot;:[0,0,329],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://209/210/211&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:3249,&quot;m&quot;:[0,0,107],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://212/213/214&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:3251,&quot;m&quot;:[0,0,353],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://5/165/215/216&quot;,&quot;i&quot;:1,&quot;r&quot;:4,&quot;f&quot;:1,&quot;o&quot;:3259,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,24,90,97],&quot;e&quot;:11176,&quot;d&quot;:11176,&quot;s&quot;:11476,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://217/218/219/220/221?&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:3283,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,68,291,301],&quot;e&quot;:15396,&quot;d&quot;:40137,&quot;s&quot;:15696,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://222/223//5/224?&quot;,&quot;i&quot;:8,&quot;r&quot;:1,&quot;f&quot;:1,&quot;o&quot;:3290,&quot;m&quot;:[0,0,190,196,196,196,196,196,196,198,413,418],&quot;e&quot;:596,&quot;d&quot;:2706,&quot;s&quot;:896,&quot;p&quot;:&quot;h3&quot;},{&quot;u&quot;:&quot;0://225/226&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:3302,&quot;m&quot;:[0,0,122],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://227/228/229/230/181?231&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:3304,&quot;m&quot;:[0,0,339],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://232/233&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:3334,&quot;m&quot;:[0,0,74],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://1/2/47/32&quot;,&quot;i&quot;:9,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:3349,&quot;m&quot;:[0,0,121],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://5/18/4/19/23/49?50&quot;,&quot;i&quot;:4,&quot;r&quot;:1,&quot;f&quot;:1,&quot;o&quot;:3368,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,20,83,86],&quot;e&quot;:5765,&quot;d&quot;:56449,&quot;s&quot;:6065,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://209/234/3/235?236&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:2,&quot;o&quot;:3411,&quot;m&quot;:[0,0,189],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://237/238/239?240&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:3510,&quot;m&quot;:[0,0,384],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://241/238/239?240&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:3510,&quot;m&quot;:[0,0,394],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://242/243/244/245/?246&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:3619,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,4,1747,1751],&quot;e&quot;:1393,&quot;d&quot;:2983,&quot;s&quot;:1693,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://242/243/244/247/?248&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:3644,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,7,1178,1184],&quot;e&quot;:1393,&quot;d&quot;:2983,&quot;s&quot;:1693,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://227/228/229/230/181?249&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:3663,&quot;m&quot;:[0,0,298],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://250/251/?252&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:3690,&quot;m&quot;:[0,0,52],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://253/254/124/255/256?257&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:3756,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,7,147,162],&quot;e&quot;:57260,&quot;d&quot;:183080,&quot;s&quot;:57560,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://258/259/243/124/260/261/262/263/264&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:3760,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,8,24,49],&quot;e&quot;:4172,&quot;d&quot;:11187,&quot;s&quot;:4472,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://51/52/53?265&quot;,&quot;i&quot;:4,&quot;r&quot;:1,&quot;f&quot;:1,&quot;o&quot;:3769,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,5,184,188],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:300,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://162/163/164/165/266&quot;,&quot;i&quot;:3,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:3829,&quot;m&quot;:[0,0,343],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://35/36/37&quot;,&quot;i&quot;:7,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:3856,&quot;m&quot;:[0,0,103],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://5/69/267&quot;,&quot;i&quot;:3,&quot;r&quot;:3,&quot;f&quot;:1,&quot;o&quot;:3881,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,24,292,305],&quot;e&quot;:2499,&quot;d&quot;:14951,&quot;s&quot;:2799,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/268&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:3883,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,22,291,301],&quot;e&quot;:5400,&quot;d&quot;:21914,&quot;s&quot;:5700,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://250/251/&quot;,&quot;i&quot;:8,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:4308,&quot;m&quot;:[0,0,84],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://111/243/269/247/?270&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:1,&quot;o&quot;:4837,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,4,127,135],&quot;e&quot;:42,&quot;d&quot;:42,&quot;s&quot;:342,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://271/243/269/247/?270&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:1,&quot;o&quot;:4838,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,4,136,148],&quot;e&quot;:42,&quot;d&quot;:42,&quot;s&quot;:342,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://46/47/55/9&quot;,&quot;i&quot;:7,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:4876,&quot;m&quot;:[0,0,432],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://46/47/55/9&quot;,&quot;i&quot;:7,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:4896,&quot;m&quot;:[0,0,357],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://111/243/269/245/?272&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:1,&quot;o&quot;:5378,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,12,134,139],&quot;e&quot;:42,&quot;d&quot;:42,&quot;s&quot;:342,&quot;p&quot;:&quot;h3&quot;},{&quot;u&quot;:&quot;0://271/243/269/245/?272&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:1,&quot;o&quot;:5381,&quot;m&quot;:[0,-1,-1,0,12,18,18,19,122,20,224,228],&quot;e&quot;:42,&quot;d&quot;:42,&quot;s&quot;:342,&quot;p&quot;:&quot;h3&quot;},{&quot;u&quot;:&quot;0://1/2/47/32&quot;,&quot;i&quot;:9,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:5782,&quot;m&quot;:[0,0,153],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://1/2/47/32&quot;,&quot;i&quot;:9,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:5793,&quot;m&quot;:[0,0,163],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://250/251/?273&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:5845,&quot;m&quot;:[0,0,56],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/274&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:5906,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,14,48,67],&quot;e&quot;:341,&quot;d&quot;:566,&quot;s&quot;:641,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://71/119/120/121/275&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:5907,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,13,53,66],&quot;e&quot;:466,&quot;d&quot;:831,&quot;s&quot;:766,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/69/276&quot;,&quot;i&quot;:3,&quot;r&quot;:3,&quot;f&quot;:1,&quot;o&quot;:5919,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,18,553,564],&quot;e&quot;:2673,&quot;d&quot;:13460,&quot;s&quot;:2973,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://5/277&quot;,&quot;i&quot;:2,&quot;r&quot;:2,&quot;f&quot;:1,&quot;o&quot;:5922,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,16,551,563],&quot;e&quot;:8591,&quot;d&quot;:59347,&quot;s&quot;:8891,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://146/147/148/149/150/151/278?279&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:5999,&quot;m&quot;:[0,0,44],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://146/147/148/149/150/151/280?279&quot;,&quot;i&quot;:5,&quot;r&quot;:4,&quot;f&quot;:2,&quot;o&quot;:6054,&quot;m&quot;:[0,0,45],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;},{&quot;u&quot;:&quot;0://5/60/281/165/282&quot;,&quot;i&quot;:6,&quot;r&quot;:5,&quot;f&quot;:1,&quot;o&quot;:6539,&quot;m&quot;:[0,-1,-1,0,0,0,0,0,0,32,298,300],&quot;e&quot;:497,&quot;d&quot;:1123,&quot;s&quot;:797,&quot;p&quot;:&quot;h2&quot;},{&quot;u&quot;:&quot;0://10/11/12?56&quot;,&quot;i&quot;:4,&quot;r&quot;:1,&quot;f&quot;:2,&quot;o&quot;:6555,&quot;m&quot;:[0,0,73],&quot;e&quot;:0,&quot;d&quot;:0,&quot;s&quot;:0,&quot;p&quot;:&quot;&quot;}]},&quot;bd&quot;:0,&quot;si&quot;:3834}],&quot;ai&quot;:&quot;cc693ceb_3846_4d2f_1802_e8ec66bd93bf&quot;,&quot;gs&quot;:[&quot;f26654a2_52a4_2a9b_d931_ab07cd6481fc&quot;,&quot;ad05fd9d_f0d5_06f6_d40b_75873a435e11&quot;,&quot;46fb3063_88bb_b192_fd97_477de8abaadf&quot;,&quot;a83043fd_01a6_25ad_dfaa_4ddae38e70e6&quot;,&quot;b06a7e7f_d8fc_78e1_2a49_44b9b6b98b7a&quot;,&quot;386a2ef2_98ea_4727_aa82_f74de0c829d4&quot;,&quot;501be4f0_7a0a_2e6b_89e1_1c140f7a4033&quot;,&quot;fdc9a90a_89fc_5811_3742_e44b43bc68e2&quot;,&quot;e54b5ae2_aa5a_cabf_3b48_a90c445ef197&quot;,&quot;b49294c7_55e8_d780_6925_9cd571a4139b&quot;,&quot;c6dec291_25a8_ea46_0550_6ffe3c944884&quot;,&quot;0d67a96b_393d_9e1b_e8a4_2107fd5c7fdb&quot;,&quot;b812ade8_b9bd_036b_476b_5a9988f28f39&quot;,&quot;755691e7_7592_d40f_3f08_63b003920a64&quot;,&quot;0685f6d6_f80f_c170_7142_8d20e230e6ec&quot;,&quot;80ae9849_84d0_45b5_92a5_df76941cc1d4&quot;,&quot;cdf40c59_d366_39a6_2e6d_adcb3702a866&quot;,&quot;7441d9c7_1ea6_a567_ec19_a2c2d05894be&quot;,&quot;7ead462a_e81e_da47_5644_2d79ade07bfa&quot;,&quot;86fc80ac_63e7_936d_fb47_78efd607fc1b&quot;,&quot;05ea9e45_787e_0733_7b8b_ea3e6fc15520&quot;,&quot;9670d716_ab57_b447_b5c5_15685e3d5b94&quot;,&quot;eb2245cc_c9c0_6677_a114_b9ad7fd345e5&quot;,&quot;54f9aec0_c59d_d7a2_a6f0_4c6bdbabc0f0&quot;,&quot;2e3d4173_d598_a164_ca77_77ec4fd2f6df&quot;,&quot;3dda8d87_115f_f6ff_6c80_3f332aa95916&quot;],&quot;up&quot;:[&quot;https&quot;,&quot;ppapi.tatadigital.com&quot;,&quot;analytics-engine&quot;,&quot;config&quot;,&quot;v2&quot;,&quot;preprod2.tataunistore.com&quot;,&quot;app.launchdarkly.com&quot;,&quot;sdk&quot;,&quot;goals&quot;,&quot;641c090d7fb3051356dd7e64&quot;,&quot;www.tataque.com&quot;,&quot;otatacliq&quot;,&quot;getApplicationProperties.json&quot;,&quot;propertyNames=is_MPL_WEB_MNL_Login_True_V1&quot;,&quot;propertyNames=isNeupassEnabled&quot;,&quot;evalx&quot;,&quot;contexts&quot;,&quot;eyJraW5kIjoidXNlciIsImtleSI6ImFub255bW91cyJ9&quot;,&quot;marketplacewebservices&quot;,&quot;mpl&quot;,&quot;products&quot;,&quot;searchab&quot;,&quot;sessionUID=ljpfngfykjw2wa6h&amp;channel=web&quot;,&quot;cms&quot;,&quot;desktopservice&quot;,&quot;header&quot;,&quot;www.google-analytics.com&quot;,&quot;j&quot;,&quot;collect&quot;,&quot;v=1&amp;_v=j101&amp;a=1028330421&amp;t=pageview&amp;_s=1&amp;dl=https%3A%2F%2Fpreprod2.tataunistore.com%2F&amp;dp=homepage&amp;ul=en-gb&amp;de=UTF-8&amp;dt=homepage&amp;sd=24-bit&amp;sr=1360x768&amp;vp=1360x579&amp;je=0&amp;_u=CAGAAAABAAAAACAC~&amp;jid=&amp;gjid=&amp;cid=751837002.1685532151&amp;tid=UA-107496842-2&amp;_gid=571333843.1688544252&amp;_slc=1&amp;z=1649881424&quot;,&quot;tataunistore.tt.omtrdc.net&quot;,&quot;rest&quot;,&quot;v1&quot;,&quot;delivery&quot;,&quot;client=tataunistore&amp;sessionId=e47dd6790acc429abd94b4881ce08167&amp;version=2.8.0&quot;,&quot;preprodclixtream.tatacliq.com&quot;,&quot;com.clixtream.inviz&quot;,&quot;tp2&quot;,&quot;footer&quot;,&quot;api&quot;,&quot;sso&quot;,&quot;check-session&quot;,&quot;rum-collector-2.pingdom.net&quot;,&quot;img&quot;,&quot;beacon.gif&quot;,&quot;id=618e56129034fb00110002e0&amp;sAW=1360&amp;sAH=741&amp;bIW=1360&amp;bIH=579&amp;pD=24&amp;dPR=1&amp;or=landscape-primary&amp;nT=1&amp;rC=0&amp;nS=0&amp;cS=3&amp;cE=3&amp;dLE=3&amp;dLS=3&amp;fS=3&amp;hS=-1&amp;rE=-1&amp;rS=-1&amp;reS=11&amp;resS=50&amp;resE=52&amp;uEE=66&amp;uES=65&amp;dL=71&amp;dI=407&amp;dCLES=762&amp;dCLEE=773&amp;dC=2858&amp;lES=2858&amp;lEE=2921&amp;s=nt&amp;title=Online%20Shopping%20Site%20in%20India%20-%20Upto%2060%25%20Off%20On%20Mobiles%2C%20Electronics%20%26%20Fashion%20at%20Tata%20CLiQ&amp;path=https%3A%2F%2Fpreprod2.tataunistore.com%2F&amp;ref=&amp;sId=zgwbvm2c&amp;...&quot;,&quot;events.launchdarkly.com&quot;,&quot;events&quot;,&quot;diagnostic&quot;,&quot;defaultpage&quot;,&quot;pageId=defaulthomepage&amp;channel=desktop&amp;format=json&quot;,&quot;googleads4.g.doubleclick.net&quot;,&quot;pcs&quot;,&quot;view&quot;,&quot;xai=AKAOjstAXrECV-yHZ7RlCbQjnbRBFYOksBkrV2i0qEcrFi41sMWaQ46RR6e4Vulcj_Z1v7F2OW-4UZFWg67FMFO6bKpx2soIqoBuaYBd_zLTstV_IHg7utQcICttcbwNjmQ29L1lX_vbvyA0D8qByFphloiWQTl-Kr-swL8Wt2NQEtx_aYOh87AE&amp;sai=AMfl-YS2SKASIVXd1GbMJ45hRbHPNiYsvN_P9q1zmMPuhy8VKQX4FerLTnG9NHCrbY1A1ztQxtPsiwORBhK2ygUPxyZt7QpXrDY6yzx5BQ&amp;sig=Cg0ArKJSzItTdsTY52g1EAE&amp;uach_m=[UACH]&amp;cry=1&amp;fbs_aeid=[gw_fbsaeid]&amp;urlfix=1&amp;omid=0&amp;rm=1&amp;ctpt=3&amp;cbvp=1&amp;cisv=r20230627.57862&amp;arae=0&amp;ftch=1&amp;adurl=&quot;,&quot;bulk&quot;,&quot;propertyNames=is_WEB_MNL_EMAIL_HIDDEN&quot;,&quot;cdn.appdynamics.com&quot;,&quot;adrum&quot;,&quot;adrum-latest.js&quot;,&quot;src&quot;,&quot;assets&quot;,&quot;fonts&quot;,&quot;rubik-v20-latin-regular.woff2&quot;,&quot;rubik-v7-latin-500.woff2&quot;,&quot;rubik-v7-latin-300.woff2&quot;,&quot;sit-r2-account.tatadigital.com&quot;,&quot;tdl-sso-auth.js&quot;,&quot;client.d76eaa9e4bee.js&quot;,&quot;css&quot;,&quot;style.f187c53d7bf1.css&quot;,&quot;assets.adobedtm.com&quot;,&quot;9fd06d4068c619c47b289b9c496761efd086a233&quot;,&quot;satelliteLib-5768eb8c6d43533f225815e1e41f7be236249910.js&quot;,&quot;extensions&quot;,&quot;EPbde2f7ca14e540399dcc1f8208860b7b&quot;,&quot;AppMeasurement.min.js&quot;,&quot;analytics.js&quot;,&quot;bat.bing.com&quot;,&quot;bat.js&quot;,&quot;d246big5q963u9.cloudfront.net&quot;,&quot;vue_ai.js&quot;,&quot;s3.ap-south-1.amazonaws.com&quot;,&quot;iglu.acme.com.dev.clixtream&quot;,&quot;tracker.js&quot;,&quot;p&quot;,&quot;action&quot;,&quot;5526064.js&quot;,&quot;0&quot;,&quot;ti=5526064&amp;Ver=2&amp;mid=aaddb820-41e2-4eb7-81b3-46bc2b139482&amp;si...&quot;,&quot;home-container.d7dd14100776.chunk.css&quot;,&quot;home-container.ad3c54b90459.bundle.js&quot;,&quot;desktop-footer-container.1154f49827a5.chunk.css&quot;,&quot;desktop-footer-container.0b3ce03f5777.bundle.js&quot;,&quot;toast-container.6e6c1cf0d65b.chunk.css&quot;,&quot;toast-container.1a3da06be449.bundle.js&quot;,&quot;general&quot;,&quot;components&quot;,&quot;group.svg&quot;,&quot;profile.png&quot;,&quot;order-history.svg&quot;,&quot;WL7.svg&quot;,&quot;account&quot;,&quot;alert.svg&quot;,&quot;giftCards.svg&quot;,&quot;cliqCash.svg&quot;,&quot;search&quot;,&quot;search-inactive.svg&quot;,&quot;orderhistorywhite.svg&quot;,&quot;WL4.svg&quot;,&quot;loader.gif&quot;,&quot;www.google.com&quot;,&quot;recaptcha&quot;,&quot;enterprise.js&quot;,&quot;render=6LfekEskAAAAAIz5hy1uctRdGfIWcPPpKa4e5D6Y&quot;,&quot;c.o-s.io&quot;,&quot;100007&quot;,&quot;rum-static.pingdom.net&quot;,&quot;pa-618e56129034fb00110002e0.js&quot;,&quot;5aeb47d5f6a0&quot;,&quot;5afebd2a8d55&quot;,&quot;be26a8768a60&quot;,&quot;RC62d484b5a4e9462b996a2ed28f10d7ed-source.min.js&quot;,&quot;d2r1yp2w7bby2u.cloudfront.net&quot;,&quot;js&quot;,&quot;a.js&quot;,&quot;trustFrame.png&quot;,&quot;Frame22222.svg&quot;,&quot;t.o-s.io&quot;,&quot;site&quot;,&quot;res=1360x768&amp;lang=en&amp;client_id=100007&amp;product_category=defau...&quot;,&quot;RC01a32a43deb34370bd077cff9346c215-source.min.js&quot;,&quot;v=1&amp;_v=j101&amp;a=1028330421&amp;t=pageview&amp;_s=1&amp;dl=https%3A%2F%2Fpr...&quot;,&quot;RC315a887780184860b37d9fbb199265d4-source.min.js&quot;,&quot;RC9c71f72d251c49ab8c3bfd08b4ed1b2a-source.min.js&quot;,&quot;RC93fb25aa99874837a987b16b49be2c4c-source.min.js&quot;,&quot;client=tataunistore&amp;sessionId=e47dd6790acc429abd94b4881ce081...&quot;,&quot;wzrkt.com&quot;,&quot;a&quot;,&quot;t=96&amp;type=push&amp;d=N4IgLgngDgpiBcIoCcD2AzAlgGzgGiTS1wVAGMwB9VK...&quot;,&quot;t=96&amp;type=page&amp;d=N4IglgJiBcICoFEDKcC0BOAbAdlQJQFYBpVADkIC0QA...&quot;,&quot;t=96&amp;type=push&amp;d=N4IgLgngDgpiBcIYDcYDswgDROWAcgIYC2ciAygMYBO...&quot;,&quot;www.gstatic.com&quot;,&quot;releases&quot;,&quot;khH7Ei3klcvfRI74FvDcfuOo&quot;,&quot;recaptcha__en.js&quot;,&quot;tataunistorelimited.sc.omtrdc.net&quot;,&quot;b&quot;,&quot;ss&quot;,&quot;tataul-prod&quot;,&quot;1&quot;,&quot;JS-2.22.0-LDQM&quot;,&quot;s94595145950081&quot;,&quot;AQB=1&amp;ndh=1&amp;pf=1&amp;t=5%2F6%2F2023%2020%3A57%3A11%203%20-330&amp;sd...&quot;,&quot;down-arrow-white.svg&quot;,&quot;cdn.preciso.net&quot;,&quot;aud&quot;,&quot;clientjs&quot;,&quot;ptag.js&quot;,&quot;908&quot;,&quot;pageView&quot;,&quot;ref=-&amp;url=https%3A%2F%2Fpreprod2.tataunistore.com%2F&amp;clicked...&quot;,&quot;assetspreprod2.tataunistore.com&quot;,&quot;medias&quot;,&quot;sys_master&quot;,&quot;images&quot;,&quot;13994142335006.png&quot;,&quot;13994142892062.png&quot;,&quot;13976586715166.png&quot;,&quot;13976586780702.png&quot;,&quot;13976586846238.png&quot;,&quot;13976586911774.png&quot;,&quot;13976586977310.png&quot;,&quot;enterprise&quot;,&quot;anchor&quot;,&quot;ar=1&amp;k=6LfekEskAAAAAIz5hy1uctRdGfIWcPPpKa4e5D6Y&amp;co=aHR0cHM6L...&quot;,&quot;s9817831508003&quot;,&quot;AQB=1&amp;ndh=1&amp;pf=1&amp;t=5%2F6%2F2023%2020%3A57%3A11%203%20-330&amp;mi...&quot;,&quot;s99694806053565&quot;,&quot;908.js&quot;,&quot;cm.g.doubleclick.net&quot;,&quot;pixel&quot;,&quot;google_nid=preciso_srl&amp;google_ula=6490516189&amp;google_cm&amp;cok15...&quot;,&quot;RC556ad865cfaf464d9a5549d89d95f5f4-source.min.js&quot;,&quot;RC5a0290c3efba4ac29a84c0e688a8ce8e-source.min.js&quot;,&quot;RCec501edcc1524c9486d25882bf5f08e3-source.min.js&quot;,&quot;RCad52702e7e124b7d8cc2753c5da6b212-source.min.js&quot;,&quot;RCd95bc0e7d5ff4772a68ff5a7e62b2b53-source.min.js&quot;,&quot;RC3282a34db67c4ef1a1ef3f6e022b8aef-source.min.js&quot;,&quot;RC7d68e2b6d5064af69272a9f39b1ad925-source.min.js&quot;,&quot;RCf8a0c1eb93b9422eac10e94ca4fa047a-source.min.js&quot;,&quot;RCdf3b106830284b6d87556f03515ea098-source.min.js&quot;,&quot;RCe178a395159a439eb953510bf87b08cb-source.min.js&quot;,&quot;RC91ddab9234114b05a73a01e7ccf286bc-source.min.js&quot;,&quot;RC9ca1977da1cb4a4092ae9c3ae32a41c6-source.min.js&quot;,&quot;RC3342c9448ada46a09fd49ed2d2cac01b-source.min.js&quot;,&quot;RC65b96683cc24440a8b9a175e20953a07-source.min.js&quot;,&quot;RCc804801176da4529a7acbec266b9d370-source.min.js&quot;,&quot;RC1c0aad1fe87c4b30a7016b038ba1fafe-source.min.js&quot;,&quot;adrum-ext.bf71fe39e20d2aa8ad53d37ab6377745.js&quot;,&quot;id=618e56129034fb00110002e0&amp;sAW=1360&amp;sAH=741&amp;bIW=1360&amp;bIH=57...&quot;,&quot;favicon.ico&quot;,&quot;manifest.json&quot;,&quot;static.criteo.net&quot;,&quot;ld&quot;,&quot;ld.js&quot;,&quot;www.googletagmanager.com&quot;,&quot;gtag&quot;,&quot;id=AW-931235868&quot;,&quot;connect.facebook.net&quot;,&quot;en_US%20&quot;,&quot;fbevents.js&quot;,&quot;capi.tatacliq.com&quot;,&quot;static&quot;,&quot;DhPixel.js&quot;,&quot;icons&quot;,&quot;icon-144x144.png&quot;,&quot;ad.doubleclick.net&quot;,&quot;ddm&quot;,&quot;adj&quot;,&quot;N762302.197812NSO.CODESRV&quot;,&quot;B21627307.227958516;sz=1x2;ord=391403900156&quot;,&quot;8706005.fls.doubleclick.net&quot;,&quot;activityi;src=8706005;type=allsi0;cat=allsi0;u7=https:&quot;,&quot;;dc_lat=;dc_rdid=;tag_for_chil...atment=;tfua=;npa=;ord=1;num=10&quot;,&quot;a.quora.com&quot;,&quot;qevents.js&quot;,&quot;q.quora.com&quot;,&quot;_&quot;,&quot;ad&quot;,&quot;33ec680bea5149d6b4a480679a575f11&quot;,&quot;tag=ViewContent&amp;noscript=1&quot;,&quot;static.ads-twitter.com&quot;,&quot;uwt.js&quot;,&quot;signals&quot;,&quot;149840415420474&quot;,&quot;v=2.9.111&amp;r=stable&quot;,&quot;t.co&quot;,&quot;i&quot;,&quot;adsct&quot;,&quot;bci=3&amp;eci=2&amp;event_id=c1ce367b-9572-42d4-9073-c1e0a1a18dd7&amp;ev...&quot;,&quot;analytics.twitter.com&quot;,&quot;googleads.g.doubleclick.net&quot;,&quot;pagead&quot;,&quot;viewthroughconversion&quot;,&quot;868415197&quot;,&quot;random=1688570833484&amp;cv=11&amp;fst=1688570833484&amp;bg=ffffff&amp;guid=...&quot;,&quot;931235868&quot;,&quot;random=1688570833545&amp;cv=11&amp;fst=1688570833545&amp;bg=ffffff&amp;guid=...&quot;,&quot;j=1&amp;u=https%3A%2F%2Fpreprod2.tataunistore.com%2F&amp;tag=ViewCon...&quot;,&quot;www.facebook.com&quot;,&quot;tr&quot;,&quot;id=149840415420474&amp;ev=PageView&amp;dl=https%3A%2F%2Fpreprod2.tat...&quot;,&quot;www.googletagservices.com&quot;,&quot;activeview&quot;,&quot;current&quot;,&quot;rx_lidar.js&quot;,&quot;cache=r20110914&quot;,&quot;pagead2.googlesyndication.com&quot;,&quot;...&quot;,&quot;r20230627&quot;,&quot;r20110914&quot;,&quot;elements&quot;,&quot;html&quot;,&quot;omrhp.js&quot;,&quot;xai=AKAOjstAXrECV-yHZ7RlCbQjnbRBFYOksBkrV2i0qEcrFi41sMWaQ46R...&quot;,&quot;27359062622238.png&quot;,&quot;6479.8785ae3b18ec.chunk.css&quot;,&quot;6479.fd5278297fea.bundle.js&quot;,&quot;1p-user-list&quot;,&quot;random=1688570833545&amp;cv=11&amp;fst=1688569200000&amp;bg=ffffff&amp;guid=...&quot;,&quot;www.google.co.in&quot;,&quot;random=1688570833484&amp;cv=11&amp;fst=1688569200000&amp;bg=ffffff&amp;guid=...&quot;,&quot;id=149840415420474&amp;ev=SubscribedButtonClick&amp;dl=https%3A%2F%2...&quot;,&quot;RC2b9f6feb09d6403984518f568670a6ff-source.min.js&quot;,&quot;RC61fb6a4e56b2422ea06f367be9699836-source.min.js&quot;,&quot;mobile-number-login.0f718eda1bb7.chunk.css&quot;,&quot;mobile-number-login.c68a8aa889cd.bundle.js&quot;,&quot;s91288431696242&quot;,&quot;AQB=1&amp;ndh=1&amp;pf=1&amp;t=5%2F6%2F2023%2020%3A57%3A15%203%20-330&amp;mi...&quot;,&quot;s96277101085995&quot;,&quot;mobile-number-login&quot;,&quot;close_icon.svg&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_10}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">eumcollector/beacons/browser/v1/BO-AAB-BZU/adrum</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Check-phone" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;countryCode&quot;:&quot;91&quot;,&quot;phone&quot;:&quot;9832232323&quot;,&quot;sendOtp&quot;:true,&quot;recaptchaToken&quot;:&quot;03AAYGu2SXAyaZ5zMUkzt7UgqSRxpNc5MCyEv2F7usdvVdM2dDUfUWaGZ_ZL4U5lhEmLbygN45GcP4c9e9vllzsY_FYOJoyOBdsLlPG13LDXMTyWfUN5pqydzF_EmG1JUhPA_Mi9Sb97x01j31J1Rj57Mdj4zEks6xRKI-c2vJyze255D9G7v2YGx6aBmp_Nuku-qO4ZYukilUmTnGLIIf6Ys5_y10ORPUC3teTZCSw3fjq4GFHXcmd4Dcjpqm1Yh5OR5qUsIes7m-GynmKartuStifawAfioMixHO_25zz_B7o4J-SdybnDCKGgH1SDl6lRpumLelDb8_LP26Zn-kYPO-PyIXPkGDUE_FfUKQ41MrgeFOOY4GFI1MFp_OBqGHN_HOFH-j2G0H3qPnvepl8xCkW-sndZ1OzLGNbIa8RwrDXyjq4vfE7JaiuHhAJL0Rblc2ElBpiqCJykFneLNhocf_r8hL18fZ8hoH7BsJ8erEBr-MLVyCZm6Br39_2z-sxgAqSftTnXSqY3wP6P0lr_nKLBJ2GHXMjy0UVayaZPz4BWhdKJAJYJkPsJCFTiD9FGoqLz4qEbhWxB3up1TaYlWQiNwwG2WOPVB-u50qKXnr_YI-9T3EAU01tQt4HJ-s-7tkdOBXEdseeFYI95HuK8J87xaJRo93Yv8XXEDat8oRo6VtWt5qhJmYOi5hRgHq2bFEg9n-PPIPUnKaN-vo1SLDXQ6MUt6fiBKYg6X4SJyZ43S4zh-QkRIhHISCU6eV-ifoEc3ftZ-v3FKIJ3Tfl-Tp5ZosFztHTyfTUzefe282fxTqLNPGtrbgmyAzrS-l_EJYw2TZcCDJtDMUx3DJR-NsquwmdOjZu84hfje3ZQJjM8RuRhuJb6qU4FCiLJeK9mLVhdciWk_p7NKeLbsRiuFCp8IDfcqGqWQfF2ohgcIqOC8qmgy-ixgmt5aDYRrPTzUskSCgpdVa5uz7lZhnLLgKmsLnmGy_fVYBcqH9xwGy2YO-zKZAgFpmyCQectFdbSJzce0vNI1Ga9vctOJ6d_O0S34se8lTc7506nPpTU0tsxCpyQE8srYwVgvNo6dOweqn0alE_GbxSIkBOjSpX4WNkf0W1GLmX3HqFAyl6eh6IMExEwUBCxrmhSh6hmcwQyVa1q_lNNeWWPlv5GWbkBd7KzA3TlDMhhPYNBaN-jgkNW_oWiPKaCQ7pKA44bDvOwZRFeS_VIzKNV_H3iIPReGEKGsw6YiN9jgJZIGHaW8Y77gSWUToQDq9Z2-vsZwAlhLMsL5vwvQdgEhldGSp8NAZqlp3SnoDkjDSjK0Sd6YR8pl3szTY74urLmkvUAnLW5osqoHLoI1ixO0G4mT375Kv5Rb-BzBYbf3he5ExZdC1yHVGV8Qd2CQwsMxJPmoMORtlhesVhNJj5dlowKyOUlEXuWGYj0yxFKdu6jEmMtNyAPdQ1vSvWmp9qYLIHXaIvmuLKJ4Hj3y9BjaSCZL4LJv4ZzgzRtqLTgqOtrjA0WIKYcBS1RJVj0IbZVlbXwxUlst0IiUHL7nnFP0hCkZkjHQnclq-MVzKajwSExnB5i3Aa3IYAFMwYRXqLdlJpGUenqB_TbcYNpP6J2HPuRXxBqEbA6AmOr0ivkzq2Lgxty9HRQ49rU2gymqq8zlmqLc73ajQdJj3qwCvHHvTExbUVjBSrluZOYr0S8r3yGNPEuF3xG7h9iZkVvONwXx5s7IOsQBU83KZMXjuIZpnNylqAu-wlyutz7lJ8A&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/sso/check-phone</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Referring-Client" elementType="Header">
                  <stringProp name="Header.name">Referring-Client</stringProp>
                  <stringProp name="Header.value">https://preprod2.tataunistore.com</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="isAbsoluteUrl" elementType="Header">
                  <stringProp name="Header.name">isAbsoluteUrl</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="client_secret" elementType="Header">
                  <stringProp name="Header.name">client_secret</stringProp>
                  <stringProp name="Header.value">2beb1073-6a5c-451c-8516-8d1f3e1466b8</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">refId</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;refId&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bom-col.eum-appdynamics.com/eumcollector/beacons/browser/v1/BO-AAB-BZU/adrum" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;vr&quot;:&quot;23.3.1.4273&quot;,&quot;dt&quot;:&quot;R&quot;,&quot;rg&quot;:&quot;0&quot;,&quot;es&quot;:[{&quot;eg&quot;:&quot;1&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/5&quot;,&quot;ts&quot;:1688570842399,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://6/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:373,&quot;DDT&quot;:1,&quot;DPT&quot;:0,&quot;PLT&quot;:374,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3835}],&quot;ai&quot;:&quot;cc693ceb_3846_4d2f_1802_e8ec66bd93bf&quot;,&quot;gs&quot;:[&quot;f26654a2_52a4_2a9b_d931_ab07cd6481fc&quot;,&quot;aaeb6844_f93e_554f_4f33_fcb1a507ad3a&quot;],&quot;up&quot;:[&quot;https&quot;,&quot;ppapi.tatadigital.com&quot;,&quot;api&quot;,&quot;v2&quot;,&quot;sso&quot;,&quot;check-phone&quot;,&quot;preprod2.tataunistore.com&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_10}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">eumcollector/beacons/browser/v1/BO-AAB-BZU/adrum</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Verify-phone-otp" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;otp&quot;:&quot;214263&quot;,&quot;refId&quot;:&quot;${refId}&quot;,&quot;redirectUrl&quot;:&quot;https://www.tatadigital.com/login-callback&quot;,&quot;countryCode&quot;:&quot;91&quot;,&quot;phone&quot;:&quot;9832232323&quot;,&quot;loyalCustomer&quot;:&quot;Y&quot;,&quot;consentType&quot;:&quot;Implicit&quot;,&quot;programTnC&quot;:&quot;true&quot;,&quot;privacyPolicyAccepted&quot;:&quot;true&quot;,&quot;codeChallenge&quot;:&quot;cew5digQVimxsYPL8SWO6RMoAE_5ErzPfzdGo6m2Aoo&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/sso/verify-phone-otp</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="isAbsoluteUrl" elementType="Header">
                  <stringProp name="Header.name">isAbsoluteUrl</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="client_secret" elementType="Header">
                  <stringProp name="Header.name">client_secret</stringProp>
                  <stringProp name="Header.value">2beb1073-6a5c-451c-8516-8d1f3e1466b8</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
            <stringProp name="RegexExtractor.useHeaders">false</stringProp>
            <stringProp name="RegexExtractor.refname">authcode</stringProp>
            <stringProp name="RegexExtractor.regex">&quot;authCode&quot;:&quot;(.+?)&quot;</stringProp>
            <stringProp name="RegexExtractor.template">$1$</stringProp>
            <stringProp name="RegexExtractor.default"></stringProp>
            <stringProp name="RegexExtractor.match_number">1</stringProp>
          </RegexExtractor>
          <hashTree/>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Access Token Verify" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;codeVerifier&quot;:&quot;F811VTMxr9tUE2o6DXXdDdwUGldAxTDGITZeD1_Tnhk&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/sso/access-token/${authcode}</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="isAbsoluteUrl" elementType="Header">
                  <stringProp name="Header.name">isAbsoluteUrl</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="client_secret" elementType="Header">
                  <stringProp name="Header.name">client_secret</stringProp>
                  <stringProp name="Header.value">2beb1073-6a5c-451c-8516-8d1f3e1466b8</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
            <RegexExtractor guiclass="RegexExtractorGui" testclass="RegexExtractor" testname="Regular Expression Extractor" enabled="true">
              <stringProp name="RegexExtractor.useHeaders">false</stringProp>
              <stringProp name="RegexExtractor.refname">accesstoken</stringProp>
              <stringProp name="RegexExtractor.regex">&quot;accessToken&quot;:&quot;(.+?)&quot;</stringProp>
              <stringProp name="RegexExtractor.template">$1$</stringProp>
              <stringProp name="RegexExtractor.default"></stringProp>
              <stringProp name="RegexExtractor.match_number">1</stringProp>
            </RegexExtractor>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Fetchcustomer" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v3/gr/fetchcustomer</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${accesstoken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ppapi.tatadigital.com-create-session" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/sso/create-session</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${accesstoken}</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Origin" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Origin</stringProp>
                  <stringProp name="Header.value">https://ppapi.tatadigital.com</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bom-col.eum-appdynamics.com/eumcollector/beacons/browser/v1/BO-AAB-BZU/adrum" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;vr&quot;:&quot;23.3.1.4273&quot;,&quot;dt&quot;:&quot;R&quot;,&quot;rg&quot;:&quot;0&quot;,&quot;es&quot;:[{&quot;eg&quot;:&quot;1&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/5&quot;,&quot;ts&quot;:1688570847846,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://6/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:555,&quot;DDT&quot;:2,&quot;DPT&quot;:0,&quot;PLT&quot;:557,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3836},{&quot;eg&quot;:&quot;2&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/7/8&quot;,&quot;ts&quot;:1688570848414,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://6/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:276,&quot;DDT&quot;:1,&quot;DPT&quot;:0,&quot;PLT&quot;:277,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3837},{&quot;eg&quot;:&quot;3&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/9&quot;,&quot;ts&quot;:1688570848695,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://6/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:207,&quot;DDT&quot;:3,&quot;DPT&quot;:0,&quot;PLT&quot;:210,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3838},{&quot;eg&quot;:&quot;4&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/10/11/12&quot;,&quot;ts&quot;:1688570848699,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://6/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:430,&quot;DDT&quot;:4,&quot;DPT&quot;:0,&quot;PLT&quot;:434,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3839}],&quot;ai&quot;:&quot;cc693ceb_3846_4d2f_1802_e8ec66bd93bf&quot;,&quot;gs&quot;:[&quot;f26654a2_52a4_2a9b_d931_ab07cd6481fc&quot;,&quot;9aa61d31_e660_82fd_ed64_33bd0e5afc4e&quot;,&quot;4f11415c_193e_7a45_4c39_1597b47a2906&quot;,&quot;8412b69c_c002_dbed_b887_7ffd0eabdd8d&quot;,&quot;1ac862f2_e4ae_6578_926d_911d09397164&quot;],&quot;up&quot;:[&quot;https&quot;,&quot;ppapi.tatadigital.com&quot;,&quot;api&quot;,&quot;v2&quot;,&quot;sso&quot;,&quot;verify-phone-otp&quot;,&quot;preprod2.tataunistore.com&quot;,&quot;access-token&quot;,&quot;f9800a3c4c4578c5813843beed2f81dfc6fb0353a62a00eae64ec9bb15899dc2&quot;,&quot;create-session&quot;,&quot;v3&quot;,&quot;gr&quot;,&quot;fetchcustomer&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_10}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">eumcollector/beacons/browser/v1/BO-AAB-BZU/adrum</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ppapi.tatadigital-updateprofile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;primaryEmailId&quot;:&quot;yyrryeyeye@yopmail.com&quot;,&quot;loyalCustomer&quot;:&quot;Y&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/gr/updateprofile</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer ${accesstoken}</stringProp>
                </elementProp>
                <elementProp name="store_id" elementType="Header">
                  <stringProp name="Header.name">store_id</stringProp>
                  <stringProp name="Header.value">cliq.marketplace</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register-td-user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="access_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">access_token</stringProp>
                  <stringProp name="Argument.value">640e4941-a5ce-4cb5-9100-3ae90a628f18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tdCustomerHash" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tdCustomerHash</stringProp>
                  <stringProp name="Argument.value">c5bd5409b6b5a8e395250d78a089113f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tdAccessToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tdAccessToken</stringProp>
                  <stringProp name="Argument.value">375a990f-28f7-4116-9d17-98e72070bf8a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tdClientID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tdClientID</stringProp>
                  <stringProp name="Argument.value">TATACLIQ-WEB-APP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isLoyaltyEnabled" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isLoyaltyEnabled</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="suppressWelcomeMailer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">suppressWelcomeMailer</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/register-td-user</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bom-col.eum-appdynamics.com/eumcollector/beacons/browser/v1/BO-AAB-BZU/adrum" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;vr&quot;:&quot;23.3.1.4273&quot;,&quot;dt&quot;:&quot;R&quot;,&quot;rg&quot;:&quot;0&quot;,&quot;es&quot;:[{&quot;eg&quot;:&quot;1&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/5&quot;,&quot;ts&quot;:1688570858724,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://6/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:452,&quot;DDT&quot;:9,&quot;DPT&quot;:0,&quot;PLT&quot;:461,&quot;ARE&quot;:0},&quot;md&quot;:&quot;PUT&quot;,&quot;xs&quot;:200,&quot;si&quot;:3840}],&quot;ai&quot;:&quot;cc693ceb_3846_4d2f_1802_e8ec66bd93bf&quot;,&quot;gs&quot;:[&quot;f26654a2_52a4_2a9b_d931_ab07cd6481fc&quot;,&quot;4880d6b8_068f_edcb_126a_8726ac8ec8f4&quot;],&quot;up&quot;:[&quot;https&quot;,&quot;ppapi.tatadigital.com&quot;,&quot;api&quot;,&quot;v2&quot;,&quot;gr&quot;,&quot;updateprofile&quot;,&quot;preprod2.tataunistore.com&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_10}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">eumcollector/beacons/browser/v1/BO-AAB-BZU/adrum</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Oauth token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tdCustomerHash" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tdCustomerHash</stringProp>
                  <stringProp name="Argument.value">c5bd5409b6b5a8e395250d78a089113f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tdAccessToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tdAccessToken</stringProp>
                  <stringProp name="Argument.value">375a990f-28f7-4116-9d17-98e72070bf8a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isTdLogin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isTdLogin</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tdClientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tdClientId</stringProp>
                  <stringProp name="Argument.value">TATACLIQ-WEB-APP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="platformNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">platformNumber</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">secret</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">gauravj@dewsolutions.in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">9832232323</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/oauth/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ppapi.tatadigital-updateprofile" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;primaryEmailId&quot;:&quot;yyrryeyeye@yopmail.com&quot;,&quot;loyalCustomer&quot;:&quot;Y&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v2/gr/updateprofile</stringProp>
            <stringProp name="HTTPSampler.method">PUT</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer 375a990f-28f7-4116-9d17-98e72070bf8a</stringProp>
                </elementProp>
                <elementProp name="store_id" elementType="Header">
                  <stringProp name="Header.name">store_id</stringProp>
                  <stringProp name="Header.value">cliq.marketplace</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Register-td-user" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="access_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">access_token</stringProp>
                  <stringProp name="Argument.value">640e4941-a5ce-4cb5-9100-3ae90a628f18</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tdCustomerHash" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tdCustomerHash</stringProp>
                  <stringProp name="Argument.value">c5bd5409b6b5a8e395250d78a089113f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tdAccessToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tdAccessToken</stringProp>
                  <stringProp name="Argument.value">375a990f-28f7-4116-9d17-98e72070bf8a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tdClientID" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tdClientID</stringProp>
                  <stringProp name="Argument.value">TATACLIQ-WEB-APP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isLoyaltyEnabled" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isLoyaltyEnabled</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="suppressWelcomeMailer" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">suppressWelcomeMailer</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/register-td-user</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Customer Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="access_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">access_token</stringProp>
                  <stringProp name="Argument.value">b16f419f-1a4f-484a-bdb1-b37e189d9879</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="platformNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">platformNumber</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/9832232323/customerLogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="adrum" elementType="Header">
                  <stringProp name="Header.name">adrum</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Oauth Token" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="tdCustomerHash" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tdCustomerHash</stringProp>
                  <stringProp name="Argument.value">c5bd5409b6b5a8e395250d78a089113f</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tdAccessToken" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tdAccessToken</stringProp>
                  <stringProp name="Argument.value">375a990f-28f7-4116-9d17-98e72070bf8a</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isTdLogin" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">isTdLogin</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="tdClientId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">tdClientId</stringProp>
                  <stringProp name="Argument.value">TATACLIQ-WEB-APP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="grant_type" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">grant_type</stringProp>
                  <stringProp name="Argument.value">password</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="platformNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">platformNumber</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_secret" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client_secret</stringProp>
                  <stringProp name="Argument.value">secret</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="client_id" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">client_id</stringProp>
                  <stringProp name="Argument.value">gauravj@dewsolutions.in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="username" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">username</stringProp>
                  <stringProp name="Argument.value">9832232323</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/oauth/token</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetHomescreenWidget" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/9832232323/getHomescreenWidget</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="pageType" elementType="Header">
                  <stringProp name="Header.name">pageType</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer b16f419f-1a4f-484a-bdb1-b37e189d9879</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="channel" elementType="Header">
                  <stringProp name="Header.name">channel</stringProp>
                  <stringProp name="Header.value">desktop</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetNotifyMe" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/9832232323/getNotifyMe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Server" elementType="Header">
                  <stringProp name="Header.name">Server</stringProp>
                  <stringProp name="Header.value">Microsoft-IIS/8.0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer b16f419f-1a4f-484a-bdb1-b37e189d9879</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-store, must-revalidate, no-cache, max-age=0</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">Mon, 01 Jan 1990 00:00:00 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Customer Login" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="access_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">access_token</stringProp>
                  <stringProp name="Argument.value">b16f419f-1a4f-484a-bdb1-b37e189d9879</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="platformNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">platformNumber</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/9832232323/customerLogin</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="adrum" elementType="Header">
                  <stringProp name="Header.name">adrum</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User Wishlist" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="access_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">access_token</stringProp>
                  <stringProp name="Argument.value">b16f419f-1a4f-484a-bdb1-b37e189d9879</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="platformNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">platformNumber</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isPwa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isPwa</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="wishlistName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">wishlistName</stringProp>
                  <stringProp name="Argument.value">MyWishList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/9832232323/wishlist</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="adrum" elementType="Header">
                  <stringProp name="Header.name">adrum</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetHomescreenWidget" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/9832232323/getHomescreenWidget</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="pageType" elementType="Header">
                  <stringProp name="Header.name">pageType</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">bearer b16f419f-1a4f-484a-bdb1-b37e189d9879</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="channel" elementType="Header">
                  <stringProp name="Header.name">channel</stringProp>
                  <stringProp name="Header.value">desktop</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetNotifyme" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/9832232323/getNotifyMe</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Server" elementType="Header">
                  <stringProp name="Header.name">Server</stringProp>
                  <stringProp name="Header.value">Microsoft-IIS/8.0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="authorization" elementType="Header">
                  <stringProp name="Header.name">authorization</stringProp>
                  <stringProp name="Header.value">Bearer b16f419f-1a4f-484a-bdb1-b37e189d9879</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-store, must-revalidate, no-cache, max-age=0</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">Mon, 01 Jan 1990 00:00:00 GMT</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User Wishlist" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="access_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">access_token</stringProp>
                  <stringProp name="Argument.value">b16f419f-1a4f-484a-bdb1-b37e189d9879</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">channel</stringProp>
                  <stringProp name="Argument.value">web</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isPwa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isPwa</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="wishlistName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">wishlistName</stringProp>
                  <stringProp name="Argument.value">MyWishList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/9832232323/CreateWishlist</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">multipart/form-data; boundary=----WebKitFormBoundaryzAU4Ac7HXVP8RBlx</stringProp>
                </elementProp>
                <elementProp name="adrum" elementType="Header">
                  <stringProp name="Header.name">adrum</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User Cart" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="access_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">access_token</stringProp>
                  <stringProp name="Argument.value">b16f419f-1a4f-484a-bdb1-b37e189d9879</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">channel</stringProp>
                  <stringProp name="Argument.value">web</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isPwa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isPwa</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/9832232323/carts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">Mon, 01 Jan 1990 00:00:00 GMT</stringProp>
                </elementProp>
                <elementProp name="Server" elementType="Header">
                  <stringProp name="Header.name">Server</stringProp>
                  <stringProp name="Header.value">Microsoft-IIS/8.0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-store, must-revalidate, no-cache, max-age=0</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetSmsGupshup" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">ZZAKzs78</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">OPT_IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">channel</stringProp>
                  <stringProp name="Argument.value">WHATSAPP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="phone_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">phone_number</stringProp>
                  <stringProp name="Argument.value">9832232323</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="auth_scheme" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth_scheme</stringProp>
                  <stringProp name="Argument.value">plain</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">userid</stringProp>
                  <stringProp name="Argument.value">2000198555</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/getSmsGupshup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="mode" elementType="Header">
                  <stringProp name="Header.name">mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User Wishlist" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="access_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">access_token</stringProp>
                  <stringProp name="Argument.value">b16f419f-1a4f-484a-bdb1-b37e189d9879</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="platformNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">platformNumber</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isPwa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isPwa</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="wishlistName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">wishlistName</stringProp>
                  <stringProp name="Argument.value">MyWishList</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/9832232323/wishlist</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="adrum" elementType="Header">
                  <stringProp name="Header.name">adrum</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ppapi.tatadigital-loyalty-points" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/capillary-api/loyalty-points</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer 375a990f-28f7-4116-9d17-98e72070bf8a</stringProp>
                </elementProp>
                <elementProp name="store_id" elementType="Header">
                  <stringProp name="Header.name">store_id</stringProp>
                  <stringProp name="Header.value">cliq.marketplace</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="BagCount" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="access_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">access_token</stringProp>
                  <stringProp name="Argument.value">b16f419f-1a4f-484a-bdb1-b37e189d9879</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="cartGuid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cartGuid</stringProp>
                  <stringProp name="Argument.value">42c096bd-cacf-4d32-bdf3-d1e92f8d5dce</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="platformNumber" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">platformNumber</stringProp>
                  <stringProp name="Argument.value">11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">channel</stringProp>
                  <stringProp name="Argument.value">web</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isProductInfoRequired" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isProductInfoRequired</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isMDE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isMDE</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isPwa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isPwa</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/9832232323/bagCount</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">Mon, 01 Jan 1990 00:00:00 GMT</stringProp>
                </elementProp>
                <elementProp name="Server" elementType="Header">
                  <stringProp name="Header.name">Server</stringProp>
                  <stringProp name="Header.value">Microsoft-IIS/8.0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-store, must-revalidate, no-cache, max-age=0</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="User cart" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="access_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">access_token</stringProp>
                  <stringProp name="Argument.value">b16f419f-1a4f-484a-bdb1-b37e189d9879</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">channel</stringProp>
                  <stringProp name="Argument.value">web</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isPwa" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isPwa</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/9832232323/carts</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">Mon, 01 Jan 1990 00:00:00 GMT</stringProp>
                </elementProp>
                <elementProp name="Server" elementType="Header">
                  <stringProp name="Header.name">Server</stringProp>
                  <stringProp name="Header.value">Microsoft-IIS/8.0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-store, must-revalidate, no-cache, max-age=0</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="GetSmsGupshup" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="password" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">password</stringProp>
                  <stringProp name="Argument.value">ZZAKzs78</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="method" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">method</stringProp>
                  <stringProp name="Argument.value">OPT_IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">1.1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="format" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">format</stringProp>
                  <stringProp name="Argument.value">json</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">channel</stringProp>
                  <stringProp name="Argument.value">WHATSAPP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="phone_number" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">phone_number</stringProp>
                  <stringProp name="Argument.value">9832232323</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="auth_scheme" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">auth_scheme</stringProp>
                  <stringProp name="Argument.value">plain</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="userid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">userid</stringProp>
                  <stringProp name="Argument.value">2000198555</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/getSmsGupshup</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="mode" elementType="Header">
                  <stringProp name="Header.name">mode</stringProp>
                  <stringProp name="Header.value">no-cors</stringProp>
                </elementProp>
                <elementProp name="ADRUM" elementType="Header">
                  <stringProp name="Header.name">ADRUM</stringProp>
                  <stringProp name="Header.value">isAjax:true</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ppapi.tatadigital-loyalty-points" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/capillary-api/loyalty-points</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer 375a990f-28f7-4116-9d17-98e72070bf8a</stringProp>
                </elementProp>
                <elementProp name="store_id" elementType="Header">
                  <stringProp name="Header.name">store_id</stringProp>
                  <stringProp name="Header.value">cliq.marketplace</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="bom-col.eum-appdynamics.com/eumcollector/beacons/browser/v1/BO-AAB-BZU/adrum" enabled="false">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;vr&quot;:&quot;23.3.1.4273&quot;,&quot;dt&quot;:&quot;R&quot;,&quot;rg&quot;:&quot;0&quot;,&quot;es&quot;:[{&quot;eg&quot;:&quot;1&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/5/6&quot;,&quot;ts&quot;:1688570859221,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:7175,&quot;DDT&quot;:2,&quot;DPT&quot;:0,&quot;PLT&quot;:7177,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3841},{&quot;eg&quot;:&quot;2&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://7/8/3/9/10&quot;,&quot;ts&quot;:1688570866962,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:252,&quot;DDT&quot;:1,&quot;DPT&quot;:0,&quot;PLT&quot;:253,&quot;ARE&quot;:0},&quot;md&quot;:&quot;PUT&quot;,&quot;xs&quot;:200,&quot;si&quot;:3842},{&quot;eg&quot;:&quot;3&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/11/12&quot;,&quot;ts&quot;:1688570866404,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:911,&quot;DDT&quot;:1,&quot;DPT&quot;:0,&quot;PLT&quot;:912,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3843},{&quot;eg&quot;:&quot;4&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/5/6&quot;,&quot;ts&quot;:1688570867220,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:302,&quot;DDT&quot;:2,&quot;DPT&quot;:0,&quot;PLT&quot;:304,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3844},{&quot;eg&quot;:&quot;5&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/5/13/14?15&quot;,&quot;ts&quot;:1688570867335,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:314,&quot;DDT&quot;:3,&quot;DPT&quot;:0,&quot;PLT&quot;:317,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3845},{&quot;eg&quot;:&quot;6&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/5/13/16&quot;,&quot;ts&quot;:1688570867750,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:215,&quot;DDT&quot;:10,&quot;DPT&quot;:0,&quot;PLT&quot;:225,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3846},{&quot;eg&quot;:&quot;7&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/11/12&quot;,&quot;ts&quot;:1688570867527,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:441,&quot;DDT&quot;:15,&quot;DPT&quot;:0,&quot;PLT&quot;:456,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3847},{&quot;eg&quot;:&quot;8&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/5/13/17&quot;,&quot;ts&quot;:1688570867748,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:224,&quot;DDT&quot;:17,&quot;DPT&quot;:0,&quot;PLT&quot;:241,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3848},{&quot;eg&quot;:&quot;9&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/5/13/14?15&quot;,&quot;ts&quot;:1688570867999,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:151,&quot;DDT&quot;:1,&quot;DPT&quot;:0,&quot;PLT&quot;:152,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3849},{&quot;eg&quot;:&quot;10&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/5/13/18?19&quot;,&quot;ts&quot;:1688570868062,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:138,&quot;DDT&quot;:1,&quot;DPT&quot;:0,&quot;PLT&quot;:139,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3850},{&quot;eg&quot;:&quot;11&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/5/13/17&quot;,&quot;ts&quot;:1688570868185,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:145,&quot;DDT&quot;:1,&quot;DPT&quot;:0,&quot;PLT&quot;:146,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3851},{&quot;eg&quot;:&quot;12&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/5/13/16&quot;,&quot;ts&quot;:1688570868190,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:140,&quot;DDT&quot;:2,&quot;DPT&quot;:0,&quot;PLT&quot;:142,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3852},{&quot;eg&quot;:&quot;13&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/5/13/20?21&quot;,&quot;ts&quot;:1688570868240,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:180,&quot;DDT&quot;:5,&quot;DPT&quot;:0,&quot;PLT&quot;:185,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3853},{&quot;eg&quot;:&quot;14&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/5/13/22?23&quot;,&quot;ts&quot;:1688570868229,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:267,&quot;DDT&quot;:2,&quot;DPT&quot;:0,&quot;PLT&quot;:269,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3854},{&quot;eg&quot;:&quot;15&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/24?25&quot;,&quot;ts&quot;:1688570868252,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:248,&quot;DDT&quot;:3,&quot;DPT&quot;:0,&quot;PLT&quot;:251,&quot;ARE&quot;:0},&quot;md&quot;:&quot;GET&quot;,&quot;xs&quot;:200,&quot;si&quot;:3855},{&quot;eg&quot;:&quot;16&quot;,&quot;et&quot;:2,&quot;eu&quot;:&quot;0://1/2/3/4/5/13/18?19&quot;,&quot;ts&quot;:1688570868358,&quot;mg&quot;:&quot;0&quot;,&quot;au&quot;:&quot;0://1/&quot;,&quot;at&quot;:0,&quot;pp&quot;:3,&quot;mx&quot;:{&quot;PLC&quot;:1,&quot;FBT&quot;:144,&quot;DDT&quot;:7,&quot;DPT&quot;:0,&quot;PLT&quot;:151,&quot;ARE&quot;:0},&quot;md&quot;:&quot;POST&quot;,&quot;xs&quot;:200,&quot;si&quot;:3856}],&quot;ai&quot;:&quot;cc693ceb_3846_4d2f_1802_e8ec66bd93bf&quot;,&quot;gs&quot;:[&quot;f26654a2_52a4_2a9b_d931_ab07cd6481fc&quot;,&quot;37827a49_a1a0_1a0e_f408_841f643140e6&quot;,&quot;a87e83d0_427a_a01b_9c48_7cd7a80ecfcf&quot;,&quot;2269a01b_f25a_1e9b_9573_af0650617487&quot;,&quot;4bd57aa8_0e6b_0071_17e0_ebb7c38d92ea&quot;,&quot;b716b0b6_e61c_07de_ce89_62da2641aab0&quot;,&quot;478bf597_47d9_8d18_11e2_14cb8744413a&quot;,&quot;7ba29602_a6bd_da82_3334_3a17af6d744d&quot;,&quot;729b1bb5_07cd_2c68_60dd_37a1650523f9&quot;,&quot;08e435da_c282_3bfe_c0eb_85b0bf386ae1&quot;,&quot;b6a6d822_6b3d_3e3e_a3b6_c21682d966bb&quot;,&quot;2bf74cb2_aa42_846f_618a_970c109f5e7a&quot;,&quot;5b8483fc_4cfd_d5ea_8aed_59e308ffe0fc&quot;,&quot;294bb826_6505_43cc_d879_2e98b2cb7ca9&quot;,&quot;923e9402_176c_f79e_378a_52998bbe7973&quot;,&quot;a6973850_31c7_6200_54f2_8de0cf9c8751&quot;,&quot;5a716e21_fb41_5bba_37df_d3cc51cacbd6&quot;],&quot;up&quot;:[&quot;https&quot;,&quot;preprod2.tataunistore.com&quot;,&quot;marketplacewebservices&quot;,&quot;v2&quot;,&quot;mpl&quot;,&quot;users&quot;,&quot;register-td-user&quot;,&quot;ppapi.tatadigital.com&quot;,&quot;api&quot;,&quot;gr&quot;,&quot;updateprofile&quot;,&quot;oauth&quot;,&quot;token&quot;,&quot;9832232323&quot;,&quot;customerLogin&quot;,&quot;access_token=b16f419f-1a4f-484a-bdb1-b37e189d9879&amp;platformNumber=11&quot;,&quot;getNotifyMe&quot;,&quot;getHomescreenWidget&quot;,&quot;wishlist&quot;,&quot;platformNumber=11&amp;access_token=b16f419f-1a4f-484a-bdb1-b37e189d9879&amp;isPwa=true&amp;wishlistName=MyWishList&quot;,&quot;carts&quot;,&quot;access_token=b16f419f-1a4f-484a-bdb1-b37e189d9879&amp;isPwa=true&amp;channel=web&quot;,&quot;CreateWishlist&quot;,&quot;channel=web&amp;access_token=b16f419f-1a4f-484a-bdb1-b37e189d9879&amp;isPwa=true&quot;,&quot;getSmsGupshup&quot;,&quot;method=OPT_IN&amp;format=json&amp;userid=2000198555&amp;password=ZZAKzs78&amp;phone_number=9832232323&amp;v=1.1&amp;auth_scheme=plain&amp;channel=WHATSAPP&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_10}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">eumcollector/beacons/browser/v1/BO-AAB-BZU/adrum</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-type" elementType="Header">
                  <stringProp name="Header.name">Content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Ppapi.tatadigital-analytics-engine" enabled="true">
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;secure&quot;: &quot;true&quot;, &quot;ePayload&quot;: &quot;eyJpc1JlZGlyZWN0ZWRGcm9tVENQIjpmYWxzZSwidXJsIjoiaHR0cHM6Ly9wcmVwcm9kMi50YXRhdW5pc3RvcmUuY29tL215LWFjY291bnQiLCJldmVudERhdGEiOlt7InRpbWVzdGFtcCI6MTY4ODU3MDg3MzkxMiwiZGF0YSI6IntcImV2ZW50XCI6XCJwYWdlTG9hZFwiLFwicGF5bG9hZFwiOntcInVybFwiOlwiaHR0cHM6Ly9wcmVwcm9kMi50YXRhdW5pc3RvcmUuY29tL215LWFjY291bnRcIn19In1dLCJjdXN0b21lckhhc2giOiJjNWJkNTQwOWI2YjVhOGUzOTUyNTBkNzhhMDg5MTEzZiIsImVjaWQiOiJVbmtub3duIiwiY2xpZW50SWQiOiJUQVRBQ0xJUS1XRUItQVBQIiwic2Vzc2lvbklkIjoiZjk2MWQzOGEtNmY0MS00OTkxLThiYWMtMGYyZjI1NmJhZjMzLmI5MDIwOWZlLWIwN2MtNDg4Zi1hNTg2LTljYzAwZDcxMGVjNyIsImJyYW5kIjoiVEFUQUNMSVEiLCJ0aW1lc3RhbXAiOjE2ODg1NzA4NzM5MTIsImRldmljZSI6Ik1vemlsbGEvNS4wIChYMTE7IExpbnV4IHg4Nl82NCkgQXBwbGVXZWJLaXQvNTM3LjM2IChLSFRNTCwgbGlrZSBHZWNrbykgQ2hyb21lLzEwNy4wLjAuMCBTYWZhcmkvNTM3LjM2IiwiamFydmlzSWQiOiJkOGY0ZjE5Mi0yMmVmLTRmZjctYTQ0MS1kZWI3Nzg2ZDVmM2YifQ==&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">analytics-engine/events/v1</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="customer-hash" elementType="Header">
                  <stringProp name="Header.name">customer-hash</stringProp>
                  <stringProp name="Header.value">c5bd5409b6b5a8e395250d78a089113f</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="tdl-sso-version" elementType="Header">
                  <stringProp name="Header.name">tdl-sso-version</stringProp>
                  <stringProp name="Header.value">4.0.5</stringProp>
                </elementProp>
                <elementProp name="session" elementType="Header">
                  <stringProp name="Header.name">session</stringProp>
                  <stringProp name="Header.value">false</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Orderhistory" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="channel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">channel</stringProp>
                  <stringProp name="Argument.value">web</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="pageSize" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pageSize</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isMDE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isMDE</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="currentPage" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currentPage</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isOFDenable" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isOFDenable</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/9832232323/orderhistorylist_V2</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">Mon, 01 Jan 1990 00:00:00 GMT</stringProp>
                </elementProp>
                <elementProp name="Server" elementType="Header">
                  <stringProp name="Header.name">Server</stringProp>
                  <stringProp name="Header.value">Microsoft-IIS/8.0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer b16f419f-1a4f-484a-bdb1-b37e189d9879</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-store, must-revalidate, no-cache, max-age=0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="Useraddress" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments">
                <elementProp name="access_token" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">access_token</stringProp>
                  <stringProp name="Argument.value">b16f419f-1a4f-484a-bdb1-b37e189d9879</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="channel" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">channel</stringProp>
                  <stringProp name="Argument.value">web</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="isMDE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">isMDE</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
                <elementProp name="emailId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">emailId</stringProp>
                  <stringProp name="Argument.value">9832232323</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                  <boolProp name="HTTPArgument.use_equals">true</boolProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">marketplacewebservices/v2/mpl/users/9832232323/addresses</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Pragma" elementType="Header">
                  <stringProp name="Header.name">Pragma</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Expires" elementType="Header">
                  <stringProp name="Header.name">Expires</stringProp>
                  <stringProp name="Header.value">Mon, 01 Jan 1990 00:00:00 GMT</stringProp>
                </elementProp>
                <elementProp name="Server" elementType="Header">
                  <stringProp name="Header.name">Server</stringProp>
                  <stringProp name="Header.value">Microsoft-IIS/8.0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json; charset=utf-8</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-store, must-revalidate, no-cache, max-age=0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="ppapi.tatadigital-loyalty-points" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments" guiclass="HTTPArgumentsPanel" testclass="Arguments" enabled="true">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <stringProp name="HTTPSampler.port"></stringProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.contentEncoding"></stringProp>
            <stringProp name="HTTPSampler.path">api/v1/capillary-api/loyalty-points</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.auto_redirects">false</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <boolProp name="HTTPSampler.DO_MULTIPART_POST">false</boolProp>
            <stringProp name="HTTPSampler.embedded_url_re"></stringProp>
            <stringProp name="HTTPSampler.connect_timeout"></stringProp>
            <stringProp name="HTTPSampler.response_timeout"></stringProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="client_id" elementType="Header">
                  <stringProp name="Header.name">client_id</stringProp>
                  <stringProp name="Header.value">TATACLIQ-WEB-APP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">Bearer 375a990f-28f7-4116-9d17-98e72070bf8a</stringProp>
                </elementProp>
                <elementProp name="store_id" elementType="Header">
                  <stringProp name="Header.name">store_id</stringProp>
                  <stringProp name="Header.value">cliq.marketplace</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
      <ResultCollector guiclass="ViewResultsFullVisualizer" testclass="ResultCollector" testname="View Results Tree" enabled="true">
        <boolProp name="ResultCollector.error_logging">false</boolProp>
        <objProp>
          <name>saveConfig</name>
          <value class="SampleSaveConfiguration">
            <time>true</time>
            <latency>true</latency>
            <timestamp>true</timestamp>
            <success>true</success>
            <label>true</label>
            <code>true</code>
            <message>true</message>
            <threadName>true</threadName>
            <dataType>true</dataType>
            <encoding>false</encoding>
            <assertions>true</assertions>
            <subresults>true</subresults>
            <responseData>false</responseData>
            <samplerData>false</samplerData>
            <xml>false</xml>
            <fieldNames>true</fieldNames>
            <responseHeaders>false</responseHeaders>
            <requestHeaders>false</requestHeaders>
            <responseDataOnError>false</responseDataOnError>
            <saveAssertionResultsFailureMessage>true</saveAssertionResultsFailureMessage>
            <assertionsResultsToSave>0</assertionsResultsToSave>
            <bytes>true</bytes>
            <sentBytes>true</sentBytes>
            <url>true</url>
            <threadCounts>true</threadCounts>
            <idleTime>true</idleTime>
            <connectTime>true</connectTime>
          </value>
        </objProp>
        <stringProp name="filename"></stringProp>
      </ResultCollector>
      <hashTree/>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
