<?xml version="1.0" encoding="UTF-8"?>
<jmeterTestPlan version="1.2" properties="2.4" jmeter="5.4.2">
  <hashTree>
    <TestPlan guiclass="TestPlanGui" testclass="TestPlan" testname="Makemytrio" enabled="true">
      <stringProp name="TestPlan.comments">This test plan was created by the BlazeMeter converter v.3.1.23. Please contact support@blazemeter.com for further support.</stringProp>
      <boolProp name="TestPlan.functional_mode">false</boolProp>
      <boolProp name="TestPlan.serialize_threadgroups">false</boolProp>
      <elementProp name="TestPlan.user_defined_variables" elementType="Arguments">
        <collectionProp name="Arguments.arguments"/>
      </elementProp>
      <stringProp name="TestPlan.user_define_classpath"></stringProp>
    </TestPlan>
    <hashTree>
      <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager">
        <collectionProp name="HeaderManager.headers">
          <elementProp name="User-Agent" elementType="Header">
            <stringProp name="Header.name">User-Agent</stringProp>
            <stringProp name="Header.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</stringProp>
          </elementProp>
          <elementProp name="x-client-device" elementType="Header">
            <stringProp name="Header.name">x-client-device</stringProp>
            <stringProp name="Header.value">Mobile</stringProp>
          </elementProp>
        </collectionProp>
      </HeaderManager>
      <hashTree/>
      <Arguments guiclass="ArgumentsPanel" testclass="Arguments" testname="User Defined Variables" enabled="true">
        <collectionProp name="Arguments.arguments">
          <elementProp name="BASE_URL_1" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_1</stringProp>
            <stringProp name="Argument.value">www.makemytrip.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_2" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_2</stringProp>
            <stringProp name="Argument.value">mapi.makemytrip.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_3" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_3</stringProp>
            <stringProp name="Argument.value">flights-cb.makemytrip.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_4" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_4</stringProp>
            <stringProp name="Argument.value">transporter.makemytrip.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_5" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_5</stringProp>
            <stringProp name="Argument.value">pdt.makemytrip.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_6" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_6</stringProp>
            <stringProp name="Argument.value">metrics.makemytrip.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_7" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_7</stringProp>
            <stringProp name="Argument.value">adorch.makemytrip.com</stringProp>
          </elementProp>
          <elementProp name="BASE_URL_8" elementType="Argument">
            <stringProp name="Argument.name">BASE_URL_8</stringProp>
            <stringProp name="Argument.value">bam-cell.nr-data.net</stringProp>
          </elementProp>
        </collectionProp>
      </Arguments>
      <hashTree/>
      <ConfigTestElement guiclass="HttpDefaultsGui" testclass="ConfigTestElement" testname="HTTP Request Defaults" enabled="true">
        <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
          <collectionProp name="Arguments.arguments"/>
        </elementProp>
        <boolProp name="HTTPSampler.concurrentDwn">true</boolProp>
        <boolProp name="HTTPSampler.image_parser">true</boolProp>
        <intProp name="HTTPSampler.concurrentPool">6</intProp>
      </ConfigTestElement>
      <hashTree/>
      <DNSCacheManager guiclass="DNSCachePanel" testclass="DNSCacheManager" testname="DNS Cache Manager" enabled="true">
        <collectionProp name="DNSCacheManager.servers"/>
        <boolProp name="DNSCacheManager.clearEachIteration">true</boolProp>
      </DNSCacheManager>
      <hashTree/>
      <AuthManager guiclass="AuthPanel" testclass="AuthManager" testname="HTTP Authorization Manager">
        <collectionProp name="AuthManager.auth_list"/>
      </AuthManager>
      <hashTree/>
      <CookieManager guiclass="CookiePanel" testclass="CookieManager" testname="HTTP Cookie Manager" enabled="true">
        <collectionProp name="CookieManager.cookies"/>
        <boolProp name="CookieManager.clearEachIteration">true</boolProp>
      </CookieManager>
      <hashTree/>
      <CacheManager guiclass="CacheManagerGui" testclass="CacheManager" testname="HTTP Cache Manager">
        <boolProp name="clearEachIteration">true</boolProp>
        <boolProp name="useExpires">false</boolProp>
      </CacheManager>
      <hashTree/>
      <ThreadGroup guiclass="ThreadGroupGui" testclass="ThreadGroup" testname="Thread Group" enabled="true">
        <stringProp name="ThreadGroup.on_sample_error">continue</stringProp>
        <elementProp name="ThreadGroup.main_controller" elementType="LoopController">
          <boolProp name="LoopController.continue_forever">false</boolProp>
          <stringProp name="LoopController.loops">1</stringProp>
        </elementProp>
        <intProp name="ThreadGroup.num_threads">1</intProp>
        <intProp name="ThreadGroup.ramp_time">1</intProp>
        <boolProp name="ThreadGroup.scheduler">false</boolProp>
        <longProp name="ThreadGroup.duration">0</longProp>
        <longProp name="ThreadGroup.delay">0</longProp>
      </ThreadGroup>
      <hashTree>
        <TransactionController guiclass="TransactionControllerGui" testname="Test" enabled="true">
          <boolProp name="TransactionController.includeTimers">false</boolProp>
        </TransactionController>
        <hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.makemytrip.com/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path"></stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">none</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>0.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">0</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 0 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://mapi.makemytrip.com/mobile-core-api-web/api/home/config/v1?brand=mmt&amp;profile=b2c&amp;device=dt&amp;version=undefined&amp;region=in&amp;language=eng&amp;currency=inr" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;brand&quot;:&quot;MMT&quot;,&quot;profileType&quot;:&quot;B2C&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_2}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">mobile-core-api-web/api/home/config/v1?brand=mmt&amp;profile=b2c&amp;device=dt&amp;version=undefined&amp;region=in&amp;language=eng&amp;currency=inr</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">h4nhc9jcgpAGIjp</stringProp>
                </elementProp>
                <elementProp name="usr-mcid" elementType="Header">
                  <stringProp name="Header.name">usr-mcid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="vid" elementType="Header">
                  <stringProp name="Header.name">vid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="os" elementType="Header">
                  <stringProp name="Header.name">os</stringProp>
                  <stringProp name="Header.value">desktop</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="Header">
                  <stringProp name="Header.name">tid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="deviceid" elementType="Header">
                  <stringProp name="Header.name">deviceid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="Header">
                  <stringProp name="Header.name">currency</stringProp>
                  <stringProp name="Header.value">inr</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="visitor-id" elementType="Header">
                  <stringProp name="Header.name">visitor-id</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[2]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/flights-search/autosuggest?limit=10&amp;query=&amp;region=in&amp;language=eng&amp;currency=inr" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/flights-search/autosuggest</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">app-ver,currency,device-id,language,mcid,mmt-auth,os,pfm,region,src</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[3]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/flights-search/autosuggest?limit=10&amp;query=&amp;region=in&amp;language=eng&amp;currency=inr" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/flights-search/autosuggest</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="Header">
                  <stringProp name="Header.name">currency</stringProp>
                  <stringProp name="Header.value">inr</stringProp>
                </elementProp>
                <elementProp name="mcid" elementType="Header">
                  <stringProp name="Header.name">mcid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="app-ver" elementType="Header">
                  <stringProp name="Header.name">app-ver</stringProp>
                  <stringProp name="Header.value">1.0.0</stringProp>
                </elementProp>
                <elementProp name="src" elementType="Header">
                  <stringProp name="Header.name">src</stringProp>
                  <stringProp name="Header.value">src</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="pfm" elementType="Header">
                  <stringProp name="Header.name">pfm</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="mmt-auth" elementType="Header">
                  <stringProp name="Header.name">mmt-auth</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="device-id" elementType="Header">
                  <stringProp name="Header.name">device-id</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="os" elementType="Header">
                  <stringProp name="Header.name">os</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[4]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/flights-search/autosuggest?limit=15&amp;matchCity=true&amp;query=delhi&amp;region=in&amp;language=eng&amp;currency=inr" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="matchCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">matchCity</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">delhi</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/flights-search/autosuggest</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">app-ver,currency,device-id,language,mcid,mmt-auth,os,pfm,region,src</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[5]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/flights-search/autosuggest?limit=15&amp;matchCity=true&amp;query=delhi&amp;region=in&amp;language=eng&amp;currency=inr" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="matchCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">matchCity</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">delhi</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/flights-search/autosuggest</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="src" elementType="Header">
                  <stringProp name="Header.name">src</stringProp>
                  <stringProp name="Header.value">src</stringProp>
                </elementProp>
                <elementProp name="mcid" elementType="Header">
                  <stringProp name="Header.name">mcid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="app-ver" elementType="Header">
                  <stringProp name="Header.name">app-ver</stringProp>
                  <stringProp name="Header.value">1.0.0</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="Header">
                  <stringProp name="Header.name">currency</stringProp>
                  <stringProp name="Header.value">inr</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="pfm" elementType="Header">
                  <stringProp name="Header.name">pfm</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="mmt-auth" elementType="Header">
                  <stringProp name="Header.name">mmt-auth</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="device-id" elementType="Header">
                  <stringProp name="Header.name">device-id</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="os" elementType="Header">
                  <stringProp name="Header.name">os</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[6]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://transporter.makemytrip.com/flights/event-log" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">flights/event-log</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">app-ver,content-type,currency,device-id,deviceid,language,log-source,mcid,mmt-auth,os,pfm,region,request-data-encoding,src,sub-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[7]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://transporter.makemytrip.com/flights/event-log" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:[{&quot;device&quot;:{&quot;browser&quot;:&quot;Chrome&quot;,&quot;browser_version&quot;:&quot;107.0.0.0&quot;,&quot;device_id&quot;:&quot;8270b70d-2cf2-4443-8aeb-40c433c74257&quot;,&quot;device_resolution&quot;:&quot;1360*768&quot;,&quot;os_version&quot;:&quot;Desktop&quot;,&quot;traffic_country&quot;:&quot;IN&quot;,&quot;traffic_currency&quot;:&quot;inr&quot;,&quot;traffic_language&quot;:&quot;eng&quot;,&quot;traffic_source&quot;:&quot;MMT&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36&quot;,&quot;network_type&quot;:&quot;4g&quot;,&quot;flavour&quot;:&quot;Desktop&quot;},&quot;context&quot;:{&quot;server_timestamp&quot;:1688464971727,&quot;template_id&quot;:&quot;38927&quot;,&quot;session_id&quot;:&quot;8270b70d-2cf2-4443-8aeb-40c433c74257&quot;,&quot;activity_desc&quot;:&quot;autosuggest_from_city&quot;,&quot;funnel_step&quot;:&quot;landing&quot;,&quot;page_language&quot;:&quot;eng&quot;,&quot;domain_currency&quot;:&quot;inr&quot;,&quot;domain_country&quot;:&quot;91&quot;,&quot;domain_country_name&quot;:&quot;in&quot;,&quot;page_name&quot;:&quot;landing:brand:homepage:IN-MHP&quot;,&quot;lob_code&quot;:&quot;common&quot;,&quot;activity_name&quot;:null,&quot;topic_name&quot;:&quot;client_common_data_logging_desktop_pwa&quot;,&quot;client_timestamp&quot;:1688464971727,&quot;domain_language&quot;:&quot;eng&quot;,&quot;session_visit_number&quot;:1,&quot;company_id&quot;:&quot;MMT&quot;,&quot;lob_name&quot;:&quot;common&quot;,&quot;environment&quot;:&quot;prod&quot;,&quot;domain_sbu&quot;:&quot;India&quot;},&quot;user&quot;:{&quot;is_logged_in&quot;:false},&quot;event_details&quot;:{&quot;log_time&quot;:{}},&quot;event&quot;:{&quot;action_name&quot;:&quot;autosuggest_from_city&quot;,&quot;auto_suggest&quot;:{&quot;search_query&quot;:&quot;delhi&quot;,&quot;selected_city&quot;:0,&quot;sub_index&quot;:-1,&quot;auto_suggest_list&quot;:[{&quot;iata&quot;:&quot;DEL&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;New Delhi&quot;,&quot;airportName&quot;:&quot;Indira Gandhi International Airport&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;,&quot;lang&quot;:&quot;eng&quot;},{&quot;iata&quot;:&quot;JAI&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Jaipur&quot;,&quot;airportName&quot;:&quot;Jaipur Airport&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;},{&quot;iata&quot;:&quot;IXC&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Chandigarh&quot;,&quot;airportName&quot;:&quot;Chandigarh Airport&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;},{&quot;iata&quot;:&quot;DED&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Dehradun&quot;,&quot;airportName&quot;:&quot;Jolly Grant Airport&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;},{&quot;iata&quot;:&quot;GWL&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Gwalior&quot;,&quot;airportName&quot;:&quot;Gwalior Airport&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;},{&quot;iata&quot;:&quot;PGH&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Pantnagar&quot;,&quot;airportName&quot;:&quot;Pantnagar Airport&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;},{&quot;iata&quot;:&quot;BUP&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Bathinda&quot;,&quot;airportName&quot;:&quot;Bathinda Airport&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;},{&quot;iata&quot;:&quot;AGR&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Agra&quot;,&quot;airportName&quot;:&quot;Agra Airport&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;},{&quot;iata&quot;:&quot;BEK&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Bareilly&quot;,&quot;airportName&quot;:&quot;Bareilly Airport&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;},{&quot;iata&quot;:&quot;LUH&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Ludhiana&quot;,&quot;airportName&quot;:&quot;Sahnewal Airport&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;},{&quot;iata&quot;:&quot;BJX&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Leon/Guanajuato&quot;,&quot;airportName&quot;:&quot;Del Bajio&quot;,&quot;country&quot;:&quot;Mexico&quot;,&quot;countryCode&quot;:&quot;MX&quot;},{&quot;iata&quot;:&quot;PMV&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Porlamar&quot;,&quot;airportName&quot;:&quot;DelCaribe Marino&quot;,&quot;country&quot;:&quot;Venezuela&quot;,&quot;countryCode&quot;:&quot;VE&quot;},{&quot;iata&quot;:&quot;DRT&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Del Rio&quot;,&quot;airportName&quot;:&quot;Del Rio Intl&quot;,&quot;country&quot;:&quot;United States&quot;,&quot;countryCode&quot;:&quot;US&quot;},{&quot;iata&quot;:&quot;YWJ&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Deline&quot;,&quot;airportName&quot;:&quot;Deline-NT&quot;,&quot;country&quot;:&quot;Canada&quot;,&quot;countryCode&quot;:&quot;CA&quot;},{&quot;iata&quot;:&quot;ESC&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Escanaba&quot;,&quot;airportName&quot;:&quot;Delta County Arpt-MI&quot;,&quot;country&quot;:&quot;United States&quot;,&quot;countryCode&quot;:&quot;US&quot;}]}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">flights/event-log</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="src" elementType="Header">
                  <stringProp name="Header.name">src</stringProp>
                  <stringProp name="Header.value">src</stringProp>
                </elementProp>
                <elementProp name="mcid" elementType="Header">
                  <stringProp name="Header.name">mcid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="app-ver" elementType="Header">
                  <stringProp name="Header.name">app-ver</stringProp>
                  <stringProp name="Header.value">1.0.0</stringProp>
                </elementProp>
                <elementProp name="pfm" elementType="Header">
                  <stringProp name="Header.name">pfm</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="Sub-Type" elementType="Header">
                  <stringProp name="Header.name">Sub-Type</stringProp>
                  <stringProp name="Header.value">common</stringProp>
                </elementProp>
                <elementProp name="device-id" elementType="Header">
                  <stringProp name="Header.name">device-id</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="os" elementType="Header">
                  <stringProp name="Header.name">os</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="deviceid" elementType="Header">
                  <stringProp name="Header.name">deviceid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="Header">
                  <stringProp name="Header.name">currency</stringProp>
                  <stringProp name="Header.value">inr</stringProp>
                </elementProp>
                <elementProp name="Request-Data-Encoding" elementType="Header">
                  <stringProp name="Header.name">Request-Data-Encoding</stringProp>
                  <stringProp name="Header.value">json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="mmt-auth" elementType="Header">
                  <stringProp name="Header.name">mmt-auth</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="Log-Source" elementType="Header">
                  <stringProp name="Header.name">Log-Source</stringProp>
                  <stringProp name="Header.value">mmt_client</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[8]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/flights-search/autosuggest?limit=15&amp;matchCity=true&amp;query=k&amp;region=in&amp;language=eng&amp;currency=inr" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="matchCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">matchCity</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">k</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/flights-search/autosuggest</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">app-ver,currency,device-id,language,mcid,mmt-auth,os,pfm,region,src</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[9]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/flights-search/autosuggest?limit=15&amp;matchCity=true&amp;query=k&amp;region=in&amp;language=eng&amp;currency=inr" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="matchCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">matchCity</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">k</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/flights-search/autosuggest</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="src" elementType="Header">
                  <stringProp name="Header.name">src</stringProp>
                  <stringProp name="Header.value">src</stringProp>
                </elementProp>
                <elementProp name="mcid" elementType="Header">
                  <stringProp name="Header.name">mcid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="app-ver" elementType="Header">
                  <stringProp name="Header.name">app-ver</stringProp>
                  <stringProp name="Header.value">1.0.0</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="Header">
                  <stringProp name="Header.name">currency</stringProp>
                  <stringProp name="Header.value">inr</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="pfm" elementType="Header">
                  <stringProp name="Header.name">pfm</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="mmt-auth" elementType="Header">
                  <stringProp name="Header.name">mmt-auth</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="device-id" elementType="Header">
                  <stringProp name="Header.name">device-id</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="os" elementType="Header">
                  <stringProp name="Header.name">os</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[10]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/flights-search/autosuggest?limit=15&amp;matchCity=true&amp;query=kol&amp;region=in&amp;language=eng&amp;currency=inr" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="matchCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">matchCity</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">kol</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/flights-search/autosuggest</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">app-ver,currency,device-id,language,mcid,mmt-auth,os,pfm,region,src</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[11]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/flights-search/autosuggest?limit=15&amp;matchCity=true&amp;query=kol&amp;region=in&amp;language=eng&amp;currency=inr" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="matchCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">matchCity</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">kol</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/flights-search/autosuggest</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="src" elementType="Header">
                  <stringProp name="Header.name">src</stringProp>
                  <stringProp name="Header.value">src</stringProp>
                </elementProp>
                <elementProp name="mcid" elementType="Header">
                  <stringProp name="Header.name">mcid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="app-ver" elementType="Header">
                  <stringProp name="Header.name">app-ver</stringProp>
                  <stringProp name="Header.value">1.0.0</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="Header">
                  <stringProp name="Header.name">currency</stringProp>
                  <stringProp name="Header.value">inr</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="pfm" elementType="Header">
                  <stringProp name="Header.name">pfm</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="mmt-auth" elementType="Header">
                  <stringProp name="Header.name">mmt-auth</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="device-id" elementType="Header">
                  <stringProp name="Header.name">device-id</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="os" elementType="Header">
                  <stringProp name="Header.name">os</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[12]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/flights-search/autosuggest?limit=15&amp;matchCity=true&amp;query=kolka&amp;region=in&amp;language=eng&amp;currency=inr" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="matchCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">matchCity</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">kolka</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/flights-search/autosuggest</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">app-ver,currency,device-id,language,mcid,mmt-auth,os,pfm,region,src</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[13]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/flights-search/autosuggest?limit=15&amp;matchCity=true&amp;query=kolka&amp;region=in&amp;language=eng&amp;currency=inr" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="matchCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">matchCity</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">kolka</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/flights-search/autosuggest</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="src" elementType="Header">
                  <stringProp name="Header.name">src</stringProp>
                  <stringProp name="Header.value">src</stringProp>
                </elementProp>
                <elementProp name="mcid" elementType="Header">
                  <stringProp name="Header.name">mcid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="app-ver" elementType="Header">
                  <stringProp name="Header.name">app-ver</stringProp>
                  <stringProp name="Header.value">1.0.0</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="Header">
                  <stringProp name="Header.name">currency</stringProp>
                  <stringProp name="Header.value">inr</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="pfm" elementType="Header">
                  <stringProp name="Header.name">pfm</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="mmt-auth" elementType="Header">
                  <stringProp name="Header.name">mmt-auth</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="device-id" elementType="Header">
                  <stringProp name="Header.name">device-id</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="os" elementType="Header">
                  <stringProp name="Header.name">os</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[14]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://transporter.makemytrip.com/flights/event-log" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">flights/event-log</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">app-ver,content-type,currency,device-id,deviceid,language,log-source,mcid,mmt-auth,os,pfm,region,request-data-encoding,src,sub-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[15]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/fareCalendar?crId=90f6bf5e-4956-4fa6-9753-925e20883299&amp;it=DEL-CCU-20230705&amp;region=in&amp;language=eng&amp;currency=inr" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="crId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crId</stringProp>
                  <stringProp name="Argument.value">90f6bf5e-4956-4fa6-9753-925e20883299</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="it" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">it</stringProp>
                  <stringProp name="Argument.value">DEL-CCU-20230705</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/fareCalendar</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">app-ver,authorization,currency,device-id,deviceid,language,lob,mcid,mmt-auth,os,pfm,profile-type,region,source,src,tid,usr-mcid,vid,visitor-id</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[16]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/fareCalendar?crId=90f6bf5e-4956-4fa6-9753-925e20883299&amp;it=DEL-CCU-20230705&amp;region=in&amp;language=eng&amp;currency=inr" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="crId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crId</stringProp>
                  <stringProp name="Argument.value">90f6bf5e-4956-4fa6-9753-925e20883299</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="it" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">it</stringProp>
                  <stringProp name="Argument.value">DEL-CCU-20230705</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/fareCalendar</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="src" elementType="Header">
                  <stringProp name="Header.name">src</stringProp>
                  <stringProp name="Header.value">src</stringProp>
                </elementProp>
                <elementProp name="mcid" elementType="Header">
                  <stringProp name="Header.name">mcid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="app-ver" elementType="Header">
                  <stringProp name="Header.name">app-ver</stringProp>
                  <stringProp name="Header.value">1.0.0</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="lob" elementType="Header">
                  <stringProp name="Header.name">lob</stringProp>
                  <stringProp name="Header.value">B2C</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">h4nhc9jcgpAGIjp</stringProp>
                </elementProp>
                <elementProp name="pfm" elementType="Header">
                  <stringProp name="Header.name">pfm</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="usr-mcid" elementType="Header">
                  <stringProp name="Header.name">usr-mcid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="device-id" elementType="Header">
                  <stringProp name="Header.name">device-id</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="vid" elementType="Header">
                  <stringProp name="Header.name">vid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="os" elementType="Header">
                  <stringProp name="Header.name">os</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="tid" elementType="Header">
                  <stringProp name="Header.name">tid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="deviceid" elementType="Header">
                  <stringProp name="Header.name">deviceid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="Header">
                  <stringProp name="Header.name">currency</stringProp>
                  <stringProp name="Header.value">inr</stringProp>
                </elementProp>
                <elementProp name="profile-type" elementType="Header">
                  <stringProp name="Header.name">profile-type</stringProp>
                  <stringProp name="Header.value">PERSONAL</stringProp>
                </elementProp>
                <elementProp name="source" elementType="Header">
                  <stringProp name="Header.name">source</stringProp>
                  <stringProp name="Header.value">MMT</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="visitor-id" elementType="Header">
                  <stringProp name="Header.name">visitor-id</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="mmt-auth" elementType="Header">
                  <stringProp name="Header.name">mmt-auth</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[17]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://transporter.makemytrip.com/flights/event-log" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:[{&quot;device&quot;:{&quot;browser&quot;:&quot;Chrome&quot;,&quot;browser_version&quot;:&quot;107.0.0.0&quot;,&quot;device_id&quot;:&quot;8270b70d-2cf2-4443-8aeb-40c433c74257&quot;,&quot;device_resolution&quot;:&quot;1360*768&quot;,&quot;os_version&quot;:&quot;Desktop&quot;,&quot;traffic_country&quot;:&quot;IN&quot;,&quot;traffic_currency&quot;:&quot;inr&quot;,&quot;traffic_language&quot;:&quot;eng&quot;,&quot;traffic_source&quot;:&quot;MMT&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36&quot;,&quot;network_type&quot;:&quot;4g&quot;,&quot;flavour&quot;:&quot;Desktop&quot;},&quot;context&quot;:{&quot;server_timestamp&quot;:1688464977802,&quot;template_id&quot;:&quot;38927&quot;,&quot;session_id&quot;:&quot;8270b70d-2cf2-4443-8aeb-40c433c74257&quot;,&quot;activity_desc&quot;:&quot;autosuggest_to_city&quot;,&quot;funnel_step&quot;:&quot;landing&quot;,&quot;page_language&quot;:&quot;eng&quot;,&quot;domain_currency&quot;:&quot;inr&quot;,&quot;domain_country&quot;:&quot;91&quot;,&quot;domain_country_name&quot;:&quot;in&quot;,&quot;page_name&quot;:&quot;landing:brand:homepage:IN-MHP&quot;,&quot;lob_code&quot;:&quot;common&quot;,&quot;activity_name&quot;:null,&quot;topic_name&quot;:&quot;client_common_data_logging_desktop_pwa&quot;,&quot;client_timestamp&quot;:1688464977802,&quot;domain_language&quot;:&quot;eng&quot;,&quot;session_visit_number&quot;:1,&quot;company_id&quot;:&quot;MMT&quot;,&quot;lob_name&quot;:&quot;common&quot;,&quot;environment&quot;:&quot;prod&quot;,&quot;domain_sbu&quot;:&quot;India&quot;},&quot;user&quot;:{&quot;is_logged_in&quot;:false},&quot;event_details&quot;:{&quot;log_time&quot;:{}},&quot;event&quot;:{&quot;action_name&quot;:&quot;autosuggest_to_city&quot;,&quot;auto_suggest&quot;:{&quot;search_query&quot;:&quot;kolka&quot;,&quot;selected_city&quot;:0,&quot;sub_index&quot;:-1,&quot;auto_suggest_list&quot;:[{&quot;iata&quot;:&quot;CCU&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Kolkata&quot;,&quot;airportName&quot;:&quot;Netaji Subhash Chandra Bose International Airport&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;,&quot;lang&quot;:&quot;eng&quot;},{&quot;iata&quot;:&quot;KDA&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Kolda&quot;,&quot;airportName&quot;:&quot;Kolda North Airport&quot;,&quot;country&quot;:&quot;Senegal&quot;,&quot;countryCode&quot;:&quot;SN&quot;},{&quot;iata&quot;:&quot;KLH&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Kolhapur&quot;,&quot;airportName&quot;:&quot;Kolhapur Airport&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;},{&quot;iata&quot;:&quot;IDR&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Indore&quot;,&quot;airportName&quot;:&quot;Devi Ahilyabai Holkar International Airport&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;},{&quot;iata&quot;:&quot;&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Kollam&quot;,&quot;cityCode&quot;:&quot;CTXLM&quot;,&quot;nearbyAirportCodes&quot;:[&quot;TRV&quot;],&quot;extraData&quot;:{&quot;tag&quot;:{&quot;title&quot;:&quot;&lt;span class=&apos;fontSize12&apos;&gt;1 Airport(s) near Kollam&lt;/span&gt; | Now book &lt;span class=&apos;blackFont&apos;&gt;Flight + Cab&lt;/span&gt;&quot;,&quot;icon&quot;:&quot;&quot;,&quot;icons&quot;:[&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/flight-cab-group.png&quot;]}},&quot;groupData&quot;:[{&quot;iata&quot;:&quot;TRV&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Thiruvananthapuram&quot;,&quot;airportName&quot;:&quot;Trivandrum International Airport&quot;,&quot;distanceInfoText&quot;:&quot;56 km from Kollam&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;,&quot;cityCode&quot;:&quot;CTXLM&quot;,&quot;groupData&quot;:true}],&quot;country&quot;:&quot;India&quot;,&quot;isFcFlow&quot;:true,&quot;countryCode&quot;:&quot;IN&quot;},{&quot;iata&quot;:&quot;TRV&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Thiruvananthapuram&quot;,&quot;airportName&quot;:&quot;Trivandrum International Airport&quot;,&quot;distanceInfoText&quot;:&quot;56 km from Kollam&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;,&quot;cityCode&quot;:&quot;CTXLM&quot;,&quot;groupData&quot;:true},{&quot;iata&quot;:&quot;RDP&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Durgapur&quot;,&quot;airportName&quot;:&quot;Kazi Nazrul Islam Airport&quot;,&quot;country&quot;:&quot;India&quot;,&quot;countryCode&quot;:&quot;IN&quot;},{&quot;iata&quot;:&quot;CGN&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Cologne&quot;,&quot;airportName&quot;:&quot;Koln/Bonn&quot;,&quot;country&quot;:&quot;Germany&quot;,&quot;countryCode&quot;:&quot;DE&quot;},{&quot;iata&quot;:&quot;SVX&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Ekaterinburg&quot;,&quot;airportName&quot;:&quot;Ekaterinburg&quot;,&quot;country&quot;:&quot;Russia&quot;,&quot;countryCode&quot;:&quot;RU&quot;},{&quot;iata&quot;:&quot;KOK&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Kokkola/Pietarsaari&quot;,&quot;airportName&quot;:&quot;Kruunupyy&quot;,&quot;country&quot;:&quot;Finland&quot;,&quot;countryCode&quot;:&quot;FI&quot;},{&quot;iata&quot;:&quot;NLI&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Khabarovsk Krai&quot;,&quot;airportName&quot;:&quot;Nikolayevsk-na-Amure Airport&quot;,&quot;country&quot;:&quot;Russia&quot;,&quot;countryCode&quot;:&quot;RU&quot;},{&quot;iata&quot;:&quot;KGK&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;New Koliganek&quot;,&quot;airportName&quot;:&quot;New Koliganek-AK&quot;,&quot;country&quot;:&quot;United States&quot;,&quot;countryCode&quot;:&quot;US&quot;},{&quot;iata&quot;:&quot;ORF&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Norfolk&quot;,&quot;airportName&quot;:&quot;Norfolk-VA&quot;,&quot;country&quot;:&quot;United States&quot;,&quot;countryCode&quot;:&quot;US&quot;},{&quot;iata&quot;:&quot;BEG&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Belgrade&quot;,&quot;airportName&quot;:&quot;Nikola Tesla&quot;,&quot;country&quot;:&quot;Serbia&quot;,&quot;countryCode&quot;:&quot;RS&quot;},{&quot;iata&quot;:&quot;OLX&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Maasai Mara&quot;,&quot;airportName&quot;:&quot;Olkiombo Airport&quot;,&quot;country&quot;:&quot;Kenya&quot;,&quot;countryCode&quot;:&quot;KE&quot;},{&quot;iata&quot;:&quot;OER&quot;,&quot;icon&quot;:&quot;https://imgak.mmtcdn.com/flights/assets/media/dt/common/icons/ic-flight-onward.png&quot;,&quot;cityName&quot;:&quot;Ornskoldsvik&quot;,&quot;airportName&quot;:&quot;Ornskoldsvik&quot;,&quot;country&quot;:&quot;Sweden&quot;,&quot;countryCode&quot;:&quot;SE&quot;}]}}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">flights/event-log</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="src" elementType="Header">
                  <stringProp name="Header.name">src</stringProp>
                  <stringProp name="Header.value">src</stringProp>
                </elementProp>
                <elementProp name="mcid" elementType="Header">
                  <stringProp name="Header.name">mcid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="app-ver" elementType="Header">
                  <stringProp name="Header.name">app-ver</stringProp>
                  <stringProp name="Header.value">1.0.0</stringProp>
                </elementProp>
                <elementProp name="pfm" elementType="Header">
                  <stringProp name="Header.name">pfm</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="Sub-Type" elementType="Header">
                  <stringProp name="Header.name">Sub-Type</stringProp>
                  <stringProp name="Header.value">common</stringProp>
                </elementProp>
                <elementProp name="device-id" elementType="Header">
                  <stringProp name="Header.name">device-id</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="os" elementType="Header">
                  <stringProp name="Header.name">os</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="deviceid" elementType="Header">
                  <stringProp name="Header.name">deviceid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="Header">
                  <stringProp name="Header.name">currency</stringProp>
                  <stringProp name="Header.value">inr</stringProp>
                </elementProp>
                <elementProp name="Request-Data-Encoding" elementType="Header">
                  <stringProp name="Header.name">Request-Data-Encoding</stringProp>
                  <stringProp name="Header.value">json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="mmt-auth" elementType="Header">
                  <stringProp name="Header.name">mmt-auth</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="Log-Source" elementType="Header">
                  <stringProp name="Header.name">Log-Source</stringProp>
                  <stringProp name="Header.value">mmt_client</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[18]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://pdt.makemytrip.com/dts/s/da/n/" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">dts/s/da/n/</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">app-ver,content-type,currency,device-id,deviceid,language,mcid,mmt-auth,os,pfm,region,request-data-encoding,src</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[19]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.makemytrip.com/flight/search?itinerary=DEL-CCU-05/07/2023&amp;tripType=O&amp;paxType=A-1_C-0_I-0&amp;intl=false&amp;cabinClass=E&amp;ccde=IN&amp;lang=eng" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cabinClass" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cabinClass</stringProp>
                  <stringProp name="Argument.value">E</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tripType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tripType</stringProp>
                  <stringProp name="Argument.value">O</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="paxType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">paxType</stringProp>
                  <stringProp name="Argument.value">A-1_C-0_I-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="itinerary" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">itinerary</stringProp>
                  <stringProp name="Argument.value">DEL-CCU-05/07/2023</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="intl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">intl</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccde" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccde</stringProp>
                  <stringProp name="Argument.value">IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">flight/search</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-User" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-User</stringProp>
                  <stringProp name="Header.value">?1</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[20]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>23233.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">11616.5</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 23233 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.makemytrip.com/_sec/verify?provider=interstitial" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;bm-verify&quot;:&quot;AAQAAAAH/////z4kd2FpXz1/mhESF87ZvT0YfbZRbTzINldFQXsz9QcuECaviKBh+lgcrzK28sB6DCZvLvnWTaD9yfJiuIpx4CakoEbftkS2lO2RCiqLO0BMSaN67dqcXH5qc0YP7tY6p8NrFc5spjXE/ey2MYqfQHTUk5fe+NwZMgneSCyGgJNcwZgTLASlrnNawUua9hVoZN6WSLUJcdx7H8J29Ml9rc2suzSZdqdF3f8MbsAICvjMS3E07PtA+uSrvza6SMbIrjJwEc4blaaoMy0siuuZAa7JI7AAOptr7Zaeka5KXVDR1H7IwHrC4Mordj3ceC2ME1oAtALwYj4zQBg4kF2j8mV6ew9965AH3r4D4Ggdq0+jpABJCfPjPk11/T58TnezFxW6u8ryl/K0ql7rYrx0MHtO+jpnMz9iRiOeaK8bW18iB8og9fe/LUf3oeBAVPCr7WX6u/u3PNBw4yZuzQkOs/5nLlXDZBCnpM0DICtYm1Un7+Y=&quot;,&quot;pow&quot;:1948734335}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">_sec/verify?provider=interstitial</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[21]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.makemytrip.com/flight/search?itinerary=DEL-CCU-05/07/2023&amp;tripType=O&amp;paxType=A-1_C-0_I-0&amp;intl=false&amp;cabinClass=E&amp;ccde=IN&amp;lang=eng" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cabinClass" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cabinClass</stringProp>
                  <stringProp name="Argument.value">E</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="tripType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">tripType</stringProp>
                  <stringProp name="Argument.value">O</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="paxType" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">paxType</stringProp>
                  <stringProp name="Argument.value">A-1_C-0_I-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="itinerary" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">itinerary</stringProp>
                  <stringProp name="Argument.value">DEL-CCU-05/07/2023</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="intl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">intl</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lang" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lang</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ccde" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">ccde</stringProp>
                  <stringProp name="Argument.value">IN</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">flight/search</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Upgrade-Insecure-Requests" elementType="Header">
                  <stringProp name="Header.name">Upgrade-Insecure-Requests</stringProp>
                  <stringProp name="Header.value">1</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">text/html,application/xhtml+xml,application/xml;q=0.9,image/avif,image/webp,image/apng,*/*;q=0.8,application/signed-exchange;v=b3;q=0.9</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">navigate</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">document</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[22]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
            <UniformRandomTimer guiclass="UniformRandomTimerGui" testclass="UniformRandomTimer" testname="Uniform Random Timer" enabled="true">
              <doubleProp>
                <name>RandomTimer.range</name>
                <value>324.0</value>
                <savedValue>0.0</savedValue>
              </doubleProp>
              <stringProp name="ConstantTimer.delay">162</stringProp>
              <stringProp name="TestPlan.comments">Recorded time was 324 milliseconds</stringProp>
            </UniformRandomTimer>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/flights-search/autosuggest?query=DEL&amp;limit=15&amp;matchCity=true&amp;region=in&amp;currency=inr&amp;language=eng&amp;cmpId=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="matchCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">matchCity</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">DEL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cmpId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cmpId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/flights-search/autosuggest</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">ab,access-control-allow-credentials,app-ver,auuid,cache-control,cmp-id,currency,device-id,domain,flow,language,mcid,mmt-auth,os,pfm,profile-type,region,source,src,x-user-cc,x-user-ip,x-user-rc</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[23]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/flights-search/autosuggest?query=CCU&amp;limit=15&amp;matchCity=true&amp;region=in&amp;currency=inr&amp;language=eng&amp;cmpId=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="matchCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">matchCity</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">CCU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cmpId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cmpId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/flights-search/autosuggest</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">ab,access-control-allow-credentials,app-ver,auuid,cache-control,cmp-id,currency,device-id,domain,flow,language,mcid,mmt-auth,os,pfm,profile-type,region,source,src,x-user-cc,x-user-ip,x-user-rc</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[24]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/search-stream-dt?apiCallTimestamp=1688464986069&amp;cc=E&amp;cmpId=&amp;crId=c2a213b8-ec94-42c7-9acd-954d70835e6c&amp;creditShellInfo=&amp;cur=INR&amp;currency=inr&amp;dfs=0&amp;forwardFlowRequired=true&amp;it=DEL-CCU-20230705&amp;language=eng&amp;pax=A-1_C-0_I-0&amp;pfm=DESKTOP&amp;region=in&amp;shd=true&amp;sortBy=rhino&amp;src=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cc</stringProp>
                  <stringProp name="Argument.value">E</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cur" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cur</stringProp>
                  <stringProp name="Argument.value">INR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="crId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crId</stringProp>
                  <stringProp name="Argument.value">c2a213b8-ec94-42c7-9acd-954d70835e6c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pax" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pax</stringProp>
                  <stringProp name="Argument.value">A-1_C-0_I-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cmpId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cmpId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="it" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">it</stringProp>
                  <stringProp name="Argument.value">DEL-CCU-20230705</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="creditShellInfo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">creditShellInfo</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="shd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">shd</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dfs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dfs</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="apiCallTimestamp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">apiCallTimestamp</stringProp>
                  <stringProp name="Argument.value">1688464986069</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pfm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pfm</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortBy</stringProp>
                  <stringProp name="Argument.value">rhino</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="forwardFlowRequired" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">forwardFlowRequired</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/search-stream-dt</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">ab,access-control-allow-credentials,app-ver,auuid,cache-control,cmp-id,currency,device-id,domain,flow,language,mcid,mmt-auth,os,pfm,profile-type,region,source,src,x-user-cc,x-user-ip,x-user-rc</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[25]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/flights-search/autosuggest?query=DEL&amp;limit=15&amp;matchCity=true&amp;region=in&amp;currency=inr&amp;language=eng&amp;cmpId=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="matchCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">matchCity</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">DEL</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cmpId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cmpId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/flights-search/autosuggest</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="src" elementType="Header">
                  <stringProp name="Header.name">src</stringProp>
                  <stringProp name="Header.value">mmt</stringProp>
                </elementProp>
                <elementProp name="mcid" elementType="Header">
                  <stringProp name="Header.name">mcid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="app-ver" elementType="Header">
                  <stringProp name="Header.name">app-ver</stringProp>
                  <stringProp name="Header.value">1.0.0</stringProp>
                </elementProp>
                <elementProp name="x-user-ip" elementType="Header">
                  <stringProp name="Header.name">x-user-ip</stringProp>
                  <stringProp name="Header.value">2401:4900:1f36:2f92:1124:4018:d7ca:ee8a</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="pfm" elementType="Header">
                  <stringProp name="Header.name">pfm</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="device-id" elementType="Header">
                  <stringProp name="Header.name">device-id</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="flow" elementType="Header">
                  <stringProp name="Header.name">flow</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="os" elementType="Header">
                  <stringProp name="Header.name">os</stringProp>
                  <stringProp name="Header.value">Linux</stringProp>
                </elementProp>
                <elementProp name="cmp-id" elementType="Header">
                  <stringProp name="Header.name">cmp-id</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="ab" elementType="Header">
                  <stringProp name="Header.name">ab</stringProp>
                  <stringProp name="Header.value">{&quot;INSGHT&quot;:0,&quot;LVS&quot;:0,&quot;STP&quot;:1,&quot;SimpF&quot;:0,&quot;BFFL&quot;:0,&quot;MMTFF&quot;:0,&quot;BSG&quot;:0,&quot;LFT&quot;:0,&quot;MFEP&quot;:0,&quot;DGF&quot;:0,&quot;BCG&quot;:0,&quot;MMTB&quot;:0,&quot;IFFLK&quot;:1,&quot;flightInfoOptionSequenceKey&quot;:&quot;FNO&quot;,&quot;DGT&quot;:3,&quot;IFPLK_DP_MAB&quot;:5,&quot;IFFLKOWRT&quot;:0,&quot;SED&quot;:0,&quot;RTSC&quot;:0,&quot;ZCA&quot;:0,&quot;ZCD&quot;:1,&quot;SEM&quot;:0,&quot;HCP2&quot;:0,&quot;ZCE&quot;:1,&quot;GRPC&quot;:1,&quot;NLA&quot;:0,&quot;FLK&quot;:1,&quot;RTI&quot;:1,&quot;dgi&quot;:0,&quot;IRR&quot;:0,&quot;RTM&quot;:0,&quot;ZCS&quot;:1,&quot;HPR&quot;:0,&quot;FLS&quot;:1,&quot;RTS&quot;:1,&quot;FFBEN&quot;:0,&quot;SFN&quot;:0,&quot;FMB&quot;:1,&quot;QBK&quot;:0,&quot;myPUAE&quot;:false,&quot;ISF&quot;:0,&quot;meff&quot;:1,&quot;DZC&quot;:0,&quot;mbpa&quot;:0,&quot;MMTFAB&quot;:1,&quot;QCO&quot;:0,&quot;mmt.app.flight.default.listing.default.TIF&quot;:0,&quot;TP&quot;:0,&quot;PRB&quot;:0,&quot;PRE&quot;:2,&quot;PRG&quot;:0,&quot;mbrta&quot;:1,&quot;IFFLKMC&quot;:0,&quot;pwa_login_type&quot;:0,&quot;NDAST&quot;:0,&quot;ITT&quot;:1,&quot;PRO&quot;:0,&quot;VOIDIF&quot;:0,&quot;HBF&quot;:0,&quot;FLKT&quot;:0,&quot;PBC&quot;:0,&quot;mstp&quot;:1,&quot;mmt.default.flight.default.default.default.ZC_MMT_PE&quot;:2,&quot;SHR&quot;:0,&quot;CYT&quot;:0,&quot;CID&quot;:1,&quot;bottomsheet_onetap_pwa&quot;:&quot;1&quot;,&quot;mras&quot;:1,&quot;mbrt&quot;:1,&quot;dd_exp_intl_meta&quot;:&quot;mab&quot;,&quot;FFPers&quot;:1,&quot;mypflight_commission&quot;:false,&quot;mctw&quot;:0,&quot;INSBTM&quot;:0,&quot;UMF&quot;:0,&quot;MMTSPLIF&quot;:0,&quot;HCP&quot;:1,&quot;SIM&quot;:0,&quot;PTA&quot;:0,&quot;INSV3&quot;:1,&quot;PTF&quot;:0,&quot;AFI&quot;:0,&quot;mctwb&quot;:1,&quot;IFSort&quot;:0,&quot;STFR&quot;:1,&quot;mrtp&quot;:0,&quot;LLS&quot;:1,&quot;PDF&quot;:1,&quot;MFMD&quot;:1,&quot;BIRT&quot;:0,&quot;IFS&quot;:0,&quot;flightPageLoadTracking&quot;:0,&quot;GSF&quot;:0,&quot;msfn&quot;:1,&quot;QFT&quot;:1,&quot;MOB&quot;:0,&quot;INSTP&quot;:0,&quot;BII&quot;:0,&quot;ADDONM&quot;:0,&quot;FAA&quot;:0,&quot;IFFLKOW&quot;:0,&quot;TMI&quot;:1,&quot;IIND&quot;:0,&quot;FAO&quot;:0,&quot;marc&quot;:0,&quot;FAT&quot;:0,&quot;PET&quot;:0,&quot;OCR&quot;:0,&quot;WCM&quot;:1,&quot;REUSABLE&quot;:0,&quot;PCRDF&quot;:0,&quot;PFA&quot;:1,&quot;OTP&quot;:0,&quot;mnthn&quot;:false,&quot;CLS&quot;:0,&quot;mmt.app.flight.default.review.default.ZCP&quot;:0,&quot;MMT_PERS&quot;:204,&quot;PFI&quot;:1,&quot;ZC_Server_Side_experiment1&quot;:1,&quot;CHMRK&quot;:0,&quot;FSA&quot;:3,&quot;PFL&quot;:0,&quot;PWA&quot;:0,&quot;PFP&quot;:1,&quot;DDDF&quot;:0,&quot;mema&quot;:1,&quot;NSF&quot;:0,&quot;mbfc&quot;:1,&quot;LISTN&quot;:0,&quot;PLK_DP_MAB&quot;:1,&quot;BPCE&quot;:0,&quot;FCN&quot;:false,&quot;CABS&quot;:1,&quot;myPartner_b2b_homepage&quot;:false,&quot;macs&quot;:0,&quot;CABF&quot;:0,&quot;mqc&quot;:0,&quot;mics&quot;:0,&quot;travellerScan&quot;:0,&quot;NTD&quot;:0,&quot;mmt.default.flight.default.default.default.mecr&quot;:1,&quot;wsmn&quot;:0,&quot;SNH&quot;:0,&quot;LPS&quot;:0,&quot;MRT&quot;:0,&quot;ffmove&quot;:0,&quot;ZCDS&quot;:0,&quot;IFMC&quot;:0,&quot;IFFLKRT&quot;:0,&quot;BNPL&quot;:1,&quot;mal&quot;:1,&quot;MICROSOFTFES&quot;:0,&quot;mgsf&quot;:1,&quot;ZC_Client_Side_exp&quot;:false,&quot;NUG&quot;:0,&quot;ALTFLT&quot;:0,&quot;FUS&quot;:1,&quot;CURDT&quot;:0,&quot;COU&quot;:0,&quot;USF&quot;:0,&quot;MCC&quot;:1,&quot;PIF&quot;:1,&quot;CYTN&quot;:0,&quot;ALTFLTCORP&quot;:0,&quot;BAGR&quot;:0,&quot;CPA&quot;:0,&quot;SOR&quot;:0,&quot;msa&quot;:1,&quot;ALF&quot;:0,&quot;MCS&quot;:0,&quot;REUSABLERT&quot;:0,&quot;msf&quot;:1,&quot;DDIF&quot;:0,&quot;AUTOSG&quot;:1,&quot;testAB&quot;:0,&quot;SPA&quot;:1,&quot;CPS&quot;:1,&quot;cnpn&quot;:1,&quot;dd_exp_myp&quot;:&quot;peshkash&quot;,&quot;RNP&quot;:5,&quot;DSF&quot;:0,&quot;AMD&quot;:0,&quot;AME&quot;:0,&quot;IMB&quot;:0,&quot;mestf&quot;:0,&quot;BNTD&quot;:1,&quot;WNTI&quot;:0,&quot;TSC&quot;:0,&quot;trvlr&quot;:true,&quot;CAD&quot;:1,&quot;GI_PLK&quot;:0,&quot;bntdp&quot;:0,&quot;incredibleindiacommon&quot;:&quot;IICN&quot;,&quot;IMS&quot;:0,&quot;mbfsme&quot;:1,&quot;mbit&quot;:0,&quot;mdl&quot;:1,&quot;DTD&quot;:2,&quot;ANC&quot;:0,&quot;IFPLK&quot;:1,&quot;mestm&quot;:0,&quot;HLD&quot;:0,&quot;ANP&quot;:1,&quot;ALTF&quot;:0,&quot;cheaperFlightsDesktopDom&quot;:1,&quot;DTT&quot;:1,&quot;ANU&quot;:0,&quot;MFA&quot;:0,&quot;INP&quot;:1,&quot;MFD&quot;:0,&quot;MFC&quot;:1,&quot;CFAR&quot;:1,&quot;mecj&quot;:1,&quot;INT&quot;:1,&quot;PLK&quot;:1,&quot;INS&quot;:0,&quot;MFEA&quot;:0,&quot;MFI&quot;:0,&quot;SRQ&quot;:6,&quot;AOA&quot;:0,&quot;SRT&quot;:1,&quot;PLP&quot;:1,&quot;AOD&quot;:0,&quot;PLS&quot;:1,&quot;MFP&quot;:1,&quot;NHP&quot;:0,&quot;MFEI&quot;:0,&quot;AOI&quot;:0,&quot;MFED&quot;:0,&quot;mntf&quot;:1,&quot;AOP&quot;:1,&quot;BAA&quot;:0,&quot;RecoAddonsExp&quot;:0,&quot;AGGRNEW&quot;:0,&quot;MYPRTA&quot;:0,&quot;CFBR&quot;:1,&quot;MFTD&quot;:0,&quot;BAN&quot;:0,&quot;CANCT&quot;:0,&quot;INSNEW&quot;:0,&quot;mnss&quot;:0,&quot;GYOLO&quot;:0,&quot;APD&quot;:0,&quot;dd_exp_name&quot;:&quot;mab&quot;,&quot;MERT&quot;:1,&quot;EMI&quot;:0,&quot;IPS&quot;:0,&quot;myp_multicity&quot;:false,&quot;BRB&quot;:0}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="Header">
                  <stringProp name="Header.name">currency</stringProp>
                  <stringProp name="Header.value">inr</stringProp>
                </elementProp>
                <elementProp name="x-user-rc" elementType="Header">
                  <stringProp name="Header.name">x-user-rc</stringProp>
                  <stringProp name="Header.value">NEWDELHI</stringProp>
                </elementProp>
                <elementProp name="domain" elementType="Header">
                  <stringProp name="Header.name">domain</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="source" elementType="Header">
                  <stringProp name="Header.name">source</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="profile-type" elementType="Header">
                  <stringProp name="Header.name">profile-type</stringProp>
                  <stringProp name="Header.value">PERSONAL</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="mmt-auth" elementType="Header">
                  <stringProp name="Header.name">mmt-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Credentials" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Credentials</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="x-user-cc" elementType="Header">
                  <stringProp name="Header.name">x-user-cc</stringProp>
                  <stringProp name="Header.value">IN</stringProp>
                </elementProp>
                <elementProp name="auuid" elementType="Header">
                  <stringProp name="Header.name">auuid</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[26]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/search-stream-dt?apiCallTimestamp=1688464986069&amp;cc=E&amp;cmpId=&amp;crId=c2a213b8-ec94-42c7-9acd-954d70835e6c&amp;creditShellInfo=&amp;cur=INR&amp;currency=inr&amp;dfs=0&amp;forwardFlowRequired=true&amp;it=DEL-CCU-20230705&amp;language=eng&amp;pax=A-1_C-0_I-0&amp;pfm=DESKTOP&amp;region=in&amp;shd=true&amp;sortBy=rhino&amp;src=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cc</stringProp>
                  <stringProp name="Argument.value">E</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cur" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cur</stringProp>
                  <stringProp name="Argument.value">INR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="crId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crId</stringProp>
                  <stringProp name="Argument.value">c2a213b8-ec94-42c7-9acd-954d70835e6c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="src" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">src</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pax" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pax</stringProp>
                  <stringProp name="Argument.value">A-1_C-0_I-0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cmpId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cmpId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="it" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">it</stringProp>
                  <stringProp name="Argument.value">DEL-CCU-20230705</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="creditShellInfo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">creditShellInfo</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="shd" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">shd</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dfs" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">dfs</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="apiCallTimestamp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">apiCallTimestamp</stringProp>
                  <stringProp name="Argument.value">1688464986069</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pfm" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">pfm</stringProp>
                  <stringProp name="Argument.value">DESKTOP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sortBy" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">sortBy</stringProp>
                  <stringProp name="Argument.value">rhino</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="forwardFlowRequired" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">forwardFlowRequired</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/search-stream-dt</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="src" elementType="Header">
                  <stringProp name="Header.name">src</stringProp>
                  <stringProp name="Header.value">mmt</stringProp>
                </elementProp>
                <elementProp name="mcid" elementType="Header">
                  <stringProp name="Header.name">mcid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="app-ver" elementType="Header">
                  <stringProp name="Header.name">app-ver</stringProp>
                  <stringProp name="Header.value">1.0.0</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="x-user-ip" elementType="Header">
                  <stringProp name="Header.name">x-user-ip</stringProp>
                  <stringProp name="Header.value">2401:4900:1f36:2f92:1124:4018:d7ca:ee8a</stringProp>
                </elementProp>
                <elementProp name="pfm" elementType="Header">
                  <stringProp name="Header.name">pfm</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="device-id" elementType="Header">
                  <stringProp name="Header.name">device-id</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="flow" elementType="Header">
                  <stringProp name="Header.name">flow</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="os" elementType="Header">
                  <stringProp name="Header.name">os</stringProp>
                  <stringProp name="Header.value">Linux</stringProp>
                </elementProp>
                <elementProp name="cmp-id" elementType="Header">
                  <stringProp name="Header.name">cmp-id</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="ab" elementType="Header">
                  <stringProp name="Header.name">ab</stringProp>
                  <stringProp name="Header.value">{&quot;INSGHT&quot;:0,&quot;LVS&quot;:0,&quot;STP&quot;:1,&quot;SimpF&quot;:0,&quot;BFFL&quot;:0,&quot;MMTFF&quot;:0,&quot;BSG&quot;:0,&quot;LFT&quot;:0,&quot;MFEP&quot;:0,&quot;DGF&quot;:0,&quot;BCG&quot;:0,&quot;MMTB&quot;:0,&quot;IFFLK&quot;:1,&quot;flightInfoOptionSequenceKey&quot;:&quot;FNO&quot;,&quot;DGT&quot;:3,&quot;IFPLK_DP_MAB&quot;:5,&quot;IFFLKOWRT&quot;:0,&quot;SED&quot;:0,&quot;RTSC&quot;:0,&quot;ZCA&quot;:0,&quot;ZCD&quot;:1,&quot;SEM&quot;:0,&quot;HCP2&quot;:0,&quot;ZCE&quot;:1,&quot;GRPC&quot;:1,&quot;NLA&quot;:0,&quot;FLK&quot;:1,&quot;RTI&quot;:1,&quot;dgi&quot;:0,&quot;IRR&quot;:0,&quot;RTM&quot;:0,&quot;ZCS&quot;:1,&quot;HPR&quot;:0,&quot;FLS&quot;:1,&quot;RTS&quot;:1,&quot;FFBEN&quot;:0,&quot;SFN&quot;:0,&quot;FMB&quot;:1,&quot;QBK&quot;:0,&quot;myPUAE&quot;:false,&quot;ISF&quot;:0,&quot;meff&quot;:1,&quot;DZC&quot;:0,&quot;mbpa&quot;:0,&quot;MMTFAB&quot;:1,&quot;QCO&quot;:0,&quot;mmt.app.flight.default.listing.default.TIF&quot;:0,&quot;TP&quot;:0,&quot;PRB&quot;:0,&quot;PRE&quot;:2,&quot;PRG&quot;:0,&quot;mbrta&quot;:1,&quot;IFFLKMC&quot;:0,&quot;pwa_login_type&quot;:0,&quot;NDAST&quot;:0,&quot;ITT&quot;:1,&quot;PRO&quot;:0,&quot;VOIDIF&quot;:0,&quot;HBF&quot;:0,&quot;FLKT&quot;:0,&quot;PBC&quot;:0,&quot;mstp&quot;:1,&quot;mmt.default.flight.default.default.default.ZC_MMT_PE&quot;:2,&quot;SHR&quot;:0,&quot;CYT&quot;:0,&quot;CID&quot;:1,&quot;bottomsheet_onetap_pwa&quot;:&quot;1&quot;,&quot;mras&quot;:1,&quot;mbrt&quot;:1,&quot;dd_exp_intl_meta&quot;:&quot;mab&quot;,&quot;FFPers&quot;:1,&quot;mypflight_commission&quot;:false,&quot;mctw&quot;:0,&quot;INSBTM&quot;:0,&quot;UMF&quot;:0,&quot;MMTSPLIF&quot;:0,&quot;HCP&quot;:1,&quot;SIM&quot;:0,&quot;PTA&quot;:0,&quot;INSV3&quot;:1,&quot;PTF&quot;:0,&quot;AFI&quot;:0,&quot;mctwb&quot;:1,&quot;IFSort&quot;:0,&quot;STFR&quot;:1,&quot;mrtp&quot;:0,&quot;LLS&quot;:1,&quot;PDF&quot;:1,&quot;MFMD&quot;:1,&quot;BIRT&quot;:0,&quot;IFS&quot;:0,&quot;flightPageLoadTracking&quot;:0,&quot;GSF&quot;:0,&quot;msfn&quot;:1,&quot;QFT&quot;:1,&quot;MOB&quot;:0,&quot;INSTP&quot;:0,&quot;BII&quot;:0,&quot;ADDONM&quot;:0,&quot;FAA&quot;:0,&quot;IFFLKOW&quot;:0,&quot;TMI&quot;:1,&quot;IIND&quot;:0,&quot;FAO&quot;:0,&quot;marc&quot;:0,&quot;FAT&quot;:0,&quot;PET&quot;:0,&quot;OCR&quot;:0,&quot;WCM&quot;:1,&quot;REUSABLE&quot;:0,&quot;PCRDF&quot;:0,&quot;PFA&quot;:1,&quot;OTP&quot;:0,&quot;mnthn&quot;:false,&quot;CLS&quot;:0,&quot;mmt.app.flight.default.review.default.ZCP&quot;:0,&quot;MMT_PERS&quot;:204,&quot;PFI&quot;:1,&quot;ZC_Server_Side_experiment1&quot;:1,&quot;CHMRK&quot;:0,&quot;FSA&quot;:3,&quot;PFL&quot;:0,&quot;PWA&quot;:0,&quot;PFP&quot;:1,&quot;DDDF&quot;:0,&quot;mema&quot;:1,&quot;NSF&quot;:0,&quot;mbfc&quot;:1,&quot;LISTN&quot;:0,&quot;PLK_DP_MAB&quot;:1,&quot;BPCE&quot;:0,&quot;FCN&quot;:false,&quot;CABS&quot;:1,&quot;myPartner_b2b_homepage&quot;:false,&quot;macs&quot;:0,&quot;CABF&quot;:0,&quot;mqc&quot;:0,&quot;mics&quot;:0,&quot;travellerScan&quot;:0,&quot;NTD&quot;:0,&quot;mmt.default.flight.default.default.default.mecr&quot;:1,&quot;wsmn&quot;:0,&quot;SNH&quot;:0,&quot;LPS&quot;:0,&quot;MRT&quot;:0,&quot;ffmove&quot;:0,&quot;ZCDS&quot;:0,&quot;IFMC&quot;:0,&quot;IFFLKRT&quot;:0,&quot;BNPL&quot;:1,&quot;mal&quot;:1,&quot;MICROSOFTFES&quot;:0,&quot;mgsf&quot;:1,&quot;ZC_Client_Side_exp&quot;:false,&quot;NUG&quot;:0,&quot;ALTFLT&quot;:0,&quot;FUS&quot;:1,&quot;CURDT&quot;:0,&quot;COU&quot;:0,&quot;USF&quot;:0,&quot;MCC&quot;:1,&quot;PIF&quot;:1,&quot;CYTN&quot;:0,&quot;ALTFLTCORP&quot;:0,&quot;BAGR&quot;:0,&quot;CPA&quot;:0,&quot;SOR&quot;:0,&quot;msa&quot;:1,&quot;ALF&quot;:0,&quot;MCS&quot;:0,&quot;REUSABLERT&quot;:0,&quot;msf&quot;:1,&quot;DDIF&quot;:0,&quot;AUTOSG&quot;:1,&quot;testAB&quot;:0,&quot;SPA&quot;:1,&quot;CPS&quot;:1,&quot;cnpn&quot;:1,&quot;dd_exp_myp&quot;:&quot;peshkash&quot;,&quot;RNP&quot;:5,&quot;DSF&quot;:0,&quot;AMD&quot;:0,&quot;AME&quot;:0,&quot;IMB&quot;:0,&quot;mestf&quot;:0,&quot;BNTD&quot;:1,&quot;WNTI&quot;:0,&quot;TSC&quot;:0,&quot;trvlr&quot;:true,&quot;CAD&quot;:1,&quot;GI_PLK&quot;:0,&quot;bntdp&quot;:0,&quot;incredibleindiacommon&quot;:&quot;IICN&quot;,&quot;IMS&quot;:0,&quot;mbfsme&quot;:1,&quot;mbit&quot;:0,&quot;mdl&quot;:1,&quot;DTD&quot;:2,&quot;ANC&quot;:0,&quot;IFPLK&quot;:1,&quot;mestm&quot;:0,&quot;HLD&quot;:0,&quot;ANP&quot;:1,&quot;ALTF&quot;:0,&quot;cheaperFlightsDesktopDom&quot;:1,&quot;DTT&quot;:1,&quot;ANU&quot;:0,&quot;MFA&quot;:0,&quot;INP&quot;:1,&quot;MFD&quot;:0,&quot;MFC&quot;:1,&quot;CFAR&quot;:1,&quot;mecj&quot;:1,&quot;INT&quot;:1,&quot;PLK&quot;:1,&quot;INS&quot;:0,&quot;MFEA&quot;:0,&quot;MFI&quot;:0,&quot;SRQ&quot;:6,&quot;AOA&quot;:0,&quot;SRT&quot;:1,&quot;PLP&quot;:1,&quot;AOD&quot;:0,&quot;PLS&quot;:1,&quot;MFP&quot;:1,&quot;NHP&quot;:0,&quot;MFEI&quot;:0,&quot;AOI&quot;:0,&quot;MFED&quot;:0,&quot;mntf&quot;:1,&quot;AOP&quot;:1,&quot;BAA&quot;:0,&quot;RecoAddonsExp&quot;:0,&quot;AGGRNEW&quot;:0,&quot;MYPRTA&quot;:0,&quot;CFBR&quot;:1,&quot;MFTD&quot;:0,&quot;BAN&quot;:0,&quot;CANCT&quot;:0,&quot;INSNEW&quot;:0,&quot;mnss&quot;:0,&quot;GYOLO&quot;:0,&quot;APD&quot;:0,&quot;dd_exp_name&quot;:&quot;mab&quot;,&quot;MERT&quot;:1,&quot;EMI&quot;:0,&quot;IPS&quot;:0,&quot;myp_multicity&quot;:false,&quot;BRB&quot;:0}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="Header">
                  <stringProp name="Header.name">currency</stringProp>
                  <stringProp name="Header.value">inr</stringProp>
                </elementProp>
                <elementProp name="x-user-rc" elementType="Header">
                  <stringProp name="Header.name">x-user-rc</stringProp>
                  <stringProp name="Header.value">NEWDELHI</stringProp>
                </elementProp>
                <elementProp name="domain" elementType="Header">
                  <stringProp name="Header.name">domain</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="profile-type" elementType="Header">
                  <stringProp name="Header.name">profile-type</stringProp>
                  <stringProp name="Header.value">PERSONAL</stringProp>
                </elementProp>
                <elementProp name="source" elementType="Header">
                  <stringProp name="Header.name">source</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="accept" elementType="Header">
                  <stringProp name="Header.name">accept</stringProp>
                  <stringProp name="Header.value">text/event-stream</stringProp>
                </elementProp>
                <elementProp name="mmt-auth" elementType="Header">
                  <stringProp name="Header.name">mmt-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="auuid" elementType="Header">
                  <stringProp name="Header.name">auuid</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Credentials" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Credentials</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="x-user-cc" elementType="Header">
                  <stringProp name="Header.name">x-user-cc</stringProp>
                  <stringProp name="Header.value">IN</stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[27]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/flights-search/autosuggest?query=CCU&amp;limit=15&amp;matchCity=true&amp;region=in&amp;currency=inr&amp;language=eng&amp;cmpId=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="matchCity" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">matchCity</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="query" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">query</stringProp>
                  <stringProp name="Argument.value">CCU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cmpId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cmpId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="limit" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">limit</stringProp>
                  <stringProp name="Argument.value">15</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/flights-search/autosuggest</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="src" elementType="Header">
                  <stringProp name="Header.name">src</stringProp>
                  <stringProp name="Header.value">mmt</stringProp>
                </elementProp>
                <elementProp name="mcid" elementType="Header">
                  <stringProp name="Header.name">mcid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="app-ver" elementType="Header">
                  <stringProp name="Header.name">app-ver</stringProp>
                  <stringProp name="Header.value">1.0.0</stringProp>
                </elementProp>
                <elementProp name="x-user-ip" elementType="Header">
                  <stringProp name="Header.name">x-user-ip</stringProp>
                  <stringProp name="Header.value">2401:4900:1f36:2f92:1124:4018:d7ca:ee8a</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="pfm" elementType="Header">
                  <stringProp name="Header.name">pfm</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="device-id" elementType="Header">
                  <stringProp name="Header.name">device-id</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="flow" elementType="Header">
                  <stringProp name="Header.name">flow</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="os" elementType="Header">
                  <stringProp name="Header.name">os</stringProp>
                  <stringProp name="Header.value">Linux</stringProp>
                </elementProp>
                <elementProp name="cmp-id" elementType="Header">
                  <stringProp name="Header.name">cmp-id</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="ab" elementType="Header">
                  <stringProp name="Header.name">ab</stringProp>
                  <stringProp name="Header.value">{&quot;INSGHT&quot;:0,&quot;LVS&quot;:0,&quot;STP&quot;:1,&quot;SimpF&quot;:0,&quot;BFFL&quot;:0,&quot;MMTFF&quot;:0,&quot;BSG&quot;:0,&quot;LFT&quot;:0,&quot;MFEP&quot;:0,&quot;DGF&quot;:0,&quot;BCG&quot;:0,&quot;MMTB&quot;:0,&quot;IFFLK&quot;:1,&quot;flightInfoOptionSequenceKey&quot;:&quot;FNO&quot;,&quot;DGT&quot;:3,&quot;IFPLK_DP_MAB&quot;:5,&quot;IFFLKOWRT&quot;:0,&quot;SED&quot;:0,&quot;RTSC&quot;:0,&quot;ZCA&quot;:0,&quot;ZCD&quot;:1,&quot;SEM&quot;:0,&quot;HCP2&quot;:0,&quot;ZCE&quot;:1,&quot;GRPC&quot;:1,&quot;NLA&quot;:0,&quot;FLK&quot;:1,&quot;RTI&quot;:1,&quot;dgi&quot;:0,&quot;IRR&quot;:0,&quot;RTM&quot;:0,&quot;ZCS&quot;:1,&quot;HPR&quot;:0,&quot;FLS&quot;:1,&quot;RTS&quot;:1,&quot;FFBEN&quot;:0,&quot;SFN&quot;:0,&quot;FMB&quot;:1,&quot;QBK&quot;:0,&quot;myPUAE&quot;:false,&quot;ISF&quot;:0,&quot;meff&quot;:1,&quot;DZC&quot;:0,&quot;mbpa&quot;:0,&quot;MMTFAB&quot;:1,&quot;QCO&quot;:0,&quot;mmt.app.flight.default.listing.default.TIF&quot;:0,&quot;TP&quot;:0,&quot;PRB&quot;:0,&quot;PRE&quot;:2,&quot;PRG&quot;:0,&quot;mbrta&quot;:1,&quot;IFFLKMC&quot;:0,&quot;pwa_login_type&quot;:0,&quot;NDAST&quot;:0,&quot;ITT&quot;:1,&quot;PRO&quot;:0,&quot;VOIDIF&quot;:0,&quot;HBF&quot;:0,&quot;FLKT&quot;:0,&quot;PBC&quot;:0,&quot;mstp&quot;:1,&quot;mmt.default.flight.default.default.default.ZC_MMT_PE&quot;:2,&quot;SHR&quot;:0,&quot;CYT&quot;:0,&quot;CID&quot;:1,&quot;bottomsheet_onetap_pwa&quot;:&quot;1&quot;,&quot;mras&quot;:1,&quot;mbrt&quot;:1,&quot;dd_exp_intl_meta&quot;:&quot;mab&quot;,&quot;FFPers&quot;:1,&quot;mypflight_commission&quot;:false,&quot;mctw&quot;:0,&quot;INSBTM&quot;:0,&quot;UMF&quot;:0,&quot;MMTSPLIF&quot;:0,&quot;HCP&quot;:1,&quot;SIM&quot;:0,&quot;PTA&quot;:0,&quot;INSV3&quot;:1,&quot;PTF&quot;:0,&quot;AFI&quot;:0,&quot;mctwb&quot;:1,&quot;IFSort&quot;:0,&quot;STFR&quot;:1,&quot;mrtp&quot;:0,&quot;LLS&quot;:1,&quot;PDF&quot;:1,&quot;MFMD&quot;:1,&quot;BIRT&quot;:0,&quot;IFS&quot;:0,&quot;flightPageLoadTracking&quot;:0,&quot;GSF&quot;:0,&quot;msfn&quot;:1,&quot;QFT&quot;:1,&quot;MOB&quot;:0,&quot;INSTP&quot;:0,&quot;BII&quot;:0,&quot;ADDONM&quot;:0,&quot;FAA&quot;:0,&quot;IFFLKOW&quot;:0,&quot;TMI&quot;:1,&quot;IIND&quot;:0,&quot;FAO&quot;:0,&quot;marc&quot;:0,&quot;FAT&quot;:0,&quot;PET&quot;:0,&quot;OCR&quot;:0,&quot;WCM&quot;:1,&quot;REUSABLE&quot;:0,&quot;PCRDF&quot;:0,&quot;PFA&quot;:1,&quot;OTP&quot;:0,&quot;mnthn&quot;:false,&quot;CLS&quot;:0,&quot;mmt.app.flight.default.review.default.ZCP&quot;:0,&quot;MMT_PERS&quot;:204,&quot;PFI&quot;:1,&quot;ZC_Server_Side_experiment1&quot;:1,&quot;CHMRK&quot;:0,&quot;FSA&quot;:3,&quot;PFL&quot;:0,&quot;PWA&quot;:0,&quot;PFP&quot;:1,&quot;DDDF&quot;:0,&quot;mema&quot;:1,&quot;NSF&quot;:0,&quot;mbfc&quot;:1,&quot;LISTN&quot;:0,&quot;PLK_DP_MAB&quot;:1,&quot;BPCE&quot;:0,&quot;FCN&quot;:false,&quot;CABS&quot;:1,&quot;myPartner_b2b_homepage&quot;:false,&quot;macs&quot;:0,&quot;CABF&quot;:0,&quot;mqc&quot;:0,&quot;mics&quot;:0,&quot;travellerScan&quot;:0,&quot;NTD&quot;:0,&quot;mmt.default.flight.default.default.default.mecr&quot;:1,&quot;wsmn&quot;:0,&quot;SNH&quot;:0,&quot;LPS&quot;:0,&quot;MRT&quot;:0,&quot;ffmove&quot;:0,&quot;ZCDS&quot;:0,&quot;IFMC&quot;:0,&quot;IFFLKRT&quot;:0,&quot;BNPL&quot;:1,&quot;mal&quot;:1,&quot;MICROSOFTFES&quot;:0,&quot;mgsf&quot;:1,&quot;ZC_Client_Side_exp&quot;:false,&quot;NUG&quot;:0,&quot;ALTFLT&quot;:0,&quot;FUS&quot;:1,&quot;CURDT&quot;:0,&quot;COU&quot;:0,&quot;USF&quot;:0,&quot;MCC&quot;:1,&quot;PIF&quot;:1,&quot;CYTN&quot;:0,&quot;ALTFLTCORP&quot;:0,&quot;BAGR&quot;:0,&quot;CPA&quot;:0,&quot;SOR&quot;:0,&quot;msa&quot;:1,&quot;ALF&quot;:0,&quot;MCS&quot;:0,&quot;REUSABLERT&quot;:0,&quot;msf&quot;:1,&quot;DDIF&quot;:0,&quot;AUTOSG&quot;:1,&quot;testAB&quot;:0,&quot;SPA&quot;:1,&quot;CPS&quot;:1,&quot;cnpn&quot;:1,&quot;dd_exp_myp&quot;:&quot;peshkash&quot;,&quot;RNP&quot;:5,&quot;DSF&quot;:0,&quot;AMD&quot;:0,&quot;AME&quot;:0,&quot;IMB&quot;:0,&quot;mestf&quot;:0,&quot;BNTD&quot;:1,&quot;WNTI&quot;:0,&quot;TSC&quot;:0,&quot;trvlr&quot;:true,&quot;CAD&quot;:1,&quot;GI_PLK&quot;:0,&quot;bntdp&quot;:0,&quot;incredibleindiacommon&quot;:&quot;IICN&quot;,&quot;IMS&quot;:0,&quot;mbfsme&quot;:1,&quot;mbit&quot;:0,&quot;mdl&quot;:1,&quot;DTD&quot;:2,&quot;ANC&quot;:0,&quot;IFPLK&quot;:1,&quot;mestm&quot;:0,&quot;HLD&quot;:0,&quot;ANP&quot;:1,&quot;ALTF&quot;:0,&quot;cheaperFlightsDesktopDom&quot;:1,&quot;DTT&quot;:1,&quot;ANU&quot;:0,&quot;MFA&quot;:0,&quot;INP&quot;:1,&quot;MFD&quot;:0,&quot;MFC&quot;:1,&quot;CFAR&quot;:1,&quot;mecj&quot;:1,&quot;INT&quot;:1,&quot;PLK&quot;:1,&quot;INS&quot;:0,&quot;MFEA&quot;:0,&quot;MFI&quot;:0,&quot;SRQ&quot;:6,&quot;AOA&quot;:0,&quot;SRT&quot;:1,&quot;PLP&quot;:1,&quot;AOD&quot;:0,&quot;PLS&quot;:1,&quot;MFP&quot;:1,&quot;NHP&quot;:0,&quot;MFEI&quot;:0,&quot;AOI&quot;:0,&quot;MFED&quot;:0,&quot;mntf&quot;:1,&quot;AOP&quot;:1,&quot;BAA&quot;:0,&quot;RecoAddonsExp&quot;:0,&quot;AGGRNEW&quot;:0,&quot;MYPRTA&quot;:0,&quot;CFBR&quot;:1,&quot;MFTD&quot;:0,&quot;BAN&quot;:0,&quot;CANCT&quot;:0,&quot;INSNEW&quot;:0,&quot;mnss&quot;:0,&quot;GYOLO&quot;:0,&quot;APD&quot;:0,&quot;dd_exp_name&quot;:&quot;mab&quot;,&quot;MERT&quot;:1,&quot;EMI&quot;:0,&quot;IPS&quot;:0,&quot;myp_multicity&quot;:false,&quot;BRB&quot;:0}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="Header">
                  <stringProp name="Header.name">currency</stringProp>
                  <stringProp name="Header.value">inr</stringProp>
                </elementProp>
                <elementProp name="x-user-rc" elementType="Header">
                  <stringProp name="Header.name">x-user-rc</stringProp>
                  <stringProp name="Header.value">NEWDELHI</stringProp>
                </elementProp>
                <elementProp name="domain" elementType="Header">
                  <stringProp name="Header.name">domain</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="source" elementType="Header">
                  <stringProp name="Header.name">source</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="profile-type" elementType="Header">
                  <stringProp name="Header.name">profile-type</stringProp>
                  <stringProp name="Header.value">PERSONAL</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="mmt-auth" elementType="Header">
                  <stringProp name="Header.name">mmt-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Credentials" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Credentials</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="x-user-cc" elementType="Header">
                  <stringProp name="Header.name">x-user-cc</stringProp>
                  <stringProp name="Header.value">IN</stringProp>
                </elementProp>
                <elementProp name="auuid" elementType="Header">
                  <stringProp name="Header.name">auuid</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[28]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.makemytrip.com/akam/13/pixel_69c6aea2" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="fh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fh</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nav" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">nav</stringProp>
                  <stringProp name="Argument.value">{&quot;userAgent&quot;:&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36&quot;,&quot;appName&quot;:&quot;Netscape&quot;,&quot;appCodeName&quot;:&quot;Mozilla&quot;,&quot;appVersion&quot;:&quot;5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36&quot;,&quot;appMinorVersion&quot;:0,&quot;product&quot;:&quot;Gecko&quot;,&quot;productSub&quot;:&quot;20030107&quot;,&quot;vendor&quot;:&quot;Google Inc.&quot;,&quot;vendorSub&quot;:&quot;&quot;,&quot;buildID&quot;:0,&quot;platform&quot;:&quot;Linux x86_64&quot;,&quot;oscpu&quot;:0,&quot;hardwareConcurrency&quot;:4,&quot;language&quot;:&quot;en-GB&quot;,&quot;languages&quot;:[&quot;en-GB&quot;,&quot;en-US&quot;,&quot;en&quot;],&quot;systemLanguage&quot;:0,&quot;userLanguage&quot;:0,&quot;doNotTrack&quot;:null,&quot;msDoNotTrack&quot;:0,&quot;cookieEnabled&quot;:true,&quot;geolocation&quot;:1,&quot;vibrate&quot;:1,&quot;maxTouchPoints&quot;:0,&quot;webdriver&quot;:false,&quot;plugins&quot;:[&quot;PDF Viewer&quot;,&quot;Chrome PDF Viewer&quot;,&quot;Chromium PDF Viewer&quot;,&quot;Microsoft Edge PDF Viewer&quot;,&quot;WebKit built-in PDF&quot;]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ps" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ps</stringProp>
                  <stringProp name="Argument.value">true,true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="timing" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">timing</stringProp>
                  <stringProp name="Argument.value">{&quot;1&quot;:58,&quot;2&quot;:395,&quot;3&quot;:1161,&quot;profile&quot;:{&quot;bp&quot;:1,&quot;sr&quot;:0,&quot;dp&quot;:1,&quot;lt&quot;:0,&quot;ps&quot;:0,&quot;cv&quot;:25,&quot;fp&quot;:0,&quot;sp&quot;:1,&quot;br&quot;:0,&quot;ieps&quot;:0,&quot;av&quot;:0,&quot;z1&quot;:20,&quot;jsv&quot;:1,&quot;nav&quot;:2,&quot;nap&quot;:5,&quot;crc&quot;:0,&quot;z2&quot;:4,&quot;z3&quot;:2},&quot;main&quot;:1561,&quot;compute&quot;:58,&quot;send&quot;:1161}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">lt</stringProp>
                  <stringProp name="Argument.value">1688464985825+5.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fp</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="dp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">dp</stringProp>
                  <stringProp name="Argument.value">{&quot;XDomainRequest&quot;:0,&quot;createPopup&quot;:0,&quot;removeEventListener&quot;:1,&quot;globalStorage&quot;:0,&quot;openDatabase&quot;:1,&quot;indexedDB&quot;:1,&quot;attachEvent&quot;:0,&quot;ActiveXObject&quot;:0,&quot;dispatchEvent&quot;:1,&quot;addBehavior&quot;:0,&quot;addEventListener&quot;:1,&quot;detachEvent&quot;:0,&quot;fireEvent&quot;:0,&quot;MutationObserver&quot;:1,&quot;HTMLMenuItemElement&quot;:0,&quot;Int8Array&quot;:1,&quot;postMessage&quot;:1,&quot;querySelector&quot;:1,&quot;getElementsByClassName&quot;:1,&quot;images&quot;:1,&quot;compatMode&quot;:&quot;CSS1Compat&quot;,&quot;documentMode&quot;:0,&quot;all&quot;:1,&quot;now&quot;:1,&quot;contextMenu&quot;:0}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="jsv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">jsv</stringProp>
                  <stringProp name="Argument.value">1.5</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bp</stringProp>
                  <stringProp name="Argument.value">2087755996,1953464915,591862434,325835597,1068473606,-1382186647,-365096851,-1979186206,-108039040,-1906852049</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ieps" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ieps</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="zh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">zh</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ap</stringProp>
                  <stringProp name="Argument.value">true</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="br" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">br</stringProp>
                  <stringProp name="Argument.value">Chrome</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bt" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bt</stringProp>
                  <stringProp name="Argument.value">{&quot;charging&quot;:true,&quot;chargingTime&quot;:0,&quot;dischargingTime&quot;:&quot;Infinity&quot;,&quot;level&quot;:1,&quot;onchargingchange&quot;:null,&quot;onchargingtimechange&quot;:null,&quot;ondischargingtimechange&quot;:null,&quot;onlevelchange&quot;:null}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cv" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cv</stringProp>
                  <stringProp name="Argument.value">e6f3af40dc5d7c3cd171e01f0f52649c237d9c25</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">2fafe26095fe79fb821d60b6e441ef4400e44684</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="av" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">av</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="crc" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">crc</stringProp>
                  <stringProp name="Argument.value">{&quot;window.chrome&quot;:{&quot;app&quot;:{&quot;isInstalled&quot;:false,&quot;InstallState&quot;:{&quot;DISABLED&quot;:&quot;disabled&quot;,&quot;INSTALLED&quot;:&quot;installed&quot;,&quot;NOT_INSTALLED&quot;:&quot;not_installed&quot;},&quot;RunningState&quot;:{&quot;CANNOT_RUN&quot;:&quot;cannot_run&quot;,&quot;READY_TO_RUN&quot;:&quot;ready_to_run&quot;,&quot;RUNNING&quot;:&quot;running&quot;}}}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fonts" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fonts</stringProp>
                  <stringProp name="Argument.value">null</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="u" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">u</stringProp>
                  <stringProp name="Argument.value">6d49c21bfc38576fba591a98a806219c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="z" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">z</stringProp>
                  <stringProp name="Argument.value">{&quot;a&quot;:1774628509,&quot;b&quot;:1,&quot;c&quot;:1}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="nap" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">nap</stringProp>
                  <stringProp name="Argument.value">10321144241322243122</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sp</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="sr" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">sr</stringProp>
                  <stringProp name="Argument.value">{&quot;inner&quot;:[1360,637],&quot;outer&quot;:[1360,741],&quot;screen&quot;:[0,0],&quot;pageOffset&quot;:[0,0],&quot;avail&quot;:[1360,741],&quot;size&quot;:[1360,768],&quot;client&quot;:[1360,637],&quot;colorDepth&quot;:24,&quot;pixelDepth&quot;:24}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">akam/13/pixel_69c6aea2</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">2096051@nr=0-1-75783-665315257-75f729572294be2a----1688464986986</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-0bd376cbdd82ea9a7f97d81d72a32cc0-75f729572294be2a-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6Ijc1NzgzIiwiYXAiOiI2NjUzMTUyNTciLCJpZCI6Ijc1ZjcyOTU3MjI5NGJlMmEiLCJ0ciI6IjBiZDM3NmNiZGQ4MmVhOWE3Zjk3ZDgxZDcyYTMyY2MwIiwidGkiOjE2ODg0NjQ5ODY5ODYsInRrIjoiMjA5NjA1MSJ9fQ==</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/x-www-form-urlencoded</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[29]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/fareCalendar?crId=c2a213b8-ec94-42c7-9acd-954d70835e6c&amp;it=DEL-CCU-20230705&amp;lcl=en&amp;cur=INR&amp;creditShellInfo=&amp;region=in&amp;currency=inr&amp;language=eng&amp;cmpId=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cur" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cur</stringProp>
                  <stringProp name="Argument.value">INR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="crId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crId</stringProp>
                  <stringProp name="Argument.value">c2a213b8-ec94-42c7-9acd-954d70835e6c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lcl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lcl</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cmpId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cmpId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="it" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">it</stringProp>
                  <stringProp name="Argument.value">DEL-CCU-20230705</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="creditShellInfo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">creditShellInfo</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/fareCalendar</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">GET</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">ab,access-control-allow-credentials,app-ver,auuid,cache-control,cmp-id,currency,device-id,domain,flow,language,mcid,mmt-auth,os,pfm,profile-type,region,source,src,x-flt,x-user-cc,x-user-ip,x-user-rc</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[30]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://transporter.makemytrip.com/flights/event-log?crId=c2a213b8-ec94-42c7-9acd-954d70835e6c" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="crId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crId</stringProp>
                  <stringProp name="Argument.value">c2a213b8-ec94-42c7-9acd-954d70835e6c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">flights/event-log</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type,log-source,request-data-encoding,sub-type</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[31]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://transporter.makemytrip.com/flights/event-log?crId=c2a213b8-ec94-42c7-9acd-954d70835e6c" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:[{&quot;device&quot;:{&quot;browser&quot;:&quot;Chrome&quot;,&quot;browser_version&quot;:&quot;107.0.0.0&quot;,&quot;flavour&quot;:&quot;Desktop&quot;,&quot;os_version&quot;:&quot;Linux x86_64&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36&quot;,&quot;device_resolution&quot;:&quot;1360*768&quot;},&quot;context&quot;:{&quot;client_timestamp&quot;:1688464988189,&quot;client_timezone&quot;:&quot;GMT +0530&quot;,&quot;client_ip&quot;:&quot;&quot;,&quot;environment&quot;:&quot;prod&quot;,&quot;bu&quot;:&quot;flights&quot;,&quot;funnel_source&quot;:&quot;MMT&quot;,&quot;data_source&quot;:&quot;client&quot;,&quot;funnel_page_name&quot;:&quot;funnel:domestic flights:listing&quot;,&quot;page_url&quot;:&quot;https://www.makemytrip.com/flight/search?itinerary=DEL-CCU-05/07/2023&amp;tripType=O&amp;paxType=A-1_C-0_I-0&amp;intl=false&amp;cabinClass=E&amp;ccde=IN&amp;lang=eng&quot;},&quot;exp_experiment_details_list&quot;:[{&quot;exp_experiment_id&quot;:546,&quot;exp_experiment_version&quot;:23,&quot;exp_experiment_variant_id&quot;:1018},{&quot;exp_experiment_id&quot;:2613,&quot;exp_experiment_version&quot;:10,&quot;exp_experiment_variant_id&quot;:5651},{&quot;exp_experiment_id&quot;:2615,&quot;exp_experiment_version&quot;:3,&quot;exp_experiment_variant_id&quot;:5654},{&quot;exp_experiment_id&quot;:2123,&quot;exp_experiment_version&quot;:21,&quot;exp_experiment_variant_id&quot;:4539},{&quot;exp_experiment_id&quot;:81,&quot;exp_experiment_version&quot;:13,&quot;exp_experiment_variant_id&quot;:216},{&quot;exp_experiment_id&quot;:2643,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:5721},{&quot;exp_experiment_id&quot;:2141,&quot;exp_experiment_version&quot;:15,&quot;exp_experiment_variant_id&quot;:4578},{&quot;exp_experiment_id&quot;:3173,&quot;exp_experiment_version&quot;:2,&quot;exp_experiment_variant_id&quot;:6785},{&quot;exp_experiment_id&quot;:2666,&quot;exp_experiment_version&quot;:11,&quot;exp_experiment_variant_id&quot;:5768},{&quot;exp_experiment_id&quot;:3180,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6804},{&quot;exp_experiment_id&quot;:3190,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:6824},{&quot;exp_experiment_id&quot;:2180,&quot;exp_experiment_version&quot;:12,&quot;exp_experiment_variant_id&quot;:4665},{&quot;exp_experiment_id&quot;:649,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:1232},{&quot;exp_experiment_id&quot;:2701,&quot;exp_experiment_version&quot;:40,&quot;exp_experiment_variant_id&quot;:5850},{&quot;exp_experiment_id&quot;:2190,&quot;exp_experiment_version&quot;:21,&quot;exp_experiment_variant_id&quot;:4693},{&quot;exp_experiment_id&quot;:1679,&quot;exp_experiment_version&quot;:82,&quot;exp_experiment_variant_id&quot;:3512},{&quot;exp_experiment_id&quot;:160,&quot;exp_experiment_version&quot;:176,&quot;exp_experiment_variant_id&quot;:4470},{&quot;exp_experiment_id&quot;:2732,&quot;exp_experiment_version&quot;:4,&quot;exp_experiment_variant_id&quot;:5915},{&quot;exp_experiment_id&quot;:2738,&quot;exp_experiment_version&quot;:8,&quot;exp_experiment_variant_id&quot;:5928},{&quot;exp_experiment_id&quot;:3251,&quot;exp_experiment_version&quot;:7,&quot;exp_experiment_variant_id&quot;:6945},{&quot;exp_experiment_id&quot;:2782,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6018},{&quot;exp_experiment_id&quot;:2277,&quot;exp_experiment_version&quot;:6,&quot;exp_experiment_variant_id&quot;:4894},{&quot;exp_experiment_id&quot;:3301,&quot;exp_experiment_version&quot;:2,&quot;exp_experiment_variant_id&quot;:7064},{&quot;exp_experiment_id&quot;:3302,&quot;exp_experiment_version&quot;:3,&quot;exp_experiment_variant_id&quot;:7071},{&quot;exp_experiment_id&quot;:3311,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:7085},{&quot;exp_experiment_id&quot;:2817,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6092},{&quot;exp_experiment_id&quot;:2825,&quot;exp_experiment_version&quot;:21,&quot;exp_experiment_variant_id&quot;:6108},{&quot;exp_experiment_id&quot;:266,&quot;exp_experiment_version&quot;:28,&quot;exp_experiment_variant_id&quot;:777},{&quot;exp_experiment_id&quot;:2319,&quot;exp_experiment_version&quot;:28,&quot;exp_experiment_variant_id&quot;:4988},{&quot;exp_experiment_id&quot;:799,&quot;exp_experiment_version&quot;:35,&quot;exp_experiment_variant_id&quot;:1562},{&quot;exp_experiment_id&quot;:808,&quot;exp_experiment_version&quot;:27,&quot;exp_experiment_variant_id&quot;:1580},{&quot;exp_experiment_id&quot;:2868,&quot;exp_experiment_version&quot;:17,&quot;exp_experiment_variant_id&quot;:6202},{&quot;exp_experiment_id&quot;:361,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:688},{&quot;exp_experiment_id&quot;:2939,&quot;exp_experiment_version&quot;:2,&quot;exp_experiment_variant_id&quot;:6352},{&quot;exp_experiment_id&quot;:1423,&quot;exp_experiment_version&quot;:14,&quot;exp_experiment_variant_id&quot;:2946},{&quot;exp_experiment_id&quot;:2448,&quot;exp_experiment_version&quot;:12,&quot;exp_experiment_variant_id&quot;:5296},{&quot;exp_experiment_id&quot;:415,&quot;exp_experiment_version&quot;:34,&quot;exp_experiment_variant_id&quot;:744},{&quot;exp_experiment_id&quot;:2977,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6421},{&quot;exp_experiment_id&quot;:2466,&quot;exp_experiment_version&quot;:13,&quot;exp_experiment_variant_id&quot;:5333},{&quot;exp_experiment_id&quot;:2988,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:6444},{&quot;exp_experiment_id&quot;:2989,&quot;exp_experiment_version&quot;:30,&quot;exp_experiment_variant_id&quot;:6447},{&quot;exp_experiment_id&quot;:958,&quot;exp_experiment_version&quot;:19,&quot;exp_experiment_variant_id&quot;:1920},{&quot;exp_experiment_id&quot;:2500,&quot;exp_experiment_version&quot;:16,&quot;exp_experiment_variant_id&quot;:5407},{&quot;exp_experiment_id&quot;:3013,&quot;exp_experiment_version&quot;:11,&quot;exp_experiment_variant_id&quot;:6497},{&quot;exp_experiment_id&quot;:3014,&quot;exp_experiment_version&quot;:5,&quot;exp_experiment_variant_id&quot;:6499},{&quot;exp_experiment_id&quot;:1482,&quot;exp_experiment_version&quot;:35,&quot;exp_experiment_variant_id&quot;:3082},{&quot;exp_experiment_id&quot;:981,&quot;exp_experiment_version&quot;:18,&quot;exp_experiment_variant_id&quot;:1969},{&quot;exp_experiment_id&quot;:473,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:861},{&quot;exp_experiment_id&quot;:3059,&quot;exp_experiment_version&quot;:10,&quot;exp_experiment_variant_id&quot;:6547},{&quot;exp_experiment_id&quot;:2549,&quot;exp_experiment_version&quot;:27,&quot;exp_experiment_variant_id&quot;:5512},{&quot;exp_experiment_id&quot;:3061,&quot;exp_experiment_version&quot;:6,&quot;exp_experiment_variant_id&quot;:6565},{&quot;exp_experiment_id&quot;:546,&quot;exp_experiment_version&quot;:23,&quot;exp_experiment_variant_id&quot;:1018},{&quot;exp_experiment_id&quot;:2123,&quot;exp_experiment_version&quot;:21,&quot;exp_experiment_variant_id&quot;:4539},{&quot;exp_experiment_id&quot;:81,&quot;exp_experiment_version&quot;:13,&quot;exp_experiment_variant_id&quot;:216},{&quot;exp_experiment_id&quot;:3180,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6804},{&quot;exp_experiment_id&quot;:3190,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:6824},{&quot;exp_experiment_id&quot;:2180,&quot;exp_experiment_version&quot;:12,&quot;exp_experiment_variant_id&quot;:4665},{&quot;exp_experiment_id&quot;:160,&quot;exp_experiment_version&quot;:176,&quot;exp_experiment_variant_id&quot;:4470},{&quot;exp_experiment_id&quot;:3301,&quot;exp_experiment_version&quot;:2,&quot;exp_experiment_variant_id&quot;:7064},{&quot;exp_experiment_id&quot;:2817,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6092},{&quot;exp_experiment_id&quot;:2319,&quot;exp_experiment_version&quot;:28,&quot;exp_experiment_variant_id&quot;:4988},{&quot;exp_experiment_id&quot;:1423,&quot;exp_experiment_version&quot;:14,&quot;exp_experiment_variant_id&quot;:2946},{&quot;exp_experiment_id&quot;:2466,&quot;exp_experiment_version&quot;:13,&quot;exp_experiment_variant_id&quot;:5333}],&quot;cb_data&quot;:{&quot;device&quot;:{&quot;type&quot;:&quot;DESKTOP&quot;,&quot;operating_system&quot;:&quot;Linux&quot;,&quot;operating_system_version&quot;:&quot;Linux&quot;,&quot;model&quot;:&quot;&quot;,&quot;id&quot;:&quot;&quot;,&quot;carrier&quot;:&quot;&quot;,&quot;latitude&quot;:0,&quot;longitude&quot;:0,&quot;browser&quot;:&quot;&quot;,&quot;browser_version&quot;:&quot;&quot;,&quot;connection_type&quot;:&quot;&quot;,&quot;application_version&quot;:&quot;1.0.0&quot;,&quot;geo_city&quot;:&quot;&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36&quot;,&quot;manufacturer&quot;:&quot;&quot;,&quot;traffic_campaign&quot;:&quot;&quot;,&quot;traffic_medium&quot;:&quot;&quot;,&quot;traffic_source&quot;:&quot;&quot;,&quot;traffic_country&quot;:&quot;&quot;,&quot;traffic_currency&quot;:&quot;&quot;,&quot;traffic_language&quot;:&quot;&quot;,&quot;akamai_header&quot;:&quot;&quot;},&quot;user&quot;:{&quot;legacy_omniture_visitor_id&quot;:&quot;&quot;,&quot;marketing_cloud_id&quot;:&quot;8270b70d-2cf2-4443-8aeb-40c433c74257&quot;,&quot;login_channel&quot;:&quot;MMT&quot;,&quot;is_logged_in&quot;:false,&quot;uuid&quot;:&quot;&quot;,&quot;profile_type&quot;:&quot;PERSONAL&quot;,&quot;email_communication_id&quot;:&quot;&quot;,&quot;mobile_comunication_id&quot;:&quot;&quot;,&quot;is_email_verified&quot;:false,&quot;is_mobile_verified&quot;:false,&quot;city&quot;:&quot;&quot;,&quot;is_black_opted&quot;:false,&quot;is_double_black_opted&quot;:false,&quot;black_status&quot;:&quot;&quot;,&quot;double_black_status&quot;:&quot;&quot;,&quot;is_corporate&quot;:false,&quot;is_corporate_admin&quot;:false,&quot;is_corporate_verified&quot;:false,&quot;wallet_bonus_balance&quot;:0,&quot;is_wallted_blocked&quot;:false,&quot;corporate_organization_id&quot;:&quot;&quot;,&quot;is_corporate_policy_blocked&quot;:false,&quot;loyalty_status&quot;:0,&quot;prime_status&quot;:0,&quot;mobile_country_code&quot;:&quot;&quot;,&quot;wallet_cash_balance&quot;:0,&quot;wallet_balance_total&quot;:0,&quot;wallet_bonus_blocked_amount&quot;:0,&quot;wallet_bonus_expiry_amount&quot;:0,&quot;wallet_bonus_expiry_datetime&quot;:&quot;&quot;,&quot;wallet_cash_expiry_datetime&quot;:&quot;&quot;,&quot;wallet_cash_expiry_amount&quot;:0,&quot;is_gst_selected&quot;:false,&quot;gst_registration_number&quot;:&quot;&quot;,&quot;gst_registration_company&quot;:&quot;&quot;,&quot;hydra_segment_list&quot;:null,&quot;pricing_experiment_id&quot;:&quot;&quot;,&quot;ranking_experiment_id&quot;:&quot;&quot;},&quot;context&quot;:{&quot;topic_name&quot;:&quot;flights_server_logging&quot;,&quot;template_id&quot;:&quot;20817&quot;,&quot;is_columbus&quot;:false,&quot;correlation_id&quot;:&quot;e2cf2a95-7b9e-42d0-8209-986d33a35ac5&quot;,&quot;lob_name&quot;:&quot;&quot;,&quot;lob_code&quot;:&quot;B2C&quot;,&quot;server_timestamp&quot;:1688464987,&quot;client_timestamp&quot;:0,&quot;client_ip&quot;:&quot;2401:4900:1f36:2f92:1124:4018:d7ca:ee8a, 23.58.93.140, 23.63.110.13, 23.63.110.13&quot;,&quot;server_ip&quot;:&quot;169.254.172.2&quot;,&quot;domain&quot;:&quot;&quot;,&quot;server_timezone&quot;:&quot;GMT+0530&quot;,&quot;funnel_step&quot;:&quot;LISTING&quot;,&quot;activity_name&quot;:&quot;&quot;,&quot;page_name&quot;:&quot;listing&quot;,&quot;flight_lob_name&quot;:&quot;&quot;,&quot;api_version&quot;:&quot;&quot;,&quot;api_context_name&quot;:&quot;transporter&quot;,&quot;row_id&quot;:&quot;&quot;,&quot;api_name&quot;:&quot;SEARCH_STREAM_DT&quot;,&quot;flight_correlation_id&quot;:&quot;e2cf2a95-7b9e-42d0-8209-986d33a35ac5&quot;,&quot;flight_itinerary_id&quot;:&quot;&quot;,&quot;search_session_id&quot;:&quot;c2a213b8-ec94-42c7-9acd-954d70835e6c&quot;,&quot;session_mmt_id&quot;:&quot;&quot;,&quot;session_id&quot;:&quot;e2cf2a95-7b9e-42d0-8209-986d33a35ac5&quot;,&quot;whatsapp_session_key&quot;:&quot;&quot;,&quot;environment&quot;:&quot;&quot;,&quot;domain_sbu&quot;:&quot;india&quot;,&quot;domain_country&quot;:&quot;in&quot;,&quot;domain_currency&quot;:&quot;inr&quot;,&quot;domain_language&quot;:&quot;eng&quot;,&quot;flight_sort_basis&quot;:&quot;&quot;,&quot;adult_count&quot;:1,&quot;child_count&quot;:0,&quot;infant_count&quot;:0,&quot;source&quot;:&quot;mmt&quot;},&quot;search_context&quot;:{&quot;adult&quot;:1,&quot;child&quot;:0,&quot;infant&quot;:0,&quot;cabinClass&quot;:&quot;&quot;,&quot;sectorList&quot;:null,&quot;totalFare&quot;:0,&quot;it&quot;:[{&quot;from&quot;:&quot;DEL&quot;,&quot;to&quot;:&quot;CCU&quot;,&quot;depDate&quot;:&quot;2023-07-05&quot;,&quot;classname&quot;:&quot;&quot;,&quot;isAltDate&quot;:false}],&quot;tripType&quot;:&quot;&quot;,&quot;tripDuration&quot;:0,&quot;funnelType&quot;:&quot;&quot;}},&quot;event&quot;:{&quot;action_name&quot;:&quot;load_page&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">flights/event-log?crId=c2a213b8-ec94-42c7-9acd-954d70835e6c</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Request-Data-Encoding" elementType="Header">
                  <stringProp name="Header.name">Request-Data-Encoding</stringProp>
                  <stringProp name="Header.value">json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sub-Type" elementType="Header">
                  <stringProp name="Header.name">Sub-Type</stringProp>
                  <stringProp name="Header.value">common</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Log-Source" elementType="Header">
                  <stringProp name="Header.name">Log-Source</stringProp>
                  <stringProp name="Header.value">mmt_client</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[32]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/postSearch?crId=c2a213b8-ec94-42c7-9acd-954d70835e6c&amp;region=in&amp;currency=inr&amp;language=eng&amp;cmpId=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="crId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crId</stringProp>
                  <stringProp name="Argument.value">c2a213b8-ec94-42c7-9acd-954d70835e6c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cmpId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cmpId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/postSearch</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">ab,access-control-allow-credentials,app-ver,auuid,cache-control,cmp-id,content-type,currency,device-id,domain,flow,language,mcid,mmt-auth,os,pfm,profile-type,region,source,src,x-flt,x-user-cc,x-user-ip,x-user-rc</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[33]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/fareCalendar?crId=c2a213b8-ec94-42c7-9acd-954d70835e6c&amp;it=DEL-CCU-20230705&amp;lcl=en&amp;cur=INR&amp;creditShellInfo=&amp;region=in&amp;currency=inr&amp;language=eng&amp;cmpId=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="cur" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cur</stringProp>
                  <stringProp name="Argument.value">INR</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="crId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">crId</stringProp>
                  <stringProp name="Argument.value">c2a213b8-ec94-42c7-9acd-954d70835e6c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="lcl" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">lcl</stringProp>
                  <stringProp name="Argument.value">en</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cmpId" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">cmpId</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">currency</stringProp>
                  <stringProp name="Argument.value">inr</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="language" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">language</stringProp>
                  <stringProp name="Argument.value">eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="it" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">it</stringProp>
                  <stringProp name="Argument.value">DEL-CCU-20230705</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="region" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">region</stringProp>
                  <stringProp name="Argument.value">in</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="creditShellInfo" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.name">creditShellInfo</stringProp>
                  <stringProp name="Argument.value"></stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/fareCalendar</stringProp>
            <stringProp name="HTTPSampler.method">GET</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="src" elementType="Header">
                  <stringProp name="Header.name">src</stringProp>
                  <stringProp name="Header.value">mmt</stringProp>
                </elementProp>
                <elementProp name="mcid" elementType="Header">
                  <stringProp name="Header.name">mcid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="app-ver" elementType="Header">
                  <stringProp name="Header.name">app-ver</stringProp>
                  <stringProp name="Header.value">1.0.0</stringProp>
                </elementProp>
                <elementProp name="x-user-ip" elementType="Header">
                  <stringProp name="Header.name">x-user-ip</stringProp>
                  <stringProp name="Header.value">2401:4900:1f36:2f92:1124:4018:d7ca:ee8a</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="pfm" elementType="Header">
                  <stringProp name="Header.name">pfm</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="device-id" elementType="Header">
                  <stringProp name="Header.name">device-id</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="x-flt" elementType="Header">
                  <stringProp name="Header.name">x-flt</stringProp>
                  <stringProp name="Header.value">eyJjIjoiRSIsInAiOiJBLTFfQy0wX0ktMCIsInQiOiIiLCJzIjoiREVMLUNDVS0yMDIzMDcwNSJ9</stringProp>
                </elementProp>
                <elementProp name="flow" elementType="Header">
                  <stringProp name="Header.name">flow</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="os" elementType="Header">
                  <stringProp name="Header.name">os</stringProp>
                  <stringProp name="Header.value">Linux</stringProp>
                </elementProp>
                <elementProp name="cmp-id" elementType="Header">
                  <stringProp name="Header.name">cmp-id</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="ab" elementType="Header">
                  <stringProp name="Header.name">ab</stringProp>
                  <stringProp name="Header.value">{&quot;INSGHT&quot;:0,&quot;LVS&quot;:0,&quot;STP&quot;:1,&quot;SimpF&quot;:0,&quot;BFFL&quot;:0,&quot;MMTFF&quot;:0,&quot;BSG&quot;:0,&quot;LFT&quot;:0,&quot;MFEP&quot;:0,&quot;DGF&quot;:0,&quot;BCG&quot;:0,&quot;MMTB&quot;:0,&quot;IFFLK&quot;:1,&quot;flightInfoOptionSequenceKey&quot;:&quot;FNO&quot;,&quot;DGT&quot;:3,&quot;IFPLK_DP_MAB&quot;:5,&quot;IFFLKOWRT&quot;:0,&quot;SED&quot;:0,&quot;RTSC&quot;:0,&quot;ZCA&quot;:0,&quot;ZCD&quot;:1,&quot;SEM&quot;:0,&quot;HCP2&quot;:0,&quot;ZCE&quot;:1,&quot;GRPC&quot;:1,&quot;NLA&quot;:0,&quot;FLK&quot;:1,&quot;RTI&quot;:1,&quot;dgi&quot;:0,&quot;IRR&quot;:0,&quot;RTM&quot;:0,&quot;ZCS&quot;:1,&quot;HPR&quot;:0,&quot;FLS&quot;:1,&quot;RTS&quot;:1,&quot;FFBEN&quot;:0,&quot;SFN&quot;:0,&quot;FMB&quot;:1,&quot;QBK&quot;:0,&quot;myPUAE&quot;:false,&quot;ISF&quot;:0,&quot;meff&quot;:1,&quot;DZC&quot;:0,&quot;mbpa&quot;:0,&quot;MMTFAB&quot;:1,&quot;QCO&quot;:0,&quot;mmt.app.flight.default.listing.default.TIF&quot;:0,&quot;TP&quot;:0,&quot;PRB&quot;:0,&quot;PRE&quot;:2,&quot;PRG&quot;:0,&quot;mbrta&quot;:1,&quot;IFFLKMC&quot;:0,&quot;pwa_login_type&quot;:0,&quot;NDAST&quot;:0,&quot;ITT&quot;:1,&quot;PRO&quot;:0,&quot;VOIDIF&quot;:0,&quot;HBF&quot;:0,&quot;FLKT&quot;:0,&quot;PBC&quot;:0,&quot;mstp&quot;:1,&quot;mmt.default.flight.default.default.default.ZC_MMT_PE&quot;:2,&quot;SHR&quot;:0,&quot;CYT&quot;:0,&quot;CID&quot;:1,&quot;bottomsheet_onetap_pwa&quot;:&quot;1&quot;,&quot;mras&quot;:1,&quot;mbrt&quot;:1,&quot;dd_exp_intl_meta&quot;:&quot;mab&quot;,&quot;FFPers&quot;:1,&quot;mypflight_commission&quot;:false,&quot;mctw&quot;:0,&quot;INSBTM&quot;:0,&quot;UMF&quot;:0,&quot;MMTSPLIF&quot;:0,&quot;HCP&quot;:1,&quot;SIM&quot;:0,&quot;PTA&quot;:0,&quot;INSV3&quot;:1,&quot;PTF&quot;:0,&quot;AFI&quot;:0,&quot;mctwb&quot;:1,&quot;IFSort&quot;:0,&quot;STFR&quot;:1,&quot;mrtp&quot;:0,&quot;LLS&quot;:1,&quot;PDF&quot;:1,&quot;MFMD&quot;:1,&quot;BIRT&quot;:0,&quot;IFS&quot;:0,&quot;flightPageLoadTracking&quot;:0,&quot;GSF&quot;:0,&quot;msfn&quot;:1,&quot;QFT&quot;:1,&quot;MOB&quot;:0,&quot;INSTP&quot;:0,&quot;BII&quot;:0,&quot;ADDONM&quot;:0,&quot;FAA&quot;:0,&quot;IFFLKOW&quot;:0,&quot;TMI&quot;:1,&quot;IIND&quot;:0,&quot;FAO&quot;:0,&quot;marc&quot;:0,&quot;FAT&quot;:0,&quot;PET&quot;:0,&quot;OCR&quot;:0,&quot;WCM&quot;:1,&quot;REUSABLE&quot;:0,&quot;PCRDF&quot;:0,&quot;PFA&quot;:1,&quot;OTP&quot;:0,&quot;mnthn&quot;:false,&quot;CLS&quot;:0,&quot;mmt.app.flight.default.review.default.ZCP&quot;:0,&quot;MMT_PERS&quot;:204,&quot;PFI&quot;:1,&quot;ZC_Server_Side_experiment1&quot;:1,&quot;CHMRK&quot;:0,&quot;FSA&quot;:3,&quot;PFL&quot;:0,&quot;PWA&quot;:0,&quot;PFP&quot;:1,&quot;DDDF&quot;:0,&quot;mema&quot;:1,&quot;NSF&quot;:0,&quot;mbfc&quot;:1,&quot;LISTN&quot;:0,&quot;PLK_DP_MAB&quot;:1,&quot;BPCE&quot;:0,&quot;FCN&quot;:false,&quot;CABS&quot;:1,&quot;myPartner_b2b_homepage&quot;:false,&quot;macs&quot;:0,&quot;CABF&quot;:0,&quot;mqc&quot;:0,&quot;mics&quot;:0,&quot;travellerScan&quot;:0,&quot;NTD&quot;:0,&quot;mmt.default.flight.default.default.default.mecr&quot;:1,&quot;wsmn&quot;:0,&quot;SNH&quot;:0,&quot;LPS&quot;:0,&quot;MRT&quot;:0,&quot;ffmove&quot;:0,&quot;ZCDS&quot;:0,&quot;IFMC&quot;:0,&quot;IFFLKRT&quot;:0,&quot;BNPL&quot;:1,&quot;mal&quot;:1,&quot;MICROSOFTFES&quot;:0,&quot;mgsf&quot;:1,&quot;ZC_Client_Side_exp&quot;:false,&quot;NUG&quot;:0,&quot;ALTFLT&quot;:0,&quot;FUS&quot;:1,&quot;CURDT&quot;:0,&quot;COU&quot;:0,&quot;USF&quot;:0,&quot;MCC&quot;:1,&quot;PIF&quot;:1,&quot;CYTN&quot;:0,&quot;ALTFLTCORP&quot;:0,&quot;BAGR&quot;:0,&quot;CPA&quot;:0,&quot;SOR&quot;:0,&quot;msa&quot;:1,&quot;ALF&quot;:0,&quot;MCS&quot;:0,&quot;REUSABLERT&quot;:0,&quot;msf&quot;:1,&quot;DDIF&quot;:0,&quot;AUTOSG&quot;:1,&quot;testAB&quot;:0,&quot;SPA&quot;:1,&quot;CPS&quot;:1,&quot;cnpn&quot;:1,&quot;dd_exp_myp&quot;:&quot;peshkash&quot;,&quot;RNP&quot;:5,&quot;DSF&quot;:0,&quot;AMD&quot;:0,&quot;AME&quot;:0,&quot;IMB&quot;:0,&quot;mestf&quot;:0,&quot;BNTD&quot;:1,&quot;WNTI&quot;:0,&quot;TSC&quot;:0,&quot;trvlr&quot;:true,&quot;CAD&quot;:1,&quot;GI_PLK&quot;:0,&quot;bntdp&quot;:0,&quot;incredibleindiacommon&quot;:&quot;IICN&quot;,&quot;IMS&quot;:0,&quot;mbfsme&quot;:1,&quot;mbit&quot;:0,&quot;mdl&quot;:1,&quot;DTD&quot;:2,&quot;ANC&quot;:0,&quot;IFPLK&quot;:1,&quot;mestm&quot;:0,&quot;HLD&quot;:0,&quot;ANP&quot;:1,&quot;ALTF&quot;:0,&quot;cheaperFlightsDesktopDom&quot;:1,&quot;DTT&quot;:1,&quot;ANU&quot;:0,&quot;MFA&quot;:0,&quot;INP&quot;:1,&quot;MFD&quot;:0,&quot;MFC&quot;:1,&quot;CFAR&quot;:1,&quot;mecj&quot;:1,&quot;INT&quot;:1,&quot;PLK&quot;:1,&quot;INS&quot;:0,&quot;MFEA&quot;:0,&quot;MFI&quot;:0,&quot;SRQ&quot;:6,&quot;AOA&quot;:0,&quot;SRT&quot;:1,&quot;PLP&quot;:1,&quot;AOD&quot;:0,&quot;PLS&quot;:1,&quot;MFP&quot;:1,&quot;NHP&quot;:0,&quot;MFEI&quot;:0,&quot;AOI&quot;:0,&quot;MFED&quot;:0,&quot;mntf&quot;:1,&quot;AOP&quot;:1,&quot;BAA&quot;:0,&quot;RecoAddonsExp&quot;:0,&quot;AGGRNEW&quot;:0,&quot;MYPRTA&quot;:0,&quot;CFBR&quot;:1,&quot;MFTD&quot;:0,&quot;BAN&quot;:0,&quot;CANCT&quot;:0,&quot;INSNEW&quot;:0,&quot;mnss&quot;:0,&quot;GYOLO&quot;:0,&quot;APD&quot;:0,&quot;dd_exp_name&quot;:&quot;mab&quot;,&quot;MERT&quot;:1,&quot;EMI&quot;:0,&quot;IPS&quot;:0,&quot;myp_multicity&quot;:false,&quot;BRB&quot;:0}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="Header">
                  <stringProp name="Header.name">currency</stringProp>
                  <stringProp name="Header.value">inr</stringProp>
                </elementProp>
                <elementProp name="x-user-rc" elementType="Header">
                  <stringProp name="Header.name">x-user-rc</stringProp>
                  <stringProp name="Header.value">NEWDELHI</stringProp>
                </elementProp>
                <elementProp name="domain" elementType="Header">
                  <stringProp name="Header.name">domain</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="profile-type" elementType="Header">
                  <stringProp name="Header.name">profile-type</stringProp>
                  <stringProp name="Header.value">PERSONAL</stringProp>
                </elementProp>
                <elementProp name="source" elementType="Header">
                  <stringProp name="Header.name">source</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="mmt-auth" elementType="Header">
                  <stringProp name="Header.name">mmt-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Credentials" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Credentials</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="x-user-cc" elementType="Header">
                  <stringProp name="Header.name">x-user-cc</stringProp>
                  <stringProp name="Header.value">IN</stringProp>
                </elementProp>
                <elementProp name="auuid" elementType="Header">
                  <stringProp name="Header.name">auuid</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[34]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://flights-cb.makemytrip.com/api/postSearch?crId=c2a213b8-ec94-42c7-9acd-954d70835e6c&amp;region=in&amp;currency=inr&amp;language=eng&amp;cmpId=" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;pax&quot;:&quot;A-1_C-0_I-0&quot;,&quot;cc&quot;:&quot;E&quot;,&quot;src&quot;:&quot;&quot;,&quot;crId&quot;:&quot;c2a213b8-ec94-42c7-9acd-954d70835e6c&quot;,&quot;pfm&quot;:&quot;DESKTOP&quot;,&quot;cur&quot;:&quot;INR&quot;,&quot;shd&quot;:true,&quot;isGrpBkg&quot;:false,&quot;dfs&quot;:0,&quot;it&quot;:&quot;DEL-CCU-20230705&quot;,&quot;sortBy&quot;:&quot;rhino&quot;,&quot;apiCallTimestamp&quot;:1688464988319,&quot;creditShellInfo&quot;:&quot;&quot;,&quot;forwardFlowRequired&quot;:true,&quot;rkeys&quot;:[&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:22_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:22_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:22_4&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:22_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:22_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:53_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:53_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:53_4&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:53_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:53_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:39_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:39_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:39_4&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:39_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:39_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:3_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:3_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:3_4&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:3_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:3_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:31_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:31_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:31_4&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:31_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:31_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:36_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:36_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:36_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:36_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:16_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:16_4&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:16_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:16_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:16_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:33_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:33_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:40_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:40_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:43_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:43_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:48_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:48_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:32_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:32_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:32_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:32_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:8_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:8_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:8_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:8_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:41_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:41_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:41_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:41_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:4_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:4_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:4_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:4_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:10_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:10_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:6_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:2_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:2_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:2_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:2_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:46_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:46_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:46_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:46_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:9_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:9_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:9_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:9_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:35_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:35_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:35_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:35_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:51_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:51_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:51_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:20_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:20_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:20_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:34_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:34_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:34_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:13_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:13_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:13_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:23_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:23_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:45_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:45_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:21_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:21_4&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:21_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:21_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:21_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:18_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:18_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:18_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:26_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:26_4&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:26_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:26_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:26_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:47_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:47_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:38_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:38_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:38_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:17_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:17_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:17_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:37_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:37_4&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:37_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:37_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:37_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:25_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:25_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:25_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:19_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:19_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:11_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:11_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:11_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:0_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:0_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:0_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:29_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:29_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:29_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:14_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:14_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:12_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:12_3&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:12_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:12_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:1_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:1_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:1_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:42_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:42_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:42_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:7_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:7_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:7_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:24_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:52_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:52_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:52_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:50_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:50_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:44_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:44_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:44_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:28_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:30_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:15_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:15_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:15_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:5_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:5_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:5_2&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:27_0&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:27_1&quot;,&quot;RKEY:7eb913a2-7484-49d6-9c2f-50823563a0cb:49_0&quot;],&quot;pageType&quot;:&quot;LISTING&quot;,&quot;lcl&quot;:&quot;en&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_3}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">api/postSearch?crId=c2a213b8-ec94-42c7-9acd-954d70835e6c&amp;region=in&amp;currency=inr&amp;language=eng&amp;cmpId=</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="src" elementType="Header">
                  <stringProp name="Header.name">src</stringProp>
                  <stringProp name="Header.value">mmt</stringProp>
                </elementProp>
                <elementProp name="mcid" elementType="Header">
                  <stringProp name="Header.name">mcid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="app-ver" elementType="Header">
                  <stringProp name="Header.name">app-ver</stringProp>
                  <stringProp name="Header.value">1.0.0</stringProp>
                </elementProp>
                <elementProp name="x-user-ip" elementType="Header">
                  <stringProp name="Header.name">x-user-ip</stringProp>
                  <stringProp name="Header.value">2401:4900:1f36:2f92:1124:4018:d7ca:ee8a</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="pfm" elementType="Header">
                  <stringProp name="Header.name">pfm</stringProp>
                  <stringProp name="Header.value">DESKTOP</stringProp>
                </elementProp>
                <elementProp name="device-id" elementType="Header">
                  <stringProp name="Header.name">device-id</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="x-flt" elementType="Header">
                  <stringProp name="Header.name">x-flt</stringProp>
                  <stringProp name="Header.value">eyJjIjoiRSIsInAiOiJBLTFfQy0wX0ktMCIsInQiOiIiLCJzIjoiREVMLUNDVS0yMDIzMDcwNSJ9</stringProp>
                </elementProp>
                <elementProp name="flow" elementType="Header">
                  <stringProp name="Header.name">flow</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="os" elementType="Header">
                  <stringProp name="Header.name">os</stringProp>
                  <stringProp name="Header.value">Linux</stringProp>
                </elementProp>
                <elementProp name="cmp-id" elementType="Header">
                  <stringProp name="Header.name">cmp-id</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="ab" elementType="Header">
                  <stringProp name="Header.name">ab</stringProp>
                  <stringProp name="Header.value">{&quot;INSGHT&quot;:0,&quot;LVS&quot;:0,&quot;STP&quot;:1,&quot;SimpF&quot;:0,&quot;BFFL&quot;:0,&quot;MMTFF&quot;:0,&quot;BSG&quot;:0,&quot;LFT&quot;:0,&quot;MFEP&quot;:0,&quot;DGF&quot;:0,&quot;BCG&quot;:0,&quot;MMTB&quot;:0,&quot;IFFLK&quot;:1,&quot;flightInfoOptionSequenceKey&quot;:&quot;FNO&quot;,&quot;DGT&quot;:3,&quot;IFPLK_DP_MAB&quot;:5,&quot;IFFLKOWRT&quot;:0,&quot;SED&quot;:0,&quot;RTSC&quot;:0,&quot;ZCA&quot;:0,&quot;ZCD&quot;:1,&quot;SEM&quot;:0,&quot;HCP2&quot;:0,&quot;ZCE&quot;:1,&quot;GRPC&quot;:1,&quot;NLA&quot;:0,&quot;FLK&quot;:1,&quot;RTI&quot;:1,&quot;dgi&quot;:0,&quot;IRR&quot;:0,&quot;RTM&quot;:0,&quot;ZCS&quot;:1,&quot;HPR&quot;:0,&quot;FLS&quot;:1,&quot;RTS&quot;:1,&quot;FFBEN&quot;:0,&quot;SFN&quot;:0,&quot;FMB&quot;:1,&quot;QBK&quot;:0,&quot;myPUAE&quot;:false,&quot;ISF&quot;:0,&quot;meff&quot;:1,&quot;DZC&quot;:0,&quot;mbpa&quot;:0,&quot;MMTFAB&quot;:1,&quot;QCO&quot;:0,&quot;mmt.app.flight.default.listing.default.TIF&quot;:0,&quot;TP&quot;:0,&quot;PRB&quot;:0,&quot;PRE&quot;:2,&quot;PRG&quot;:0,&quot;mbrta&quot;:1,&quot;IFFLKMC&quot;:0,&quot;pwa_login_type&quot;:0,&quot;NDAST&quot;:0,&quot;ITT&quot;:1,&quot;PRO&quot;:0,&quot;VOIDIF&quot;:0,&quot;HBF&quot;:0,&quot;FLKT&quot;:0,&quot;PBC&quot;:0,&quot;mstp&quot;:1,&quot;mmt.default.flight.default.default.default.ZC_MMT_PE&quot;:2,&quot;SHR&quot;:0,&quot;CYT&quot;:0,&quot;CID&quot;:1,&quot;bottomsheet_onetap_pwa&quot;:&quot;1&quot;,&quot;mras&quot;:1,&quot;mbrt&quot;:1,&quot;dd_exp_intl_meta&quot;:&quot;mab&quot;,&quot;FFPers&quot;:1,&quot;mypflight_commission&quot;:false,&quot;mctw&quot;:0,&quot;INSBTM&quot;:0,&quot;UMF&quot;:0,&quot;MMTSPLIF&quot;:0,&quot;HCP&quot;:1,&quot;SIM&quot;:0,&quot;PTA&quot;:0,&quot;INSV3&quot;:1,&quot;PTF&quot;:0,&quot;AFI&quot;:0,&quot;mctwb&quot;:1,&quot;IFSort&quot;:0,&quot;STFR&quot;:1,&quot;mrtp&quot;:0,&quot;LLS&quot;:1,&quot;PDF&quot;:1,&quot;MFMD&quot;:1,&quot;BIRT&quot;:0,&quot;IFS&quot;:0,&quot;flightPageLoadTracking&quot;:0,&quot;GSF&quot;:0,&quot;msfn&quot;:1,&quot;QFT&quot;:1,&quot;MOB&quot;:0,&quot;INSTP&quot;:0,&quot;BII&quot;:0,&quot;ADDONM&quot;:0,&quot;FAA&quot;:0,&quot;IFFLKOW&quot;:0,&quot;TMI&quot;:1,&quot;IIND&quot;:0,&quot;FAO&quot;:0,&quot;marc&quot;:0,&quot;FAT&quot;:0,&quot;PET&quot;:0,&quot;OCR&quot;:0,&quot;WCM&quot;:1,&quot;REUSABLE&quot;:0,&quot;PCRDF&quot;:0,&quot;PFA&quot;:1,&quot;OTP&quot;:0,&quot;mnthn&quot;:false,&quot;CLS&quot;:0,&quot;mmt.app.flight.default.review.default.ZCP&quot;:0,&quot;MMT_PERS&quot;:204,&quot;PFI&quot;:1,&quot;ZC_Server_Side_experiment1&quot;:1,&quot;CHMRK&quot;:0,&quot;FSA&quot;:3,&quot;PFL&quot;:0,&quot;PWA&quot;:0,&quot;PFP&quot;:1,&quot;DDDF&quot;:0,&quot;mema&quot;:1,&quot;NSF&quot;:0,&quot;mbfc&quot;:1,&quot;LISTN&quot;:0,&quot;PLK_DP_MAB&quot;:1,&quot;BPCE&quot;:0,&quot;FCN&quot;:false,&quot;CABS&quot;:1,&quot;myPartner_b2b_homepage&quot;:false,&quot;macs&quot;:0,&quot;CABF&quot;:0,&quot;mqc&quot;:0,&quot;mics&quot;:0,&quot;travellerScan&quot;:0,&quot;NTD&quot;:0,&quot;mmt.default.flight.default.default.default.mecr&quot;:1,&quot;wsmn&quot;:0,&quot;SNH&quot;:0,&quot;LPS&quot;:0,&quot;MRT&quot;:0,&quot;ffmove&quot;:0,&quot;ZCDS&quot;:0,&quot;IFMC&quot;:0,&quot;IFFLKRT&quot;:0,&quot;BNPL&quot;:1,&quot;mal&quot;:1,&quot;MICROSOFTFES&quot;:0,&quot;mgsf&quot;:1,&quot;ZC_Client_Side_exp&quot;:false,&quot;NUG&quot;:0,&quot;ALTFLT&quot;:0,&quot;FUS&quot;:1,&quot;CURDT&quot;:0,&quot;COU&quot;:0,&quot;USF&quot;:0,&quot;MCC&quot;:1,&quot;PIF&quot;:1,&quot;CYTN&quot;:0,&quot;ALTFLTCORP&quot;:0,&quot;BAGR&quot;:0,&quot;CPA&quot;:0,&quot;SOR&quot;:0,&quot;msa&quot;:1,&quot;ALF&quot;:0,&quot;MCS&quot;:0,&quot;REUSABLERT&quot;:0,&quot;msf&quot;:1,&quot;DDIF&quot;:0,&quot;AUTOSG&quot;:1,&quot;testAB&quot;:0,&quot;SPA&quot;:1,&quot;CPS&quot;:1,&quot;cnpn&quot;:1,&quot;dd_exp_myp&quot;:&quot;peshkash&quot;,&quot;RNP&quot;:5,&quot;DSF&quot;:0,&quot;AMD&quot;:0,&quot;AME&quot;:0,&quot;IMB&quot;:0,&quot;mestf&quot;:0,&quot;BNTD&quot;:1,&quot;WNTI&quot;:0,&quot;TSC&quot;:0,&quot;trvlr&quot;:true,&quot;CAD&quot;:1,&quot;GI_PLK&quot;:0,&quot;bntdp&quot;:0,&quot;incredibleindiacommon&quot;:&quot;IICN&quot;,&quot;IMS&quot;:0,&quot;mbfsme&quot;:1,&quot;mbit&quot;:0,&quot;mdl&quot;:1,&quot;DTD&quot;:2,&quot;ANC&quot;:0,&quot;IFPLK&quot;:1,&quot;mestm&quot;:0,&quot;HLD&quot;:0,&quot;ANP&quot;:1,&quot;ALTF&quot;:0,&quot;cheaperFlightsDesktopDom&quot;:1,&quot;DTT&quot;:1,&quot;ANU&quot;:0,&quot;MFA&quot;:0,&quot;INP&quot;:1,&quot;MFD&quot;:0,&quot;MFC&quot;:1,&quot;CFAR&quot;:1,&quot;mecj&quot;:1,&quot;INT&quot;:1,&quot;PLK&quot;:1,&quot;INS&quot;:0,&quot;MFEA&quot;:0,&quot;MFI&quot;:0,&quot;SRQ&quot;:6,&quot;AOA&quot;:0,&quot;SRT&quot;:1,&quot;PLP&quot;:1,&quot;AOD&quot;:0,&quot;PLS&quot;:1,&quot;MFP&quot;:1,&quot;NHP&quot;:0,&quot;MFEI&quot;:0,&quot;AOI&quot;:0,&quot;MFED&quot;:0,&quot;mntf&quot;:1,&quot;AOP&quot;:1,&quot;BAA&quot;:0,&quot;RecoAddonsExp&quot;:0,&quot;AGGRNEW&quot;:0,&quot;MYPRTA&quot;:0,&quot;CFBR&quot;:1,&quot;MFTD&quot;:0,&quot;BAN&quot;:0,&quot;CANCT&quot;:0,&quot;INSNEW&quot;:0,&quot;mnss&quot;:0,&quot;GYOLO&quot;:0,&quot;APD&quot;:0,&quot;dd_exp_name&quot;:&quot;mab&quot;,&quot;MERT&quot;:1,&quot;EMI&quot;:0,&quot;IPS&quot;:0,&quot;myp_multicity&quot;:false,&quot;BRB&quot;:0}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="currency" elementType="Header">
                  <stringProp name="Header.name">currency</stringProp>
                  <stringProp name="Header.value">inr</stringProp>
                </elementProp>
                <elementProp name="x-user-rc" elementType="Header">
                  <stringProp name="Header.name">x-user-rc</stringProp>
                  <stringProp name="Header.value">NEWDELHI</stringProp>
                </elementProp>
                <elementProp name="domain" elementType="Header">
                  <stringProp name="Header.name">domain</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="profile-type" elementType="Header">
                  <stringProp name="Header.name">profile-type</stringProp>
                  <stringProp name="Header.value">PERSONAL</stringProp>
                </elementProp>
                <elementProp name="source" elementType="Header">
                  <stringProp name="Header.name">source</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">in</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="mmt-auth" elementType="Header">
                  <stringProp name="Header.name">mmt-auth</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Cache-Control" elementType="Header">
                  <stringProp name="Header.name">Cache-Control</stringProp>
                  <stringProp name="Header.value">no-cache</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Allow-Credentials" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Allow-Credentials</stringProp>
                  <stringProp name="Header.value">true</stringProp>
                </elementProp>
                <elementProp name="x-user-cc" elementType="Header">
                  <stringProp name="Header.name">x-user-cc</stringProp>
                  <stringProp name="Header.value">IN</stringProp>
                </elementProp>
                <elementProp name="auuid" elementType="Header">
                  <stringProp name="Header.name">auuid</stringProp>
                  <stringProp name="Header.value"></stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[35]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://pdt.makemytrip.com/fs/w" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">fs/w</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">content-type,deviceid,request-data-encoding</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[36]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://pdt.makemytrip.com/fs/w" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">[{&quot;column&quot;:&quot;flights&quot;,&quot;datasetName&quot;:&quot;recent_searches_test&quot;,&quot;value&quot;:{&quot;searchContext&quot;:{&quot;language&quot;:&quot;eng&quot;,&quot;region&quot;:&quot;in&quot;,&quot;profile&quot;:&quot;PERSONAL&quot;,&quot;timestamp&quot;:1688464987301,&quot;from&quot;:{&quot;countryCode&quot;:&quot;IN&quot;,&quot;cityName&quot;:&quot;New Delhi&quot;,&quot;lobCity&quot;:&quot;DEL&quot;,&quot;lobCountry&quot;:&quot;India&quot;},&quot;journeyType&quot;:&quot;OW&quot;,&quot;lob&quot;:&quot;flights&quot;,&quot;pax&quot;:[{&quot;details&quot;:{&quot;adult&quot;:{&quot;count&quot;:1},&quot;infant&quot;:{&quot;count&quot;:0},&quot;child&quot;:{&quot;count&quot;:0}},&quot;count&quot;:1}],&quot;lobCategory&quot;:&quot;DF&quot;,&quot;fromDateTime&quot;:{&quot;str&quot;:&quot;05-07-2023 00:00:00&quot;,&quot;ts&quot;:1688515200000,&quot;zone&quot;:&quot;Asia/Kolkata&quot;},&quot;fareFamily&quot;:&quot;&quot;,&quot;to&quot;:{&quot;countryCode&quot;:&quot;IN&quot;,&quot;cityName&quot;:&quot;Kolkata&quot;,&quot;lobCity&quot;:&quot;CCU&quot;,&quot;lobCountry&quot;:&quot;India&quot;},&quot;cabinClass&quot;:&quot;E&quot;,&quot;meta&quot;:{&quot;deeplink&quot;:&quot;https://www.makemytrip.com/flight/search?tripType=OW&amp;itinerary=DEL-CCU-05/07/2023&amp;paxType=A-1_C-0_I-0&amp;cabinClass=E&amp;forwardFlowRequired=true&amp;intl=false&amp;ssr=false&quot;,&quot;universalText&quot;:&quot;New Delhi to Kolkata flights for 5 Jul&quot;},&quot;toDateTime&quot;:null,&quot;fromDateString&quot;:&quot;Wed, 5 Jul 23&quot;}}}]</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_5}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">fs/w</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="deviceid" elementType="Header">
                  <stringProp name="Header.name">deviceid</stringProp>
                  <stringProp name="Header.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Request-Data-Encoding" elementType="Header">
                  <stringProp name="Header.name">Request-Data-Encoding</stringProp>
                  <stringProp name="Header.value">json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[37]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://metrics.makemytrip.com/b/ss/mmtprod/1/JS-2.14.0/s94007128675370" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v6</stringProp>
                  <stringProp name="Argument.value">D=c6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c75" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c75</stringProp>
                  <stringProp name="Argument.value">25% to 50%</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v7" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v7</stringProp>
                  <stringProp name="Argument.value">D=c7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c74" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c74</stringProp>
                  <stringProp name="Argument.value">25% to 50%</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v8" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v8</stringProp>
                  <stringProp name="Argument.value">D=c8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v9" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v9</stringProp>
                  <stringProp name="Argument.value">D=c9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c37" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c37</stringProp>
                  <stringProp name="Argument.value">VisitorAPI Present</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c39" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c39</stringProp>
                  <stringProp name="Argument.value">Guest</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c38" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c38</stringProp>
                  <stringProp name="Argument.value">81517719884616203993465981471533567124</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aamlh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aamlh</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageName</stringProp>
                  <stringProp name="Argument.value">funnel:domestic flights:listing</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AQB" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AQB</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v52" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v52</stringProp>
                  <stringProp name="Argument.value">D=v0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v51" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v51</stringProp>
                  <stringProp name="Argument.value">D=v0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v10" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v10</stringProp>
                  <stringProp name="Argument.value">D=c10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v54" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v54</stringProp>
                  <stringProp name="Argument.value">D=v0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fpCookieDomainPeriods" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fpCookieDomainPeriods</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v53" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v53</stringProp>
                  <stringProp name="Argument.value">D=v0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AQE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AQE</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v12" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v12</stringProp>
                  <stringProp name="Argument.value">D=c12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v56" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v56</stringProp>
                  <stringProp name="Argument.value">D=v0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v11" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v11</stringProp>
                  <stringProp name="Argument.value">D=c11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v55" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v55</stringProp>
                  <stringProp name="Argument.value">D=v0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aamb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aamb</stringProp>
                  <stringProp name="Argument.value">RKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v58" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v58</stringProp>
                  <stringProp name="Argument.value">c2a213b8-ec94-42c7-9acd-954d70835e6c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v13" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v13</stringProp>
                  <stringProp name="Argument.value">D=c13</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v57" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v57</stringProp>
                  <stringProp name="Argument.value">D=v0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v15" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v15</stringProp>
                  <stringProp name="Argument.value">funnel:domestic flights:listing</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v59" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v59</stringProp>
                  <stringProp name="Argument.value">58h|4ii|3g6|5cx|4p8|4po|4sa|50h|50j|51v|52d|3g6|4p8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v18" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v18</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="events" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">events</stringProp>
                  <stringProp name="Argument.value">scOpen,event11,event27,event23,prodView</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v19" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v19</stringProp>
                  <stringProp name="Argument.value">O</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c41" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c41</stringProp>
                  <stringProp name="Argument.value">New|Repeat|Repeat|Repeat</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c43" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c43</stringProp>
                  <stringProp name="Argument.value">54/54</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cdp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cdp</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c2</stringProp>
                  <stringProp name="Argument.value">India-India</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c4" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c4</stringProp>
                  <stringProp name="Argument.value">05:07:2023</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c6</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c7" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c7</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c8" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c8</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c9" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c9</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v23" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v23</stringProp>
                  <stringProp name="Argument.value">D=c23</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v24" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v24</stringProp>
                  <stringProp name="Argument.value">D=c24</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v27" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v27</stringProp>
                  <stringProp name="Argument.value">D=c27</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v26" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v26</stringProp>
                  <stringProp name="Argument.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v28" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v28</stringProp>
                  <stringProp name="Argument.value">169.254.172.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c11" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c11</stringProp>
                  <stringProp name="Argument.value">1A|0C|0I|1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c10" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c10</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c54" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c54</stringProp>
                  <stringProp name="Argument.value">discounts_login_banner_shown~data_packet_1_FIRST_1sec</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c13" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c13</stringProp>
                  <stringProp name="Argument.value">54</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c57" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c57</stringProp>
                  <stringProp name="Argument.value">6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ns" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ns</stringProp>
                  <stringProp name="Argument.value">makemytrip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c12" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c12</stringProp>
                  <stringProp name="Argument.value">OW|E</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c56" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c56</stringProp>
                  <stringProp name="Argument.value">More than 7 days</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bh</stringProp>
                  <stringProp name="Argument.value">637</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">81517719884616203993465981471533567124</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bw</stringProp>
                  <stringProp name="Argument.value">1360</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v37" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v37</stringProp>
                  <stringProp name="Argument.value">domain_sbu:india|domain_country:in|domain_currency:inr|domain_language:eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v39" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v39</stringProp>
                  <stringProp name="Argument.value">Guest</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mcorgid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mcorgid</stringProp>
                  <stringProp name="Argument.value">1E0D22CE527845790A490D4D@AdobeOrg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ce</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">24</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c24" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c24</stringProp>
                  <stringProp name="Argument.value">domestic flights</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ch</stringProp>
                  <stringProp name="Argument.value">domestic flights funnel</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c23" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c23</stringProp>
                  <stringProp name="Argument.value">landing:brand:homepage:india-MHP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c67" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c67</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="g" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">g</stringProp>
                  <stringProp name="Argument.value">https://www.makemytrip.com/flight/search?itinerary=DEL-CCU-05/07/2023&amp;tripType=O&amp;paxType=A-1_C-0_I-0&amp;intl=false&amp;cabinClass=E&amp;ccde=IN&amp;lang=eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c28" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c28</stringProp>
                  <stringProp name="Argument.value">169.254.172.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c27" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c27</stringProp>
                  <stringProp name="Argument.value">/flight/search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="j" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j</stringProp>
                  <stringProp name="Argument.value">1.6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">k</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="r" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">r</stringProp>
                  <stringProp name="Argument.value">https://www.makemytrip.com/</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v41" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v41</stringProp>
                  <stringProp name="Argument.value">D=c41</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ndh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ndh</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v84" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v84</stringProp>
                  <stringProp name="Argument.value">81517719884616203993465981471533567124</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">1360x768</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">4/6/2023 15:33:8 2 -330</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v43" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v43</stringProp>
                  <stringProp name="Argument.value">D=c43</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pf</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v1</stringProp>
                  <stringProp name="Argument.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v48" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v48</stringProp>
                  <stringProp name="Argument.value">58h|4ii|3g6|5cx|4p8|4po|4sa|50h|50j|51v|52d|3g6|4p8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v2</stringProp>
                  <stringProp name="Argument.value">D=c2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v3" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v3</stringProp>
                  <stringProp name="Argument.value">DEL-CCU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v4" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v4</stringProp>
                  <stringProp name="Argument.value">D=c4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c73" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c73</stringProp>
                  <stringProp name="Argument.value">34|34</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c72" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c72</stringProp>
                  <stringProp name="Argument.value">landing:brand:homepage:india-MHP</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">b/ss/mmtprod/1/JS-2.14.0/s94007128675370</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[38]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://transporter.makemytrip.com/flights/event-log?crId=c2a213b8-ec94-42c7-9acd-954d70835e6c" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:[{&quot;device&quot;:{&quot;browser&quot;:&quot;Chrome&quot;,&quot;browser_version&quot;:&quot;107.0.0.0&quot;,&quot;flavour&quot;:&quot;Desktop&quot;,&quot;os_version&quot;:&quot;Linux x86_64&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36&quot;,&quot;device_resolution&quot;:&quot;1360*768&quot;},&quot;context&quot;:{&quot;client_timestamp&quot;:1688464989154,&quot;client_timezone&quot;:&quot;GMT +0530&quot;,&quot;client_ip&quot;:&quot;&quot;,&quot;environment&quot;:&quot;prod&quot;,&quot;bu&quot;:&quot;flights&quot;,&quot;funnel_source&quot;:&quot;MMT&quot;,&quot;data_source&quot;:&quot;client&quot;,&quot;funnel_page_name&quot;:&quot;funnel:domestic flights:listing&quot;,&quot;page_url&quot;:&quot;https://www.makemytrip.com/flight/search?itinerary=DEL-CCU-05/07/2023&amp;tripType=O&amp;paxType=A-1_C-0_I-0&amp;intl=false&amp;cabinClass=E&amp;ccde=IN&amp;lang=eng&quot;},&quot;exp_experiment_details_list&quot;:[{&quot;exp_experiment_id&quot;:546,&quot;exp_experiment_version&quot;:23,&quot;exp_experiment_variant_id&quot;:1018},{&quot;exp_experiment_id&quot;:2613,&quot;exp_experiment_version&quot;:10,&quot;exp_experiment_variant_id&quot;:5651},{&quot;exp_experiment_id&quot;:2615,&quot;exp_experiment_version&quot;:3,&quot;exp_experiment_variant_id&quot;:5654},{&quot;exp_experiment_id&quot;:2123,&quot;exp_experiment_version&quot;:21,&quot;exp_experiment_variant_id&quot;:4539},{&quot;exp_experiment_id&quot;:81,&quot;exp_experiment_version&quot;:13,&quot;exp_experiment_variant_id&quot;:216},{&quot;exp_experiment_id&quot;:2643,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:5721},{&quot;exp_experiment_id&quot;:2141,&quot;exp_experiment_version&quot;:15,&quot;exp_experiment_variant_id&quot;:4578},{&quot;exp_experiment_id&quot;:3173,&quot;exp_experiment_version&quot;:2,&quot;exp_experiment_variant_id&quot;:6785},{&quot;exp_experiment_id&quot;:2666,&quot;exp_experiment_version&quot;:11,&quot;exp_experiment_variant_id&quot;:5768},{&quot;exp_experiment_id&quot;:3180,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6804},{&quot;exp_experiment_id&quot;:3190,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:6824},{&quot;exp_experiment_id&quot;:2180,&quot;exp_experiment_version&quot;:12,&quot;exp_experiment_variant_id&quot;:4665},{&quot;exp_experiment_id&quot;:649,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:1232},{&quot;exp_experiment_id&quot;:2701,&quot;exp_experiment_version&quot;:40,&quot;exp_experiment_variant_id&quot;:5850},{&quot;exp_experiment_id&quot;:2190,&quot;exp_experiment_version&quot;:21,&quot;exp_experiment_variant_id&quot;:4693},{&quot;exp_experiment_id&quot;:1679,&quot;exp_experiment_version&quot;:82,&quot;exp_experiment_variant_id&quot;:3512},{&quot;exp_experiment_id&quot;:160,&quot;exp_experiment_version&quot;:176,&quot;exp_experiment_variant_id&quot;:4470},{&quot;exp_experiment_id&quot;:2732,&quot;exp_experiment_version&quot;:4,&quot;exp_experiment_variant_id&quot;:5915},{&quot;exp_experiment_id&quot;:2738,&quot;exp_experiment_version&quot;:8,&quot;exp_experiment_variant_id&quot;:5928},{&quot;exp_experiment_id&quot;:3251,&quot;exp_experiment_version&quot;:7,&quot;exp_experiment_variant_id&quot;:6945},{&quot;exp_experiment_id&quot;:2782,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6018},{&quot;exp_experiment_id&quot;:2277,&quot;exp_experiment_version&quot;:6,&quot;exp_experiment_variant_id&quot;:4894},{&quot;exp_experiment_id&quot;:3301,&quot;exp_experiment_version&quot;:2,&quot;exp_experiment_variant_id&quot;:7064},{&quot;exp_experiment_id&quot;:3302,&quot;exp_experiment_version&quot;:3,&quot;exp_experiment_variant_id&quot;:7071},{&quot;exp_experiment_id&quot;:3311,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:7085},{&quot;exp_experiment_id&quot;:2817,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6092},{&quot;exp_experiment_id&quot;:2825,&quot;exp_experiment_version&quot;:21,&quot;exp_experiment_variant_id&quot;:6108},{&quot;exp_experiment_id&quot;:266,&quot;exp_experiment_version&quot;:28,&quot;exp_experiment_variant_id&quot;:777},{&quot;exp_experiment_id&quot;:2319,&quot;exp_experiment_version&quot;:28,&quot;exp_experiment_variant_id&quot;:4988},{&quot;exp_experiment_id&quot;:799,&quot;exp_experiment_version&quot;:35,&quot;exp_experiment_variant_id&quot;:1562},{&quot;exp_experiment_id&quot;:808,&quot;exp_experiment_version&quot;:27,&quot;exp_experiment_variant_id&quot;:1580},{&quot;exp_experiment_id&quot;:2868,&quot;exp_experiment_version&quot;:17,&quot;exp_experiment_variant_id&quot;:6202},{&quot;exp_experiment_id&quot;:361,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:688},{&quot;exp_experiment_id&quot;:2939,&quot;exp_experiment_version&quot;:2,&quot;exp_experiment_variant_id&quot;:6352},{&quot;exp_experiment_id&quot;:1423,&quot;exp_experiment_version&quot;:14,&quot;exp_experiment_variant_id&quot;:2946},{&quot;exp_experiment_id&quot;:2448,&quot;exp_experiment_version&quot;:12,&quot;exp_experiment_variant_id&quot;:5296},{&quot;exp_experiment_id&quot;:415,&quot;exp_experiment_version&quot;:34,&quot;exp_experiment_variant_id&quot;:744},{&quot;exp_experiment_id&quot;:2977,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6421},{&quot;exp_experiment_id&quot;:2466,&quot;exp_experiment_version&quot;:13,&quot;exp_experiment_variant_id&quot;:5333},{&quot;exp_experiment_id&quot;:2988,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:6444},{&quot;exp_experiment_id&quot;:2989,&quot;exp_experiment_version&quot;:30,&quot;exp_experiment_variant_id&quot;:6447},{&quot;exp_experiment_id&quot;:958,&quot;exp_experiment_version&quot;:19,&quot;exp_experiment_variant_id&quot;:1920},{&quot;exp_experiment_id&quot;:2500,&quot;exp_experiment_version&quot;:16,&quot;exp_experiment_variant_id&quot;:5407},{&quot;exp_experiment_id&quot;:3013,&quot;exp_experiment_version&quot;:11,&quot;exp_experiment_variant_id&quot;:6497},{&quot;exp_experiment_id&quot;:3014,&quot;exp_experiment_version&quot;:5,&quot;exp_experiment_variant_id&quot;:6499},{&quot;exp_experiment_id&quot;:1482,&quot;exp_experiment_version&quot;:35,&quot;exp_experiment_variant_id&quot;:3082},{&quot;exp_experiment_id&quot;:981,&quot;exp_experiment_version&quot;:18,&quot;exp_experiment_variant_id&quot;:1969},{&quot;exp_experiment_id&quot;:473,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:861},{&quot;exp_experiment_id&quot;:3059,&quot;exp_experiment_version&quot;:10,&quot;exp_experiment_variant_id&quot;:6547},{&quot;exp_experiment_id&quot;:2549,&quot;exp_experiment_version&quot;:27,&quot;exp_experiment_variant_id&quot;:5512},{&quot;exp_experiment_id&quot;:3061,&quot;exp_experiment_version&quot;:6,&quot;exp_experiment_variant_id&quot;:6565},{&quot;exp_experiment_id&quot;:546,&quot;exp_experiment_version&quot;:23,&quot;exp_experiment_variant_id&quot;:1018},{&quot;exp_experiment_id&quot;:2123,&quot;exp_experiment_version&quot;:21,&quot;exp_experiment_variant_id&quot;:4539},{&quot;exp_experiment_id&quot;:81,&quot;exp_experiment_version&quot;:13,&quot;exp_experiment_variant_id&quot;:216},{&quot;exp_experiment_id&quot;:3180,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6804},{&quot;exp_experiment_id&quot;:3190,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:6824},{&quot;exp_experiment_id&quot;:2180,&quot;exp_experiment_version&quot;:12,&quot;exp_experiment_variant_id&quot;:4665},{&quot;exp_experiment_id&quot;:160,&quot;exp_experiment_version&quot;:176,&quot;exp_experiment_variant_id&quot;:4470},{&quot;exp_experiment_id&quot;:3301,&quot;exp_experiment_version&quot;:2,&quot;exp_experiment_variant_id&quot;:7064},{&quot;exp_experiment_id&quot;:2817,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6092},{&quot;exp_experiment_id&quot;:2319,&quot;exp_experiment_version&quot;:28,&quot;exp_experiment_variant_id&quot;:4988},{&quot;exp_experiment_id&quot;:1423,&quot;exp_experiment_version&quot;:14,&quot;exp_experiment_variant_id&quot;:2946},{&quot;exp_experiment_id&quot;:2466,&quot;exp_experiment_version&quot;:13,&quot;exp_experiment_variant_id&quot;:5333}],&quot;cb_data&quot;:{&quot;device&quot;:{&quot;type&quot;:&quot;DESKTOP&quot;,&quot;operating_system&quot;:&quot;Linux&quot;,&quot;operating_system_version&quot;:&quot;Linux&quot;,&quot;model&quot;:&quot;&quot;,&quot;id&quot;:&quot;&quot;,&quot;carrier&quot;:&quot;&quot;,&quot;latitude&quot;:0,&quot;longitude&quot;:0,&quot;browser&quot;:&quot;&quot;,&quot;browser_version&quot;:&quot;&quot;,&quot;connection_type&quot;:&quot;&quot;,&quot;application_version&quot;:&quot;1.0.0&quot;,&quot;geo_city&quot;:&quot;&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36&quot;,&quot;manufacturer&quot;:&quot;&quot;,&quot;traffic_campaign&quot;:&quot;&quot;,&quot;traffic_medium&quot;:&quot;&quot;,&quot;traffic_source&quot;:&quot;&quot;,&quot;traffic_country&quot;:&quot;&quot;,&quot;traffic_currency&quot;:&quot;&quot;,&quot;traffic_language&quot;:&quot;&quot;,&quot;akamai_header&quot;:&quot;&quot;},&quot;user&quot;:{&quot;legacy_omniture_visitor_id&quot;:&quot;&quot;,&quot;marketing_cloud_id&quot;:&quot;8270b70d-2cf2-4443-8aeb-40c433c74257&quot;,&quot;login_channel&quot;:&quot;MMT&quot;,&quot;is_logged_in&quot;:false,&quot;uuid&quot;:&quot;&quot;,&quot;profile_type&quot;:&quot;PERSONAL&quot;,&quot;email_communication_id&quot;:&quot;&quot;,&quot;mobile_comunication_id&quot;:&quot;&quot;,&quot;is_email_verified&quot;:false,&quot;is_mobile_verified&quot;:false,&quot;city&quot;:&quot;&quot;,&quot;is_black_opted&quot;:false,&quot;is_double_black_opted&quot;:false,&quot;black_status&quot;:&quot;&quot;,&quot;double_black_status&quot;:&quot;&quot;,&quot;is_corporate&quot;:false,&quot;is_corporate_admin&quot;:false,&quot;is_corporate_verified&quot;:false,&quot;wallet_bonus_balance&quot;:0,&quot;is_wallted_blocked&quot;:false,&quot;corporate_organization_id&quot;:&quot;&quot;,&quot;is_corporate_policy_blocked&quot;:false,&quot;loyalty_status&quot;:0,&quot;prime_status&quot;:0,&quot;mobile_country_code&quot;:&quot;&quot;,&quot;wallet_cash_balance&quot;:0,&quot;wallet_balance_total&quot;:0,&quot;wallet_bonus_blocked_amount&quot;:0,&quot;wallet_bonus_expiry_amount&quot;:0,&quot;wallet_bonus_expiry_datetime&quot;:&quot;&quot;,&quot;wallet_cash_expiry_datetime&quot;:&quot;&quot;,&quot;wallet_cash_expiry_amount&quot;:0,&quot;is_gst_selected&quot;:false,&quot;gst_registration_number&quot;:&quot;&quot;,&quot;gst_registration_company&quot;:&quot;&quot;,&quot;hydra_segment_list&quot;:null,&quot;pricing_experiment_id&quot;:&quot;&quot;,&quot;ranking_experiment_id&quot;:&quot;&quot;},&quot;context&quot;:{&quot;topic_name&quot;:&quot;flights_server_logging&quot;,&quot;template_id&quot;:&quot;20817&quot;,&quot;is_columbus&quot;:false,&quot;correlation_id&quot;:&quot;e2cf2a95-7b9e-42d0-8209-986d33a35ac5&quot;,&quot;lob_name&quot;:&quot;&quot;,&quot;lob_code&quot;:&quot;B2C&quot;,&quot;server_timestamp&quot;:1688464987,&quot;client_timestamp&quot;:0,&quot;client_ip&quot;:&quot;2401:4900:1f36:2f92:1124:4018:d7ca:ee8a, 23.58.93.140, 23.63.110.13, 23.63.110.13&quot;,&quot;server_ip&quot;:&quot;169.254.172.2&quot;,&quot;domain&quot;:&quot;&quot;,&quot;server_timezone&quot;:&quot;GMT+0530&quot;,&quot;funnel_step&quot;:&quot;LISTING&quot;,&quot;activity_name&quot;:&quot;&quot;,&quot;page_name&quot;:&quot;listing&quot;,&quot;flight_lob_name&quot;:&quot;&quot;,&quot;api_version&quot;:&quot;&quot;,&quot;api_context_name&quot;:&quot;transporter&quot;,&quot;row_id&quot;:&quot;&quot;,&quot;api_name&quot;:&quot;SEARCH_STREAM_DT&quot;,&quot;flight_correlation_id&quot;:&quot;e2cf2a95-7b9e-42d0-8209-986d33a35ac5&quot;,&quot;flight_itinerary_id&quot;:&quot;&quot;,&quot;search_session_id&quot;:&quot;c2a213b8-ec94-42c7-9acd-954d70835e6c&quot;,&quot;session_mmt_id&quot;:&quot;&quot;,&quot;session_id&quot;:&quot;e2cf2a95-7b9e-42d0-8209-986d33a35ac5&quot;,&quot;whatsapp_session_key&quot;:&quot;&quot;,&quot;environment&quot;:&quot;&quot;,&quot;domain_sbu&quot;:&quot;india&quot;,&quot;domain_country&quot;:&quot;in&quot;,&quot;domain_currency&quot;:&quot;inr&quot;,&quot;domain_language&quot;:&quot;eng&quot;,&quot;flight_sort_basis&quot;:&quot;&quot;,&quot;adult_count&quot;:1,&quot;child_count&quot;:0,&quot;infant_count&quot;:0,&quot;source&quot;:&quot;mmt&quot;},&quot;search_context&quot;:{&quot;adult&quot;:1,&quot;child&quot;:0,&quot;infant&quot;:0,&quot;cabinClass&quot;:&quot;&quot;,&quot;sectorList&quot;:null,&quot;totalFare&quot;:0,&quot;it&quot;:[{&quot;from&quot;:&quot;DEL&quot;,&quot;to&quot;:&quot;CCU&quot;,&quot;depDate&quot;:&quot;2023-07-05&quot;,&quot;classname&quot;:&quot;&quot;,&quot;isAltDate&quot;:false}],&quot;tripType&quot;:&quot;&quot;,&quot;tripDuration&quot;:0,&quot;funnelType&quot;:&quot;&quot;}},&quot;event&quot;:{&quot;action_name&quot;:&quot;load_linear_cal&quot;,&quot;srch_linr_cal_shown&quot;:true}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">flights/event-log?crId=c2a213b8-ec94-42c7-9acd-954d70835e6c</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Request-Data-Encoding" elementType="Header">
                  <stringProp name="Header.name">Request-Data-Encoding</stringProp>
                  <stringProp name="Header.value">json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sub-Type" elementType="Header">
                  <stringProp name="Header.name">Sub-Type</stringProp>
                  <stringProp name="Header.value">common</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Log-Source" elementType="Header">
                  <stringProp name="Header.name">Log-Source</stringProp>
                  <stringProp name="Header.value">mmt_client</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[39]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://transporter.makemytrip.com/flights/event-log?crId=c2a213b8-ec94-42c7-9acd-954d70835e6c" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;data&quot;:[{&quot;device&quot;:{&quot;browser&quot;:&quot;Chrome&quot;,&quot;browser_version&quot;:&quot;107.0.0.0&quot;,&quot;flavour&quot;:&quot;Desktop&quot;,&quot;os_version&quot;:&quot;Linux x86_64&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36&quot;,&quot;device_resolution&quot;:&quot;1360*768&quot;},&quot;context&quot;:{&quot;client_timestamp&quot;:1688464989367,&quot;client_timezone&quot;:&quot;GMT +0530&quot;,&quot;client_ip&quot;:&quot;&quot;,&quot;environment&quot;:&quot;prod&quot;,&quot;bu&quot;:&quot;flights&quot;,&quot;funnel_source&quot;:&quot;MMT&quot;,&quot;data_source&quot;:&quot;client&quot;,&quot;funnel_page_name&quot;:&quot;funnel:domestic flights:listing&quot;,&quot;page_url&quot;:&quot;https://www.makemytrip.com/flight/search?itinerary=DEL-CCU-05/07/2023&amp;tripType=O&amp;paxType=A-1_C-0_I-0&amp;intl=false&amp;cabinClass=E&amp;ccde=IN&amp;lang=eng&quot;},&quot;exp_experiment_details_list&quot;:[{&quot;exp_experiment_id&quot;:546,&quot;exp_experiment_version&quot;:23,&quot;exp_experiment_variant_id&quot;:1018},{&quot;exp_experiment_id&quot;:2613,&quot;exp_experiment_version&quot;:10,&quot;exp_experiment_variant_id&quot;:5651},{&quot;exp_experiment_id&quot;:2615,&quot;exp_experiment_version&quot;:3,&quot;exp_experiment_variant_id&quot;:5654},{&quot;exp_experiment_id&quot;:2123,&quot;exp_experiment_version&quot;:21,&quot;exp_experiment_variant_id&quot;:4539},{&quot;exp_experiment_id&quot;:81,&quot;exp_experiment_version&quot;:13,&quot;exp_experiment_variant_id&quot;:216},{&quot;exp_experiment_id&quot;:2643,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:5721},{&quot;exp_experiment_id&quot;:2141,&quot;exp_experiment_version&quot;:15,&quot;exp_experiment_variant_id&quot;:4578},{&quot;exp_experiment_id&quot;:3173,&quot;exp_experiment_version&quot;:2,&quot;exp_experiment_variant_id&quot;:6785},{&quot;exp_experiment_id&quot;:2666,&quot;exp_experiment_version&quot;:11,&quot;exp_experiment_variant_id&quot;:5768},{&quot;exp_experiment_id&quot;:3180,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6804},{&quot;exp_experiment_id&quot;:3190,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:6824},{&quot;exp_experiment_id&quot;:2180,&quot;exp_experiment_version&quot;:12,&quot;exp_experiment_variant_id&quot;:4665},{&quot;exp_experiment_id&quot;:649,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:1232},{&quot;exp_experiment_id&quot;:2701,&quot;exp_experiment_version&quot;:40,&quot;exp_experiment_variant_id&quot;:5850},{&quot;exp_experiment_id&quot;:2190,&quot;exp_experiment_version&quot;:21,&quot;exp_experiment_variant_id&quot;:4693},{&quot;exp_experiment_id&quot;:1679,&quot;exp_experiment_version&quot;:82,&quot;exp_experiment_variant_id&quot;:3512},{&quot;exp_experiment_id&quot;:160,&quot;exp_experiment_version&quot;:176,&quot;exp_experiment_variant_id&quot;:4470},{&quot;exp_experiment_id&quot;:2732,&quot;exp_experiment_version&quot;:4,&quot;exp_experiment_variant_id&quot;:5915},{&quot;exp_experiment_id&quot;:2738,&quot;exp_experiment_version&quot;:8,&quot;exp_experiment_variant_id&quot;:5928},{&quot;exp_experiment_id&quot;:3251,&quot;exp_experiment_version&quot;:7,&quot;exp_experiment_variant_id&quot;:6945},{&quot;exp_experiment_id&quot;:2782,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6018},{&quot;exp_experiment_id&quot;:2277,&quot;exp_experiment_version&quot;:6,&quot;exp_experiment_variant_id&quot;:4894},{&quot;exp_experiment_id&quot;:3301,&quot;exp_experiment_version&quot;:2,&quot;exp_experiment_variant_id&quot;:7064},{&quot;exp_experiment_id&quot;:3302,&quot;exp_experiment_version&quot;:3,&quot;exp_experiment_variant_id&quot;:7071},{&quot;exp_experiment_id&quot;:3311,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:7085},{&quot;exp_experiment_id&quot;:2817,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6092},{&quot;exp_experiment_id&quot;:2825,&quot;exp_experiment_version&quot;:21,&quot;exp_experiment_variant_id&quot;:6108},{&quot;exp_experiment_id&quot;:266,&quot;exp_experiment_version&quot;:28,&quot;exp_experiment_variant_id&quot;:777},{&quot;exp_experiment_id&quot;:2319,&quot;exp_experiment_version&quot;:28,&quot;exp_experiment_variant_id&quot;:4988},{&quot;exp_experiment_id&quot;:799,&quot;exp_experiment_version&quot;:35,&quot;exp_experiment_variant_id&quot;:1562},{&quot;exp_experiment_id&quot;:808,&quot;exp_experiment_version&quot;:27,&quot;exp_experiment_variant_id&quot;:1580},{&quot;exp_experiment_id&quot;:2868,&quot;exp_experiment_version&quot;:17,&quot;exp_experiment_variant_id&quot;:6202},{&quot;exp_experiment_id&quot;:361,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:688},{&quot;exp_experiment_id&quot;:2939,&quot;exp_experiment_version&quot;:2,&quot;exp_experiment_variant_id&quot;:6352},{&quot;exp_experiment_id&quot;:1423,&quot;exp_experiment_version&quot;:14,&quot;exp_experiment_variant_id&quot;:2946},{&quot;exp_experiment_id&quot;:2448,&quot;exp_experiment_version&quot;:12,&quot;exp_experiment_variant_id&quot;:5296},{&quot;exp_experiment_id&quot;:415,&quot;exp_experiment_version&quot;:34,&quot;exp_experiment_variant_id&quot;:744},{&quot;exp_experiment_id&quot;:2977,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6421},{&quot;exp_experiment_id&quot;:2466,&quot;exp_experiment_version&quot;:13,&quot;exp_experiment_variant_id&quot;:5333},{&quot;exp_experiment_id&quot;:2988,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:6444},{&quot;exp_experiment_id&quot;:2989,&quot;exp_experiment_version&quot;:30,&quot;exp_experiment_variant_id&quot;:6447},{&quot;exp_experiment_id&quot;:958,&quot;exp_experiment_version&quot;:19,&quot;exp_experiment_variant_id&quot;:1920},{&quot;exp_experiment_id&quot;:2500,&quot;exp_experiment_version&quot;:16,&quot;exp_experiment_variant_id&quot;:5407},{&quot;exp_experiment_id&quot;:3013,&quot;exp_experiment_version&quot;:11,&quot;exp_experiment_variant_id&quot;:6497},{&quot;exp_experiment_id&quot;:3014,&quot;exp_experiment_version&quot;:5,&quot;exp_experiment_variant_id&quot;:6499},{&quot;exp_experiment_id&quot;:1482,&quot;exp_experiment_version&quot;:35,&quot;exp_experiment_variant_id&quot;:3082},{&quot;exp_experiment_id&quot;:981,&quot;exp_experiment_version&quot;:18,&quot;exp_experiment_variant_id&quot;:1969},{&quot;exp_experiment_id&quot;:473,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:861},{&quot;exp_experiment_id&quot;:3059,&quot;exp_experiment_version&quot;:10,&quot;exp_experiment_variant_id&quot;:6547},{&quot;exp_experiment_id&quot;:2549,&quot;exp_experiment_version&quot;:27,&quot;exp_experiment_variant_id&quot;:5512},{&quot;exp_experiment_id&quot;:3061,&quot;exp_experiment_version&quot;:6,&quot;exp_experiment_variant_id&quot;:6565},{&quot;exp_experiment_id&quot;:546,&quot;exp_experiment_version&quot;:23,&quot;exp_experiment_variant_id&quot;:1018},{&quot;exp_experiment_id&quot;:2123,&quot;exp_experiment_version&quot;:21,&quot;exp_experiment_variant_id&quot;:4539},{&quot;exp_experiment_id&quot;:81,&quot;exp_experiment_version&quot;:13,&quot;exp_experiment_variant_id&quot;:216},{&quot;exp_experiment_id&quot;:3180,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6804},{&quot;exp_experiment_id&quot;:3190,&quot;exp_experiment_version&quot;:1,&quot;exp_experiment_variant_id&quot;:6824},{&quot;exp_experiment_id&quot;:2180,&quot;exp_experiment_version&quot;:12,&quot;exp_experiment_variant_id&quot;:4665},{&quot;exp_experiment_id&quot;:160,&quot;exp_experiment_version&quot;:176,&quot;exp_experiment_variant_id&quot;:4470},{&quot;exp_experiment_id&quot;:3301,&quot;exp_experiment_version&quot;:2,&quot;exp_experiment_variant_id&quot;:7064},{&quot;exp_experiment_id&quot;:2817,&quot;exp_experiment_version&quot;:9,&quot;exp_experiment_variant_id&quot;:6092},{&quot;exp_experiment_id&quot;:2319,&quot;exp_experiment_version&quot;:28,&quot;exp_experiment_variant_id&quot;:4988},{&quot;exp_experiment_id&quot;:1423,&quot;exp_experiment_version&quot;:14,&quot;exp_experiment_variant_id&quot;:2946},{&quot;exp_experiment_id&quot;:2466,&quot;exp_experiment_version&quot;:13,&quot;exp_experiment_variant_id&quot;:5333}],&quot;cb_data&quot;:{&quot;device&quot;:{&quot;type&quot;:&quot;DESKTOP&quot;,&quot;operating_system&quot;:&quot;Linux&quot;,&quot;operating_system_version&quot;:&quot;Linux&quot;,&quot;model&quot;:&quot;&quot;,&quot;id&quot;:&quot;&quot;,&quot;carrier&quot;:&quot;&quot;,&quot;latitude&quot;:0,&quot;longitude&quot;:0,&quot;browser&quot;:&quot;&quot;,&quot;browser_version&quot;:&quot;&quot;,&quot;connection_type&quot;:&quot;&quot;,&quot;application_version&quot;:&quot;1.0.0&quot;,&quot;geo_city&quot;:&quot;&quot;,&quot;user_agent&quot;:&quot;Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36&quot;,&quot;manufacturer&quot;:&quot;&quot;,&quot;traffic_campaign&quot;:&quot;&quot;,&quot;traffic_medium&quot;:&quot;&quot;,&quot;traffic_source&quot;:&quot;&quot;,&quot;traffic_country&quot;:&quot;&quot;,&quot;traffic_currency&quot;:&quot;&quot;,&quot;traffic_language&quot;:&quot;&quot;,&quot;akamai_header&quot;:&quot;&quot;},&quot;user&quot;:{&quot;legacy_omniture_visitor_id&quot;:&quot;&quot;,&quot;marketing_cloud_id&quot;:&quot;8270b70d-2cf2-4443-8aeb-40c433c74257&quot;,&quot;login_channel&quot;:&quot;MMT&quot;,&quot;is_logged_in&quot;:false,&quot;uuid&quot;:&quot;&quot;,&quot;profile_type&quot;:&quot;PERSONAL&quot;,&quot;email_communication_id&quot;:&quot;&quot;,&quot;mobile_comunication_id&quot;:&quot;&quot;,&quot;is_email_verified&quot;:false,&quot;is_mobile_verified&quot;:false,&quot;city&quot;:&quot;&quot;,&quot;is_black_opted&quot;:false,&quot;is_double_black_opted&quot;:false,&quot;black_status&quot;:&quot;&quot;,&quot;double_black_status&quot;:&quot;&quot;,&quot;is_corporate&quot;:false,&quot;is_corporate_admin&quot;:false,&quot;is_corporate_verified&quot;:false,&quot;wallet_bonus_balance&quot;:0,&quot;is_wallted_blocked&quot;:false,&quot;corporate_organization_id&quot;:&quot;&quot;,&quot;is_corporate_policy_blocked&quot;:false,&quot;loyalty_status&quot;:0,&quot;prime_status&quot;:0,&quot;mobile_country_code&quot;:&quot;&quot;,&quot;wallet_cash_balance&quot;:0,&quot;wallet_balance_total&quot;:0,&quot;wallet_bonus_blocked_amount&quot;:0,&quot;wallet_bonus_expiry_amount&quot;:0,&quot;wallet_bonus_expiry_datetime&quot;:&quot;&quot;,&quot;wallet_cash_expiry_datetime&quot;:&quot;&quot;,&quot;wallet_cash_expiry_amount&quot;:0,&quot;is_gst_selected&quot;:false,&quot;gst_registration_number&quot;:&quot;&quot;,&quot;gst_registration_company&quot;:&quot;&quot;,&quot;hydra_segment_list&quot;:null,&quot;pricing_experiment_id&quot;:&quot;&quot;,&quot;ranking_experiment_id&quot;:&quot;&quot;},&quot;context&quot;:{&quot;topic_name&quot;:&quot;flights_server_logging&quot;,&quot;template_id&quot;:&quot;20817&quot;,&quot;is_columbus&quot;:false,&quot;correlation_id&quot;:&quot;e2cf2a95-7b9e-42d0-8209-986d33a35ac5&quot;,&quot;lob_name&quot;:&quot;&quot;,&quot;lob_code&quot;:&quot;B2C&quot;,&quot;server_timestamp&quot;:1688464987,&quot;client_timestamp&quot;:0,&quot;client_ip&quot;:&quot;2401:4900:1f36:2f92:1124:4018:d7ca:ee8a, 23.58.93.140, 23.63.110.13, 23.63.110.13&quot;,&quot;server_ip&quot;:&quot;169.254.172.2&quot;,&quot;domain&quot;:&quot;&quot;,&quot;server_timezone&quot;:&quot;GMT+0530&quot;,&quot;funnel_step&quot;:&quot;LISTING&quot;,&quot;activity_name&quot;:&quot;&quot;,&quot;page_name&quot;:&quot;listing&quot;,&quot;flight_lob_name&quot;:&quot;&quot;,&quot;api_version&quot;:&quot;&quot;,&quot;api_context_name&quot;:&quot;transporter&quot;,&quot;row_id&quot;:&quot;&quot;,&quot;api_name&quot;:&quot;SEARCH_STREAM_DT&quot;,&quot;flight_correlation_id&quot;:&quot;e2cf2a95-7b9e-42d0-8209-986d33a35ac5&quot;,&quot;flight_itinerary_id&quot;:&quot;&quot;,&quot;search_session_id&quot;:&quot;c2a213b8-ec94-42c7-9acd-954d70835e6c&quot;,&quot;session_mmt_id&quot;:&quot;&quot;,&quot;session_id&quot;:&quot;e2cf2a95-7b9e-42d0-8209-986d33a35ac5&quot;,&quot;whatsapp_session_key&quot;:&quot;&quot;,&quot;environment&quot;:&quot;&quot;,&quot;domain_sbu&quot;:&quot;india&quot;,&quot;domain_country&quot;:&quot;in&quot;,&quot;domain_currency&quot;:&quot;inr&quot;,&quot;domain_language&quot;:&quot;eng&quot;,&quot;flight_sort_basis&quot;:&quot;&quot;,&quot;adult_count&quot;:1,&quot;child_count&quot;:0,&quot;infant_count&quot;:0,&quot;source&quot;:&quot;mmt&quot;},&quot;search_context&quot;:{&quot;adult&quot;:1,&quot;child&quot;:0,&quot;infant&quot;:0,&quot;cabinClass&quot;:&quot;&quot;,&quot;sectorList&quot;:null,&quot;totalFare&quot;:0,&quot;it&quot;:[{&quot;from&quot;:&quot;DEL&quot;,&quot;to&quot;:&quot;CCU&quot;,&quot;depDate&quot;:&quot;2023-07-05&quot;,&quot;classname&quot;:&quot;&quot;,&quot;isAltDate&quot;:false}],&quot;tripType&quot;:&quot;&quot;,&quot;tripDuration&quot;:0,&quot;funnelType&quot;:&quot;&quot;}},&quot;event&quot;:{&quot;action_name&quot;:&quot;farelock_popup_displayed&quot;}}]}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_4}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">flights/event-log?crId=c2a213b8-ec94-42c7-9acd-954d70835e6c</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="Request-Data-Encoding" elementType="Header">
                  <stringProp name="Header.name">Request-Data-Encoding</stringProp>
                  <stringProp name="Header.value">json</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Sub-Type" elementType="Header">
                  <stringProp name="Header.name">Sub-Type</stringProp>
                  <stringProp name="Header.value">common</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json, text/plain, */*</stringProp>
                </elementProp>
                <elementProp name="Log-Source" elementType="Header">
                  <stringProp name="Header.name">Log-Source</stringProp>
                  <stringProp name="Header.value">mmt_client</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[40]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://metrics.makemytrip.com/b/ss/mmtprod/1/JS-2.14.0/s91553499084274" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="v6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v6</stringProp>
                  <stringProp name="Argument.value">D=c6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c75" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c75</stringProp>
                  <stringProp name="Argument.value">25% to 50%</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v7" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v7</stringProp>
                  <stringProp name="Argument.value">D=c7</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c74" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c74</stringProp>
                  <stringProp name="Argument.value">25% to 50%</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v8" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v8</stringProp>
                  <stringProp name="Argument.value">D=c8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v9" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v9</stringProp>
                  <stringProp name="Argument.value">D=c9</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c37" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c37</stringProp>
                  <stringProp name="Argument.value">VisitorAPI Present</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c39" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c39</stringProp>
                  <stringProp name="Argument.value">Guest</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c38" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c38</stringProp>
                  <stringProp name="Argument.value">81517719884616203993465981471533567124</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aamlh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aamlh</stringProp>
                  <stringProp name="Argument.value">12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pageName" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pageName</stringProp>
                  <stringProp name="Argument.value">funnel:domestic flights:listing</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AQB" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AQB</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v52" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v52</stringProp>
                  <stringProp name="Argument.value">D=v0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v51" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v51</stringProp>
                  <stringProp name="Argument.value">D=v0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v10" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v10</stringProp>
                  <stringProp name="Argument.value">D=c10</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v54" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v54</stringProp>
                  <stringProp name="Argument.value">D=v0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="fpCookieDomainPeriods" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">fpCookieDomainPeriods</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v53" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v53</stringProp>
                  <stringProp name="Argument.value">D=v0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="AQE" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">AQE</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v12" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v12</stringProp>
                  <stringProp name="Argument.value">D=c12</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v56" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v56</stringProp>
                  <stringProp name="Argument.value">D=v0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v11" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v11</stringProp>
                  <stringProp name="Argument.value">D=c11</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v55" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v55</stringProp>
                  <stringProp name="Argument.value">D=v0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="aamb" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">aamb</stringProp>
                  <stringProp name="Argument.value">RKhpRz8krg2tLO6pguXWp5olkAcUniQYPHaMWWgdJ3xzPWQmdj0y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v58" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v58</stringProp>
                  <stringProp name="Argument.value">c2a213b8-ec94-42c7-9acd-954d70835e6c</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v57" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v57</stringProp>
                  <stringProp name="Argument.value">D=v0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v15" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v15</stringProp>
                  <stringProp name="Argument.value">funnel:domestic flights:listing</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v59" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v59</stringProp>
                  <stringProp name="Argument.value">58h|4ii|3g6|5cx|4p8|4po|4sa|50h|50j|51v|52d|3g6|4p8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v18" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v18</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="events" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">events</stringProp>
                  <stringProp name="Argument.value">scOpen,event11,event27,event23,prodView</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v19" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v19</stringProp>
                  <stringProp name="Argument.value">O</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c41" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c41</stringProp>
                  <stringProp name="Argument.value">New|Repeat|Repeat|Repeat</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="cdp" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">cdp</stringProp>
                  <stringProp name="Argument.value">2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c2</stringProp>
                  <stringProp name="Argument.value">India-India</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c4" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c4</stringProp>
                  <stringProp name="Argument.value">05:07:2023</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c6" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c6</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c7" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c7</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c8" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c8</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c9" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c9</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v23" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v23</stringProp>
                  <stringProp name="Argument.value">D=c23</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v24" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v24</stringProp>
                  <stringProp name="Argument.value">D=c24</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v27" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v27</stringProp>
                  <stringProp name="Argument.value">D=c27</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v26" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v26</stringProp>
                  <stringProp name="Argument.value">8270b70d-2cf2-4443-8aeb-40c433c74257</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v28" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v28</stringProp>
                  <stringProp name="Argument.value">169.254.172.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c11" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c11</stringProp>
                  <stringProp name="Argument.value">1A|0C|0I|1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c10" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c10</stringProp>
                  <stringProp name="Argument.value">0</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c54" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c54</stringProp>
                  <stringProp name="Argument.value">1137_Price_hidden~bnpl_widget_shown_listing~hotelcrosssell_listingbanner_shown</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ns" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ns</stringProp>
                  <stringProp name="Argument.value">makemytrip</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c12" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c12</stringProp>
                  <stringProp name="Argument.value">OW|E</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c56" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c56</stringProp>
                  <stringProp name="Argument.value">More than 7 days</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bh</stringProp>
                  <stringProp name="Argument.value">637</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mid</stringProp>
                  <stringProp name="Argument.value">81517719884616203993465981471533567124</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="bw" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">bw</stringProp>
                  <stringProp name="Argument.value">1360</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v37" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v37</stringProp>
                  <stringProp name="Argument.value">domain_sbu:india|domain_country:in|domain_currency:inr|domain_language:eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v39" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v39</stringProp>
                  <stringProp name="Argument.value">Guest</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="mcorgid" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">mcorgid</stringProp>
                  <stringProp name="Argument.value">1E0D22CE527845790A490D4D@AdobeOrg</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ce" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ce</stringProp>
                  <stringProp name="Argument.value">UTF-8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c</stringProp>
                  <stringProp name="Argument.value">24</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c24" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c24</stringProp>
                  <stringProp name="Argument.value">domestic flights</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ch" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ch</stringProp>
                  <stringProp name="Argument.value">domestic flights funnel</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c23" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c23</stringProp>
                  <stringProp name="Argument.value">funnel:domestic flights:listing</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c67" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c67</stringProp>
                  <stringProp name="Argument.value">false</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="g" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">g</stringProp>
                  <stringProp name="Argument.value">https://www.makemytrip.com/flight/search?itinerary=DEL-CCU-05/07/2023&amp;tripType=O&amp;paxType=A-1_C-0_I-0&amp;intl=false&amp;cabinClass=E&amp;ccde=IN&amp;lang=eng</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c28" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c28</stringProp>
                  <stringProp name="Argument.value">169.254.172.2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c27" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c27</stringProp>
                  <stringProp name="Argument.value">/flight/search</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="j" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">j</stringProp>
                  <stringProp name="Argument.value">1.6</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="k" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">k</stringProp>
                  <stringProp name="Argument.value">Y</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v41" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v41</stringProp>
                  <stringProp name="Argument.value">D=c41</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="ndh" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">ndh</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v84" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v84</stringProp>
                  <stringProp name="Argument.value">81517719884616203993465981471533567124</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="s" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">s</stringProp>
                  <stringProp name="Argument.value">1360x768</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="t" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">t</stringProp>
                  <stringProp name="Argument.value">4/6/2023 15:33:9 2 -330</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="pf" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">pf</stringProp>
                  <stringProp name="Argument.value">1</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v</stringProp>
                  <stringProp name="Argument.value">N</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v1" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v1</stringProp>
                  <stringProp name="Argument.value">Mozilla/5.0 (X11; Linux x86_64) AppleWebKit/537.36 (KHTML, like Gecko) Chrome/107.0.0.0 Safari/537.36</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v48" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v48</stringProp>
                  <stringProp name="Argument.value">58h|4ii|3g6|5cx|4p8|4po|4sa|50h|50j|51v|52d|3g6|4p8</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v2" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v2</stringProp>
                  <stringProp name="Argument.value">D=c2</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v3" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v3</stringProp>
                  <stringProp name="Argument.value">DEL-CCU</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="v4" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">v4</stringProp>
                  <stringProp name="Argument.value">D=c4</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c73" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c73</stringProp>
                  <stringProp name="Argument.value">47|47</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
                <elementProp name="c72" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">true</boolProp>
                  <stringProp name="Argument.name">c72</stringProp>
                  <stringProp name="Argument.value">funnel:domestic flights:listing</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_6}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">b/ss/mmtprod/1/JS-2.14.0/s91553499084274</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[41]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://adorch.makemytrip.com/ext/user/serve/ad" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ext/user/serve/ad</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type,language,org,region,user-identifier,usradid</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[42]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://adorch.makemytrip.com/ext/user/serve/ad" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ext/user/serve/ad</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type,language,org,region,user-identifier,usradid</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[43]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://adorch.makemytrip.com/ext/user/serve/ad" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ext/user/serve/ad</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type,language,org,region,user-identifier,usradid</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[44]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://adorch.makemytrip.com/ext/user/serve/ad" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ext/user/serve/ad</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type,language,org,region,user-identifier,usradid</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[45]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://adorch.makemytrip.com/ext/user/serve/ad" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ext/user/serve/ad</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type,language,org,region,user-identifier,usradid</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[46]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://adorch.makemytrip.com/ext/user/serve/ad" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments"/>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ext/user/serve/ad</stringProp>
            <stringProp name="HTTPSampler.method">OPTIONS</stringProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Method" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Method</stringProp>
                  <stringProp name="Header.value">POST</stringProp>
                </elementProp>
                <elementProp name="Access-Control-Request-Headers" elementType="Header">
                  <stringProp name="Header.name">Access-Control-Request-Headers</stringProp>
                  <stringProp name="Header.value">authorization,content-type,language,org,region,user-identifier,usradid</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[47]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://adorch.makemytrip.com/ext/user/serve/ad" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;placementContextList&quot;:[{&quot;contextId&quot;:&quot;RkxJR0hUI0xJU1RJTkcjQkVUV0VFTkNBUkRTMQ==&quot;}],&quot;searchContext&quot;:{&quot;currSearchContext&quot;:[{&quot;lob&quot;:&quot;FLIGHT&quot;,&quot;source&quot;:{&quot;cityName&quot;:&quot;New Delhi&quot;,&quot;airportCode&quot;:&quot;DEL&quot;,&quot;countryCode&quot;:&quot;IN&quot;},&quot;hop&quot;:null,&quot;destination&quot;:{&quot;cityName&quot;:&quot;Kolkata&quot;,&quot;airportCode&quot;:&quot;CCU&quot;,&quot;countryCode&quot;:&quot;IN&quot;},&quot;startDate&quot;:1688515200,&quot;endDate&quot;:0,&quot;tripType&quot;:&quot;ONEWAY&quot;,&quot;flights&quot;:{&quot;paxDetails&quot;:{&quot;adult&quot;:1,&quot;infant&quot;:0,&quot;children&quot;:0},&quot;class&quot;:&quot;Economy&quot;,&quot;fareType&quot;:&quot;Regular Fare&quot;},&quot;correlationKey&quot;:&quot;c2a213b8-ec94-42c7-9acd-954d70835e6c&quot;,&quot;funnel&quot;:&quot;DOM&quot;,&quot;searchSource&quot;:&quot;MMT&quot;}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ext/user/serve/ad</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="usradid" elementType="Header">
                  <stringProp name="Header.name">usradid</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="org" elementType="Header">
                  <stringProp name="Header.name">org</stringProp>
                  <stringProp name="Header.value">MMT</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">DFjgkXbgFGBvebc</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">IN</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="user-identifier" elementType="Header">
                  <stringProp name="Header.name">user-identifier</stringProp>
                  <stringProp name="Header.value">{&quot;type&quot;: &quot;auth&quot; ,&quot;deviceId&quot; : &quot;8270b70d-2cf2-4443-8aeb-40c433c74257&quot;, &quot;os&quot;:&quot;DESKTOP&quot;, &quot;osVersion&quot;:&quot;undefined&quot;, &quot;appVersion&quot;:&quot;16.7.1&quot;, &quot;imie&quot;:&quot;imie&quot;, &quot;ipAddress&quot;:&quot;ipAddress&quot;, &quot;timeZone&quot;:&quot;India Standard Time&quot;, &quot;value&quot;:&quot;&quot;, &quot;profileType&quot;:null, &quot;sdkVersion&quot;:&quot;r_2.5.1&quot;}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[48]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://adorch.makemytrip.com/ext/user/serve/ad" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;placementContextList&quot;:[{&quot;contextId&quot;:&quot;RkxJR0hUI0xJU1RJTkcjQkVUV0VFTkNBUkRTMg==&quot;}],&quot;searchContext&quot;:{&quot;currSearchContext&quot;:[{&quot;lob&quot;:&quot;FLIGHT&quot;,&quot;source&quot;:{&quot;cityName&quot;:&quot;New Delhi&quot;,&quot;airportCode&quot;:&quot;DEL&quot;,&quot;countryCode&quot;:&quot;IN&quot;},&quot;hop&quot;:null,&quot;destination&quot;:{&quot;cityName&quot;:&quot;Kolkata&quot;,&quot;airportCode&quot;:&quot;CCU&quot;,&quot;countryCode&quot;:&quot;IN&quot;},&quot;startDate&quot;:1688515200,&quot;endDate&quot;:0,&quot;tripType&quot;:&quot;ONEWAY&quot;,&quot;flights&quot;:{&quot;paxDetails&quot;:{&quot;adult&quot;:1,&quot;infant&quot;:0,&quot;children&quot;:0},&quot;class&quot;:&quot;Economy&quot;,&quot;fareType&quot;:&quot;Regular Fare&quot;},&quot;correlationKey&quot;:&quot;c2a213b8-ec94-42c7-9acd-954d70835e6c&quot;,&quot;funnel&quot;:&quot;DOM&quot;,&quot;searchSource&quot;:&quot;MMT&quot;}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ext/user/serve/ad</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="usradid" elementType="Header">
                  <stringProp name="Header.name">usradid</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="org" elementType="Header">
                  <stringProp name="Header.name">org</stringProp>
                  <stringProp name="Header.value">MMT</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">DFjgkXbgFGBvebc</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">IN</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="user-identifier" elementType="Header">
                  <stringProp name="Header.name">user-identifier</stringProp>
                  <stringProp name="Header.value">{&quot;type&quot;: &quot;auth&quot; ,&quot;deviceId&quot; : &quot;8270b70d-2cf2-4443-8aeb-40c433c74257&quot;, &quot;os&quot;:&quot;DESKTOP&quot;, &quot;osVersion&quot;:&quot;undefined&quot;, &quot;appVersion&quot;:&quot;16.7.1&quot;, &quot;imie&quot;:&quot;imie&quot;, &quot;ipAddress&quot;:&quot;ipAddress&quot;, &quot;timeZone&quot;:&quot;India Standard Time&quot;, &quot;value&quot;:&quot;&quot;, &quot;profileType&quot;:null, &quot;sdkVersion&quot;:&quot;r_2.5.1&quot;}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[49]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://adorch.makemytrip.com/ext/user/serve/ad" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;placementContextList&quot;:[{&quot;contextId&quot;:&quot;RkxJR0hUI0xJU1RJTkcjQkVUV0VFTkNBUkRTMw==&quot;}],&quot;searchContext&quot;:{&quot;currSearchContext&quot;:[{&quot;lob&quot;:&quot;FLIGHT&quot;,&quot;source&quot;:{&quot;cityName&quot;:&quot;New Delhi&quot;,&quot;airportCode&quot;:&quot;DEL&quot;,&quot;countryCode&quot;:&quot;IN&quot;},&quot;hop&quot;:null,&quot;destination&quot;:{&quot;cityName&quot;:&quot;Kolkata&quot;,&quot;airportCode&quot;:&quot;CCU&quot;,&quot;countryCode&quot;:&quot;IN&quot;},&quot;startDate&quot;:1688515200,&quot;endDate&quot;:0,&quot;tripType&quot;:&quot;ONEWAY&quot;,&quot;flights&quot;:{&quot;paxDetails&quot;:{&quot;adult&quot;:1,&quot;infant&quot;:0,&quot;children&quot;:0},&quot;class&quot;:&quot;Economy&quot;,&quot;fareType&quot;:&quot;Regular Fare&quot;},&quot;correlationKey&quot;:&quot;c2a213b8-ec94-42c7-9acd-954d70835e6c&quot;,&quot;funnel&quot;:&quot;DOM&quot;,&quot;searchSource&quot;:&quot;MMT&quot;}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ext/user/serve/ad</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="usradid" elementType="Header">
                  <stringProp name="Header.name">usradid</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="org" elementType="Header">
                  <stringProp name="Header.name">org</stringProp>
                  <stringProp name="Header.value">MMT</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">DFjgkXbgFGBvebc</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">IN</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="user-identifier" elementType="Header">
                  <stringProp name="Header.name">user-identifier</stringProp>
                  <stringProp name="Header.value">{&quot;type&quot;: &quot;auth&quot; ,&quot;deviceId&quot; : &quot;8270b70d-2cf2-4443-8aeb-40c433c74257&quot;, &quot;os&quot;:&quot;DESKTOP&quot;, &quot;osVersion&quot;:&quot;undefined&quot;, &quot;appVersion&quot;:&quot;16.7.1&quot;, &quot;imie&quot;:&quot;imie&quot;, &quot;ipAddress&quot;:&quot;ipAddress&quot;, &quot;timeZone&quot;:&quot;India Standard Time&quot;, &quot;value&quot;:&quot;&quot;, &quot;profileType&quot;:null, &quot;sdkVersion&quot;:&quot;r_2.5.1&quot;}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[50]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://adorch.makemytrip.com/ext/user/serve/ad" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;placementContextList&quot;:[{&quot;contextId&quot;:&quot;RkxJR0hUI0xJU1RJTkcjQkVUV0VFTkNBUkRTNQ==&quot;}],&quot;searchContext&quot;:{&quot;currSearchContext&quot;:[{&quot;lob&quot;:&quot;FLIGHT&quot;,&quot;source&quot;:{&quot;cityName&quot;:&quot;New Delhi&quot;,&quot;airportCode&quot;:&quot;DEL&quot;,&quot;countryCode&quot;:&quot;IN&quot;},&quot;hop&quot;:null,&quot;destination&quot;:{&quot;cityName&quot;:&quot;Kolkata&quot;,&quot;airportCode&quot;:&quot;CCU&quot;,&quot;countryCode&quot;:&quot;IN&quot;},&quot;startDate&quot;:1688515200,&quot;endDate&quot;:0,&quot;tripType&quot;:&quot;ONEWAY&quot;,&quot;flights&quot;:{&quot;paxDetails&quot;:{&quot;adult&quot;:1,&quot;infant&quot;:0,&quot;children&quot;:0},&quot;class&quot;:&quot;Economy&quot;,&quot;fareType&quot;:&quot;Regular Fare&quot;},&quot;correlationKey&quot;:&quot;c2a213b8-ec94-42c7-9acd-954d70835e6c&quot;,&quot;funnel&quot;:&quot;DOM&quot;,&quot;searchSource&quot;:&quot;MMT&quot;}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ext/user/serve/ad</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="usradid" elementType="Header">
                  <stringProp name="Header.name">usradid</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="org" elementType="Header">
                  <stringProp name="Header.name">org</stringProp>
                  <stringProp name="Header.value">MMT</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">DFjgkXbgFGBvebc</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">IN</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="user-identifier" elementType="Header">
                  <stringProp name="Header.name">user-identifier</stringProp>
                  <stringProp name="Header.value">{&quot;type&quot;: &quot;auth&quot; ,&quot;deviceId&quot; : &quot;8270b70d-2cf2-4443-8aeb-40c433c74257&quot;, &quot;os&quot;:&quot;DESKTOP&quot;, &quot;osVersion&quot;:&quot;undefined&quot;, &quot;appVersion&quot;:&quot;16.7.1&quot;, &quot;imie&quot;:&quot;imie&quot;, &quot;ipAddress&quot;:&quot;ipAddress&quot;, &quot;timeZone&quot;:&quot;India Standard Time&quot;, &quot;value&quot;:&quot;&quot;, &quot;profileType&quot;:null, &quot;sdkVersion&quot;:&quot;r_2.5.1&quot;}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[51]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://adorch.makemytrip.com/ext/user/serve/ad" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;placementContextList&quot;:[{&quot;contextId&quot;:&quot;RkxJR0hUI0xJU1RJTkcjQkVUV0VFTkNBUkRTNA==&quot;}],&quot;searchContext&quot;:{&quot;currSearchContext&quot;:[{&quot;lob&quot;:&quot;FLIGHT&quot;,&quot;source&quot;:{&quot;cityName&quot;:&quot;New Delhi&quot;,&quot;airportCode&quot;:&quot;DEL&quot;,&quot;countryCode&quot;:&quot;IN&quot;},&quot;hop&quot;:null,&quot;destination&quot;:{&quot;cityName&quot;:&quot;Kolkata&quot;,&quot;airportCode&quot;:&quot;CCU&quot;,&quot;countryCode&quot;:&quot;IN&quot;},&quot;startDate&quot;:1688515200,&quot;endDate&quot;:0,&quot;tripType&quot;:&quot;ONEWAY&quot;,&quot;flights&quot;:{&quot;paxDetails&quot;:{&quot;adult&quot;:1,&quot;infant&quot;:0,&quot;children&quot;:0},&quot;class&quot;:&quot;Economy&quot;,&quot;fareType&quot;:&quot;Regular Fare&quot;},&quot;correlationKey&quot;:&quot;c2a213b8-ec94-42c7-9acd-954d70835e6c&quot;,&quot;funnel&quot;:&quot;DOM&quot;,&quot;searchSource&quot;:&quot;MMT&quot;}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ext/user/serve/ad</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="usradid" elementType="Header">
                  <stringProp name="Header.name">usradid</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="org" elementType="Header">
                  <stringProp name="Header.name">org</stringProp>
                  <stringProp name="Header.value">MMT</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">DFjgkXbgFGBvebc</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">IN</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="user-identifier" elementType="Header">
                  <stringProp name="Header.name">user-identifier</stringProp>
                  <stringProp name="Header.value">{&quot;type&quot;: &quot;auth&quot; ,&quot;deviceId&quot; : &quot;8270b70d-2cf2-4443-8aeb-40c433c74257&quot;, &quot;os&quot;:&quot;DESKTOP&quot;, &quot;osVersion&quot;:&quot;undefined&quot;, &quot;appVersion&quot;:&quot;16.7.1&quot;, &quot;imie&quot;:&quot;imie&quot;, &quot;ipAddress&quot;:&quot;ipAddress&quot;, &quot;timeZone&quot;:&quot;India Standard Time&quot;, &quot;value&quot;:&quot;&quot;, &quot;profileType&quot;:null, &quot;sdkVersion&quot;:&quot;r_2.5.1&quot;}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[52]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://adorch.makemytrip.com/ext/user/serve/ad" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;placementContextList&quot;:[{&quot;contextId&quot;:&quot;RkxJR0hUI0xJU1RJTkcjSU5TVVJBTkNFIEJBTk5FUiBMSVNUSU5HXzE=&quot;}],&quot;searchContext&quot;:{&quot;currSearchContext&quot;:[{&quot;lob&quot;:&quot;FLIGHT&quot;,&quot;source&quot;:{&quot;cityName&quot;:&quot;New Delhi&quot;,&quot;airportCode&quot;:&quot;DEL&quot;,&quot;countryCode&quot;:&quot;IN&quot;},&quot;hop&quot;:null,&quot;destination&quot;:{&quot;cityName&quot;:&quot;Kolkata&quot;,&quot;airportCode&quot;:&quot;CCU&quot;,&quot;countryCode&quot;:&quot;IN&quot;},&quot;startDate&quot;:1688515200,&quot;endDate&quot;:0,&quot;tripType&quot;:&quot;ONEWAY&quot;,&quot;flights&quot;:{&quot;paxDetails&quot;:{&quot;adult&quot;:1,&quot;infant&quot;:0,&quot;children&quot;:0},&quot;class&quot;:&quot;Economy&quot;,&quot;fareType&quot;:&quot;Regular Fare&quot;},&quot;correlationKey&quot;:&quot;c2a213b8-ec94-42c7-9acd-954d70835e6c&quot;,&quot;funnel&quot;:&quot;DOM&quot;,&quot;searchSource&quot;:&quot;MMT&quot;}]}}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_7}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">ext/user/serve/ad</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="language" elementType="Header">
                  <stringProp name="Header.name">language</stringProp>
                  <stringProp name="Header.value">eng</stringProp>
                </elementProp>
                <elementProp name="usradid" elementType="Header">
                  <stringProp name="Header.name">usradid</stringProp>
                  <stringProp name="Header.value">null</stringProp>
                </elementProp>
                <elementProp name="org" elementType="Header">
                  <stringProp name="Header.name">org</stringProp>
                  <stringProp name="Header.value">MMT</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="Authorization" elementType="Header">
                  <stringProp name="Header.name">Authorization</stringProp>
                  <stringProp name="Header.value">DFjgkXbgFGBvebc</stringProp>
                </elementProp>
                <elementProp name="region" elementType="Header">
                  <stringProp name="Header.name">region</stringProp>
                  <stringProp name="Header.value">IN</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">application/json</stringProp>
                </elementProp>
                <elementProp name="user-identifier" elementType="Header">
                  <stringProp name="Header.name">user-identifier</stringProp>
                  <stringProp name="Header.value">{&quot;type&quot;: &quot;auth&quot; ,&quot;deviceId&quot; : &quot;8270b70d-2cf2-4443-8aeb-40c433c74257&quot;, &quot;os&quot;:&quot;DESKTOP&quot;, &quot;osVersion&quot;:&quot;undefined&quot;, &quot;appVersion&quot;:&quot;16.7.1&quot;, &quot;imie&quot;:&quot;imie&quot;, &quot;ipAddress&quot;:&quot;ipAddress&quot;, &quot;timeZone&quot;:&quot;India Standard Time&quot;, &quot;value&quot;:&quot;&quot;, &quot;profileType&quot;:null, &quot;sdkVersion&quot;:&quot;r_2.5.1&quot;}</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[53]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://bam-cell.nr-data.net/events/1/ae504947bb?a=665315257&amp;sa=1&amp;v=1209.f04e2b9&amp;t=Unnamed%20Transaction&amp;rst=7444&amp;ck=1&amp;ref=https://www.makemytrip.com/flight/search" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">bel.7;1,g,,5js,5dy,15y,&apos;initialPageLoad,&apos;https://www.makemytrip.com/flight/search,1,1,,,!!!!&apos;e301dfe3-f542-44f9-a314-66f632e1ccb8,&apos;1,1hg,1hg;2,,1w8,hu,13,12,&apos;GET,5k,&apos;flights-cb.makemytrip.com:443,&apos;/api/flights-search/autosuggest,,2hz,,&apos;4,!!!;2,,1wr,if,bx,70,4,5k,5,6,,2gz,,&apos;5,!!!;2,,2mf,82,2,2,&apos;POST,5k,&apos;www.makemytrip.com:443,&apos;/akam/13/pixel_69c6aea2,2r7,,,&apos;7,&apos;75f729572294be2a,&apos;0bd376cbdd82ea9a7f97d81d72a32cc0,ljo4gi22;2,,1xc,10l,3i,1,4,5k,5,&apos;/api/search-stream-dt,,,1,&apos;6,!!!;2,,3iw,mr,32,33,4,5k,5,&apos;/api/fareCalendar,,g5w,,&apos;9,!!!;2,1,3ob,kx,5s,5s,9,5k,5,&apos;/api/postSearch,6kf,10mc,,&apos;11,!!!;2,,4ap,no,1,1,9,5k,&apos;transporter.makemytrip.com:443,&apos;/flights/event-log,6zm,d,,&apos;15,!!!;2,,3vw,jg,jq,1,9,5k,&apos;pdt.makemytrip.com:443,&apos;/fs/w,ou,v,1,&apos;12,!!!;2,,3k3,vk,1,2,9,5k,l,m,6yp,d,,&apos;10,!!!;2,1,446,g6,d,8,9,5k,&apos;metrics.makemytrip.com:443,&apos;/b/ss/mmtprod/1/JS-2.14.0/s94007128675370,1lc,17,,&apos;14,!!!;2,,4kf,fg,2,2,9,5k,s,&apos;/b/ss/mmtprod/1/JS-2.14.0/s91553499084274,1jm,17,,&apos;18,!!!;2,,4gn,j1,1,2,9,5k,l,m,6z4,d,,&apos;16,!!!;2,,53f,a7,1g,4,9,5k,&apos;adorch.makemytrip.com:443,&apos;/ext/user/serve/ad,fc,bh,1,&apos;19,!!!;2,,543,cl,4,2,9,5k,y,z,fc,bh,1,&apos;20,!!!;2,,54b,dw,6,3,9,5k,y,z,fc,bh,1,&apos;21,!!!;2,,54u,dd,9,4,9,5k,y,z,fc,bh,1,&apos;23,!!!;2,,551,e8,6,3,9,5k,y,z,fs,i8,1,&apos;24,!!!;2,,54k,f5,3,4,9,5k,y,z,fc,bh,1,&apos;22,!!!;b,jm,!,!-j8,,,,!,13,ha,d,k,16g,2a,,3im,,1h</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_8}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">events/1/ae504947bb?a=665315257&amp;sa=1&amp;v=1209.f04e2b9&amp;t=Unnamed%20Transaction&amp;rst=7444&amp;ck=1&amp;ref=https://www.makemytrip.com/flight/search</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="content-type" elementType="Header">
                  <stringProp name="Header.name">content-type</stringProp>
                  <stringProp name="Header.value">text/plain</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">cross-site</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[54]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.makemytrip.com/az-KW/y/95/--TK/lNS2q0qg/1wbESJVGkkQ5/Qk1QIA/fB1rZBFX/WGc" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sensor_data&quot;:&quot;2;3487545;3293750;37,42,0,2,12,17;87#3Vp2l2tH[x0yo&gt;jR&gt;YJtzNa{(1{xAfVOpxY}n)mOj :8J`+~yU&gt;a!F-z%avaQk#NM_9aQv%]T/r#t&gt;ZUl/D68_/l}W[alF4Dn$c&lt;#iX h~DKV3cpU%0_^=U(Q(/&amp;a?I]%&gt;4_]&amp;&amp;`Hj8?Q:hum7`2_1_-Bnx$]QY`+_:-uT&lt;lNU~%;(j~#HgNwW$]%LPcK6Ga&amp;lC&gt;=z}hJ!V$+tYgwNhS(n&gt;+I#/@8v1D5_JK-2;rvB/DeQ&lt;gj9]O4}KDc;]ceJp1l@N:D/mo8_Dg*#m3L+bJ+z]?r[c6&amp;}=}V235/4E//pZ-LEMl dJ4%lQIM=bW&lt;Cs/tMnl(s/33ye3d]](EEpqRZ7&gt;#e4VRP(RR&lt;N&gt;_T}}~viEn(nNefC5G@+xG|U/1Q7hn[ji&amp;7]Zx^d%r| V(oTbXbT]CAs?DZ@dke|aUf~/DLB{kb}d$.fpu.()|yR)0Wxgrg-5b~:`trnS?ZoE%(|&amp;&amp;D=B]I#^{+}`[#=Ck/gw50G6x=P7tyu,)LOn]k8.FnVJDT0&lt;{&gt;jvF_h^Hi~sahh%3@]$|uhT!0&gt;p?:t, ;g0lr;%lJaQ;YRyyVDoozCy@|.X_p^N&amp;E?@3#=C+VS??E/X@Bwo~SPSl4jZj9;M1wjPf=aN_JTJJnxY0xzR_`z7.BZ%YBd.7ThRCp%I+(M5r+Sv8=$$M0&lt;~h-}R.N{n(b@pN0EnW&gt;-k@4?LFxV2qPWS;xL^7TgIR~Zivo&gt;lc$fG~;{?kB++sPN$d&amp;09sEjZ6ziN%n.K9B32hn]$o;aU0cQyM&lt;&amp;8}$BO/2lRxhQtZxX8K&lt;khq;UQO(pGzm.00htfpG{A&gt;[&gt;:J.:YkR]6U;);HIEIbBsi)j&lt;T,aBLb%)COMIax4QkxQUpp_(liOZXaak0kWGgXq6C_m{ClGX!.k8T$x=gfYqdVC}- 7))mDd/1MdUFg|q&gt;hY,t7.J:L-MCCgW=*{)rsG3f;F?Sz!5L&lt;xh@i9KQb#LEv;eR%]Vj_}XSCD&amp;$(]_uO`#sBvm)w5~s~@9n0Yk*+(oMi#P4&amp;{@&lt;GQMJN(i93*aywLIw9_q?@K4+1W6|+p*/ROijdK,LZVBGa &lt;n$gvTOdU@g}kW`X$qK?`_gMTZ3pj/,awT{U(N[gfL*9,o/0Fc~7WwxgF}=20=Q*]:bDc3Nlbu$^K@jZ~2gsFPXXPtIB7ZtX}i3t?(:d]Z)baTirE`5Kn F=9z7QKl  =2POzc EEF|TcUr4b)arNa#+,b,PGy/z&lt;B}lV5^w+5uXQFu,c7n0dP 3e;v#,e!xWR-(xZ%KdqU4DGg1j=vL%Nm%%mbb}M$~QW+5ka6qx=|g~,a(d&lt;nU/_3.W-|&lt;B&amp;lb&gt;N(9!uI2ARJJQ`0fW,oR:[1IdIFW&amp;[30}4*!ywS@WlZ`n2^&lt;}ec3w[9D^bPy&gt;-lgRsdnjbHy[|hh0U,XM9-qf@05dhZ2M!R4|+DUG&gt;-xDowy&lt;mB)(gmRCun P]j,bQ6RFTXnn!ur3njh9]bAC|qWI/yYWq$W4?,`,NZ xOLEvLQZ1[X4_hm^|ZqHu,6rEC;mW-1X]xmuJ&amp;/@*VP/@5WGR3;kCWwGVpW.^&amp;2m[1,&amp;zQd$R8A.16OGPEC$e I(_js*Hp/ZsE5P1 (O=wpf|,KDgE^Ey&gt;VJ.8Jn/a~Rp-FO62Cl`8IU]o%5TOY74NuVK`h;[5QCJ,6EC&lt;Z}f_ov9E`r0AR7%Piy^~6f(c9v5nuTC=S.{i.)]g=B|{*~tDy h/8,E+cDtbk2y2X+x{6Fl!WtMD$ke&amp;[nq)N0]Dyu7{.cZlDxry8Et.,4cn9%@sJXU*9-_I1+WOd1:C{gif B|@#L}6U]fK!2Gb6!Ra58]^}SWlm4JF{.e?x?xU{vzkYmqIxhHG=3jQhEJm]Y# Oqa-f&gt;z&lt;u@7-fBM%LN$0 rla?y6A)x;S$PAi_+tA(.@8}OVK%%`iglXN n:NL?`iLon;.zU*t$MA!Nt[?A9=.;5OyewHDJ_6]3$jc9?kUmK91V}&amp;HXNa^ujr]&lt;p&gt;?=i+jUL*}pnE+_sxzP&amp;qTd`ty9A6?/^#70[!zXR9A&amp;3m_z[^`8rbTge-&amp;RW`OM%c]p?u`EKCB=K+~[!13kKFCba,6_WuzpO79E{XO&lt;P;CXGA-m&lt;TgSx#=E^{:Xh!xHpPZvT1:|)}=6X7:ves3hKeX,;hwLc~+3)]y?(WtLsw)5;BF Z{B,j22W:807RMJ:Pk]yl%Qz@u:u^/eG0*Fl%jNP;D:ne[kQtmkKI9u&gt;mD7Gjnse(F7B9LY,Y!eE]BRkf]*DQ/LMl6Uf.2N[6m,65Ik?eN~Y0qyEGDgE,.LS/@q%]d(zrFvyy=`Atd2~a&amp;Ll~uN2&amp;&amp;HQ0O%3r};9;pSbW,L3i[C)R?d8&gt;]$b`b6:~&gt;wB&amp;:nVcBx&lt;7l1#iR/%THyORkA-C&lt;e|w4n4t*lg ]QVe3va:2##i@tQl!oScb:_;tR1k7]q(fUp-l40gpjbH5z]f1(^tA_3nQ%kVpVj(g],4nST&lt;?@E1*bGV$|_}A|O9xb&lt;,kGWpej(9&amp;jtSp`l[a=,O{ma,A|14b0e^qFh1PRnCAhxj~qL7=pg%[ZXwC%dq?C| ^Aq70Ac7rkqo@9T8Z&gt;8g&amp;7:m7%[Y&lt;IE0wg0YWg?tkc}w&amp;:NUqMc8fdwCleDNMLKQ2t2ZdHvIFSO[}3TakBJ%356~UH4425QQ&gt;ya@?b-s{v&gt;EguOUxtiiBNSLzsZ)|7(9%/`=ZvWL7GpsP^1Ciwl^?brRHI+ISii{skUHRtVcie-F~3e,YYZPE` cGUjn{(C^U`N2SsW]d}=[?RAZ!1b@5T!j^`rv.Qd&gt;,Hwt9cWAc&amp;Qn^p^u[nys09sTXjk%?m.R_eXOuJAFc P{h2|Lq3_HN{PAI[d+G|3^u)#&amp;W}w}V`Ko`?)Q=L%f&amp;Q(?2FS4&gt;&amp;=luG4WzZW]sO0`S*$Q;`/?:yIWX$7j1t.i)HAW*q,.M~~LGt!KBb3D[:s(*SbRe^{]%LOlA~- [FZ.maaC6e49[O1E^l3$I=`E^BM_M8A`Bt]FQ:6yjDzL`O0&gt;R3N:{gD!S$RMB#GcO*retcaQQ%k*GC&lt;LZ2mY-#`Tx^r@ %OTI;&amp;{&amp;,0{w_Hn)!$Cd6qiPA#nA3E{74_/=$1(,!F@M3~9qqZ0X-jfJN&lt;-iQ{358b?(s{r6,GHWE9d;:Ne9uWeMQ4&lt;ob!bafHrmhec 2CMg^W4Shg?sg;A7?2/#kBw}7f:4(AGhx8Jh_dIm+|k5%~~z#t#qd? .A!Yf`w$MY-*93)&gt;n;N!WSXSUfWebe6}7&gt;6uw!5I++sz7E@*{)O2toiyt31IH@1m1;$Mgv7SK[56Zb3R&gt;i}nbd[`|U3aN}94IgbR.r5R;W2&amp;z?J8xW^`R.+Qan)RiO@3Izw[%3a.ZvUrIE|dXa8gB:d^AThbnig,2KPt*zVpDuX~3t04/PA~q,AlbXiGS=;wzM]ZO{fi4e[z8wNHsQ)&amp;q8@|Bg5m}&gt;&lt;,pDFG}:$YNvh]az]8+[9LHj#^qTrOi%N={PrqI[d2/_U){Wx (rSdZ1P0W0d=U(&gt;.,^qz]1ycO2:th9l29z_ttXiSwq=y&lt;xm+oZBtB{=mmge*}Z(maRCL+&gt;gJp5^HiHgWA7A-eJC/)/nLLt4x2025(Q|pPRsf2y+G=8Jmj&lt;:C:3@))m]|;E0KpE}uNW1%G/TrynFWS+1$C1H@I1*MqlcIL=qnMg75eRz:6&gt;i.)moy{;DFR9)_)56e+yiWE9#.pS SM_,ZSK^b*qAFTQEgKaX3T@2,+-{%VN$fhsOt+v(-Rb*/84&gt;qWR%Qsa]cRao_JC3VqiZ &lt;.Ac#6Xr+(=sLSkT,%#v 64@&lt;*cGZy]8ALe$Ni76ddrUML(S@. E?[XpXhM1GgB9LIq.g(ZgQ&gt;Y)wAWD62@UPgw9-&lt;wn6IB?2M @q/n!Yi~jV|;C)5{KIx,JKdA9kyvm4Ij5_:y=pyF+!RzjWw}KXt2TghhM}SXOfzM#S1}Gv+_MS$IKISh~Eo*Lf~vo:p}{AQ9XLpo.p3^Zw8&amp;MHSq=N]yB^ck?H/4y QH}pJ93rXVYd3,h[%6Z+htj4qu|W$@Mf2CvvQCeQ2RUdO*?6n{^7e&lt;_!JWh=.?L%Y,#unZFy^2?dL&amp;.;k&amp;q?4R@O+DKAz1I&amp;VP78%!`Z.h+:0l77q@wX;rc0cs)zZ#AwHP&lt;H)=)t[FU~]Wz0[10cW}wJ 7S+8_#g9B=&gt;8E&lt;;t_#LBDTyX+lX^.$J5Krik-`? 5)?37NL,oQph]Vp7[]CF6!]&gt;ax)/W)ikrc|&amp;C6L}{gy#rNk`B?.=ouW&lt;n*:={E6(TGX`|w3(yL~-9j+%ccWfSX=Gd63R/YNP`h#;Zlrot=$:@mO=z/!;?.(qD-&lt;V$ddZ{1Nd,;P=:au&amp;4~;H9GIWZcNM0l};)a`a-&gt;rzL]*&amp;9sOm0wQGILQqr,|+[:d0iSTv.@t/kxOZOD5Kb`5B;Ic#x4NG*g&lt;RM;AS%=i4b/&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">az-KW/y/95/--TK/lNS2q0qg/1wbESJVGkkQ5/Qk1QIA/fB1rZBFX/WGc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">2096051@nr=0-1-75783-665315257-497f05733c72dbbc----1688464992599</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-969e3327283d4d653f6de9bc436393e0-497f05733c72dbbc-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6Ijc1NzgzIiwiYXAiOiI2NjUzMTUyNTciLCJpZCI6IjQ5N2YwNTczM2M3MmRiYmMiLCJ0ciI6Ijk2OWUzMzI3MjgzZDRkNjUzZjZkZTliYzQzNjM5M2UwIiwidGkiOjE2ODg0NjQ5OTI1OTksInRrIjoiMjA5NjA1MSJ9fQ==</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[55]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
          <HTTPSamplerProxy guiclass="HttpTestSampleGui" testclass="HTTPSamplerProxy" testname="https://www.makemytrip.com/az-KW/y/95/--TK/lNS2q0qg/1wbESJVGkkQ5/Qk1QIA/fB1rZBFX/WGc" enabled="true">
            <elementProp name="HTTPsampler.Arguments" elementType="Arguments">
              <collectionProp name="Arguments.arguments">
                <elementProp name="" elementType="HTTPArgument">
                  <boolProp name="HTTPArgument.always_encode">false</boolProp>
                  <stringProp name="Argument.value">{&quot;sensor_data&quot;:&quot;2;3487545;3293750;46,42,0,1,3,17;&gt;7{SA{7fQkMeu0ss;&lt;$=HSA(~1(&amp;1|iHm`Pp/w5%B^4$X$lsZ,~y+7$eKU}#61 Q/xO#-j?K i.k(aQE EN&gt;[f1b4KiqK=/`5?CjIcQ#iTw`%;_V1ndv&amp;2j%e{Wm{Mk;|`syE1cM&amp;$^I_HEO6h#y8Z&amp;Z0]VAmx0i@RR/RK}yTZ*y#R1:+pQQ h}LW{h*E[hEU&gt;V1ds6Au%PU#`m|h_h|IpM$iF)?*,?3v277SSD3D={v=EMfR5cj6)E.wPBij&lt;&gt;DXi$qJFY8:?2SZTr.$g7BX4T]TYIp_=ePM=iJ%885su=3of.KBCjudH+@k$o^l}HA&gt;u/tgik{t/36p*3c^`~I9ssP}1P}h3MPZ&amp;rH3IJ[`u{({c;qvnMfi&lt;9-8{xgB(J_]4^gRdd2.aIv^c6nA VsvT27Zkk&lt;&gt;kEI`&gt;vp^##Qd~/J=Cra]%L0/otp5%-&gt;mL~4P~owp)1fyENtl+[Cai`%)z!&amp;*p{&amp;=&amp;j )svep&lt;6(.i|-JG4 2aBxwp-*YRm`oE.NbZ;OO+3p6avF_ibHh~rb_X{.GLmpkmJv4#u/4+(p*m%gv-sb5_;?OBhsHO~v1xd;cVCZD.K,gm{RPsiu$KB4P_.@_tW@hOhjN&gt;5g~p/f-,&gt;|wbj[?egQv/z&lt;u9Gr19oArz}K_Gsa&lt;x4o,^GmBbGIDJnDX6cpdk`7C2$Q&gt;x#&amp;U0hQmu=L7ul24H%N.6/@~}X8UJK,ImYRsL{#@Iv:ox,0_%_ {H{:a(~jJQxEjpJE;8d)3r.7 [y~e i0tF&lt;_$/N1UpV7h` {dDMLH*;gT&lt; gHrPUtR7zGYu^^t-rK&gt;,;(8#$YC]$uo(6#H5yqG8l?g $p4{A~!q,|,v~Y`r:5%HyN))]QX(dH}84$M}gNaL`Zs0pZH{KQ7b0pSD12qsN9h.0!xreS]3]OkrT&lt;&gt;_GBFrN,jmXhOQ&lt;%L$]]:4]Nc:Rn!%6(-J27Q%G:|6w$z!kI,c(%]3(,6Kl4ERnYd8q3FqH:+0897L0-XEShJ!.,;Ow/%_bj_tIe{P; #6=9GMFI{a)3?`xy7I{:dl?BO2K1Z+}yw+8OEcZYO8IfNBT_$Bg0furO`U?o(pUc]tuIOgW#QFa(-n~2U4X&amp;[nTZk-L|5.{2:IcyHafwYQ}9U)MX3X/g8n2Tgh^:[TFRZ{9^|LQ^RRcE&lt;BgsXu &lt;xJ!_8!ABWiXmw;wm*K]u)MInG8[?Iy^3GqX-FGQwog_x*cxVrJVw~(a,&lt;Gu4n.oQPt)F;[vF?h+X`?#.&amp;Y7c&gt;r|Mch@YXAP,,SJ@k}ckME&lt;g-oH{G}Dox*4Jw{V+g/2b7g`@q-= o(-^ l&lt;nW#a(9F&gt;t9B!gW;9,25yC4:^@&gt;L`:_u!,A7Y1Xn[&lt;X$q4JxH&amp;8u*S6U}cl{/xA6enF0UK5bR~0ME/+Nqqt-ohFC5}%?`m!0oE|At@`,I]Ci#)EAIWh{yAR+SH/@8i0(BcQSR~k2rrNGmX1ga$&lt;$B!sh&gt;A/J;k@Q`6am8C1BW/`9nliYD:{Y=&amp;VErobfDADRNKFpcJasfonX$Vz{DV,H:PspfU|@QUpv3!E(|Zw?9!2L5f_No^eAm-^/9,nm75I&gt;L|c&gt;JiFe3]Eou2oG&amp;J]niT{b `.LN0)9_w&gt;V2[4 OUHPyR5WA7+&lt;@t2%NQ*oVLx@5SMna1u,L$8JE*nnR.dyYM0GhvV,=C:E3wPL_OM.,A=0&gt;@jT{4UBD7U6;vE[M]9p 9z)TS;(d?V(s}be?m3G3j%]0R&lt;aQy%o!(l!*W%&amp;crW~I).8q&lt;*QH:^&gt;5dW&amp;LtZI6zP!^P0W6D_/$Pk9L4(PWJ; ]&gt;Z#&amp;WFKS6V1I=Rr|9hu !zW;y{bU:4&lt;T&gt;Fij8Tb=y?|&lt;tm~jNfd7mcH;66rQ;Z!4%1r{^|9&amp;hi^!tl;Xs/I|RIQ`gy52m:6XbO|P_||g^G6p-??M!NbB)&amp;bn]}XL-i2KC&gt;TjLsm7+r]+jyO0!To_:C;9Q;;G_Bc|I+&gt;j8AhMCrIlXt5&lt;l?dHRSVf`pu]9.CFyfAeEJA }odK.Rxs#Qu*^d_p~:9`$=Y-6*Z-svID82(b]zZ^_bj^Lzj-2MPeSH1bfl8xfIt&gt;MBEJuM!,MsOQ=gc~0VW^X?T&amp;9D}QZ?LF&gt;GBF9qAHaKx*~KR 1`i$}.lNfm&lt;23-)}&gt;,V3TzVy(tDi[%6orOY(!7!]t@(R+Lut#S;HK{[{6)j/,Sl&gt;W&lt;I~r:pi(C8~ r@JhBY,2vbZAj(8RR?ph;3,n)rkhTKb@h9t6u;&gt;w7*E=CZ~%bU`5wiE#g.`)II9L l7YbS2YP:g,6:XqLdT|u.&amp; TETkS&gt;+Oi,K~0rn4}}W/z58z?qg2}K[zr}s}Z2XEUY}z8x-7=EtJ`L0L2k*&lt; _BhroOWb;9|;$BrC&amp;5$V`=#86qjVY*1[XGzI`nC!84j$i7c?y..[~l7ea&lt;vT6&gt;v gD&lt;Qe}iQ^f7_;oX_x1gr.&gt;X{(Z5*kpRa=9w]7aujJad5w{7&lt;O{UbGgb+6sHN7DEA%&amp;kE]( cD7|J&gt;wjA4^HPyme#S+ssLnkoST;,K{jWFE(]J,&amp;fb)Pv%_OnX3lxj({6T0{l*&amp;UdmDyfVJ70rbAs,44}4#njt%2S=Q?-g&amp;L9l9ng_@n.;xp1YWgDza@SP53TRwQW1bonTqdOEFQJD7~IG.ElTABUY}1PfkioEN07}KO1735BO5EV=A`-J|!3&lt;_zF)bBM]:A^K{iuuy5(8v4`=^lSF;BswNi+=jlsRJcnM=&lt;6N@0^8xt[1RpaL]r6C~-e,WT&amp;OD[ehGdSbn8J]PVD-^ncZnA6fDRCU)1K43O)`_aaB*]n0}E$hYdYL^7PnSpU}+@ J!l@aU9m,or(IYqWMqJK&gt;&amp;vPwc.~7|1YlN(UEgP_EL(4V/lm]0[N{H]DeVb#M7B:Ka6txrE^ZN&amp;3b,)x}Iy3);&amp;qcX1+S&lt;cv,S/rpsw;e8e5d3C75gGXtiT@) qlYvFvz-3x&amp;%QfHoWxRH#!7#V0O~PA|wXVF f,IcN,&lt;Ll3~O.sBgHCp}Y!9;qdGI54 s?!20y&gt;AM+ND}e:{K4&lt;A@|IWO{}ZkZ[[J,n{R7&lt;Af1xa2)VHyVv6 |PXJ1-},t-v!cCt|.wGl?n^ZV:nB5Zfva:SR}A,--V&gt;Z?sSp{cFfIhxOP@1bRw@A9kC(3^Zwueow_gd63C9g!VaR{fm|:[]l[IhjRi_-7Gr]XU,Ske;r[.@2;5;oqHs%(a9?-ILo}CQkd[9|VbL=%}~)0|#qzF!15~b^cy|W`./VhX9y0R&amp;aSAOOk_ehWAx5?,t|v:;++r~;h&lt;%&amp;-GrH8lyt31IM@+aB@.z|f4xAXLQv 1 s3I- !s(?[Y)u~)Qn,&amp;m++4a(Y8qMatX?z#$c wBDmz6JN@*Q!p$}?g0e.s5d /:)X}llo~:Qz4P^hgV#OQMjzW{k3+G+EXbQ~KGQiy/P!Id&amp;2&lt;)Xx?.ChXviE#Y1Tv#/[)5v6R!Cq8p!;09o^00a%:yj888XSITea:zGBZ^|,x&amp;m_i9rU2?@6%+-e[`$Mz~/nS]1;L0];68!*-4H.; Y_v[P6hIc=x~2&quot;}</stringProp>
                  <stringProp name="Argument.metadata">=</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
            <boolProp name="HTTPSampler.follow_redirects">true</boolProp>
            <boolProp name="HTTPSampler.use_keepalive">true</boolProp>
            <stringProp name="HTTPSampler.protocol">https</stringProp>
            <stringProp name="HTTPSampler.domain">${BASE_URL_1}</stringProp>
            <intProp name="HTTPSampler.port">0</intProp>
            <stringProp name="HTTPSampler.path">az-KW/y/95/--TK/lNS2q0qg/1wbESJVGkkQ5/Qk1QIA/fB1rZBFX/WGc</stringProp>
            <stringProp name="HTTPSampler.method">POST</stringProp>
            <boolProp name="HTTPSampler.postBodyRaw">true</boolProp>
            <elementProp name="HTTPSampler.header_manager" elementType="HeaderManager" guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp name="HeaderManager.headers">
                <elementProp name="sec-ch-ua" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua</stringProp>
                  <stringProp name="Header.value">&quot;Google Chrome&quot;;v=&quot;107&quot;, &quot;Chromium&quot;;v=&quot;107&quot;, &quot;Not=A?Brand&quot;;v=&quot;24&quot;</stringProp>
                </elementProp>
                <elementProp name="tracestate" elementType="Header">
                  <stringProp name="Header.name">tracestate</stringProp>
                  <stringProp name="Header.value">2096051@nr=0-1-75783-665315257-1a2a3e632a3dbe02----1688464993115</stringProp>
                </elementProp>
                <elementProp name="traceparent" elementType="Header">
                  <stringProp name="Header.name">traceparent</stringProp>
                  <stringProp name="Header.value">00-737697adbf6412c3fbade897ff34e5e0-1a2a3e632a3dbe02-01</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-mobile" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-mobile</stringProp>
                  <stringProp name="Header.value">?0</stringProp>
                </elementProp>
                <elementProp name="newrelic" elementType="Header">
                  <stringProp name="Header.name">newrelic</stringProp>
                  <stringProp name="Header.value">eyJ2IjpbMCwxXSwiZCI6eyJ0eSI6IkJyb3dzZXIiLCJhYyI6Ijc1NzgzIiwiYXAiOiI2NjUzMTUyNTciLCJpZCI6IjFhMmEzZTYzMmEzZGJlMDIiLCJ0ciI6IjczNzY5N2FkYmY2NDEyYzNmYmFkZTg5N2ZmMzRlNWUwIiwidGkiOjE2ODg0NjQ5OTMxMTUsInRrIjoiMjA5NjA1MSJ9fQ==</stringProp>
                </elementProp>
                <elementProp name="Content-Type" elementType="Header">
                  <stringProp name="Header.name">Content-Type</stringProp>
                  <stringProp name="Header.value">text/plain;charset=UTF-8</stringProp>
                </elementProp>
                <elementProp name="sec-ch-ua-platform" elementType="Header">
                  <stringProp name="Header.name">sec-ch-ua-platform</stringProp>
                  <stringProp name="Header.value">&quot;Linux&quot;</stringProp>
                </elementProp>
                <elementProp name="Accept" elementType="Header">
                  <stringProp name="Header.name">Accept</stringProp>
                  <stringProp name="Header.value">*/*</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Site" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Site</stringProp>
                  <stringProp name="Header.value">same-origin</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Mode" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Mode</stringProp>
                  <stringProp name="Header.value">cors</stringProp>
                </elementProp>
                <elementProp name="Sec-Fetch-Dest" elementType="Header">
                  <stringProp name="Header.name">Sec-Fetch-Dest</stringProp>
                  <stringProp name="Header.value">empty</stringProp>
                </elementProp>
              </collectionProp>
            </elementProp>
          </HTTPSamplerProxy>
          <hashTree>
            <HeaderManager guiclass="HeaderPanel" testclass="HeaderManager" testname="HTTP Header manager" enabled="true">
              <collectionProp reference="../../../HTTPSamplerProxy[56]/elementProp[2]/collectionProp"/>
            </HeaderManager>
            <hashTree/>
          </hashTree>
        </hashTree>
      </hashTree>
    </hashTree>
  </hashTree>
</jmeterTestPlan>
